namespace = unrest

@unrest_event_cooldown = 360

###### These events have been repurposed:

planet_event = { # Now only for slave revolts
	id = unrest.50
	is_triggered_only = yes
	hide_window = yes

	pre_triggers = {
		has_owner = yes
		has_ground_combat = no
	}

	trigger = {
		planet_stability < @stabilitylevel2
		num_pops >= 10
		pop_percentage = {
			percentage >= 0.4
			limit = {
				is_enslaved = yes
				happiness < 60
			}
			exclude = { can_think = no }
		}
		has_orbital_bombardment = no
		exists = owner
		owner = {
			is_country_type = default
			NOT = { any_situation = { has_situation_flag = slave_sit_@root } }
		}
		NOR = {
			has_planet_flag = 3_year_owner_change_flag
			has_planet_flag = recent_revolt_attempt
		}
		is_doomsday_planet = no
		exists = controller
		controller = { is_same_value = root.owner }
		OR = {
			owner = { is_gestalt = yes }
			any_owned_species = { species_has_happiness_with_owner = root.owner }
		}
		# check_variable_arithmetic = { #will the revolt actually tick up?
		# 	which = value:potential_revolt_situation_monthly_progress_estimation
		# 	value > 0
		# }
	}

	immediate = {
		# set_timed_planet_flag = { # This doesnt work with the culture shock limit below, vanilla bug
		# 	flag = unrest_timer
		# 	days = 360
		# }

		if = { #Getting an impossible to prevent revolt due to culture shock is a bit harsh. (Planet can start with no jobs, for instance)
			limit = { has_culture_shock = yes }
			planet_event = { id = unrest.54 days = 1880 random = 180 } #at least 8 years after owner change (including the 3 years via 3_year_owner_change_flag)
		}
		else = {
			planet_event = { id = unrest.54 days = 300 random = 59 } #definitely within the next year
		}
	}
}

planet_event = { # Get Slave Revolt Planet
	id = unrest.54
	is_triggered_only = yes
	hide_window = yes

	pre_triggers = {
		has_owner = yes
		has_ground_combat = no
	}

	trigger = {
		planet_stability < @stabilitylevel2
		num_pops >= 10
		pop_percentage = {
			percentage >= 0.4
			limit = {
				is_enslaved = yes
				happiness < 60
			}
			exclude = { can_think = no }
		}
		has_orbital_bombardment = no
		exists = owner
		owner = {
			is_country_type = default
			NOT = { any_situation = { has_situation_flag = slave_sit_@root } }
		}
		NOR = {
			has_planet_flag = 3_year_owner_change_flag
			has_planet_flag = recent_revolt_attempt
		}
		is_doomsday_planet = no
		exists = controller
		controller = { is_same_value = root.owner }
		OR = {
			owner = { is_gestalt = yes }
			any_owned_species = { species_has_happiness_with_owner = root.owner }
		}
		# check_variable_arithmetic = { #will the revolt actually tick up?
		# 	which = value:potential_revolt_situation_monthly_progress_estimation
		# 	value > 0
		# }
	}

	immediate = {

		set_variable = { which = num_slave_rebels value = 0 }

		every_owned_pop = {
			limit = {
				is_enslaved = yes
				happiness < 60
			}
			prev = { change_variable = { which = num_slave_rebels value = 1 } }
		}

		set_timed_planet_flag = {
			flag = unrest_timer
			days = 30
		}

		if = {
			limit = { #Extra safety because it's possible for two planets to fire this delayed event on the same day and it will check the trigger before either of them can fire (as of March 2022)
				NOT = { owner = { any_situation = { is_situation_type = situation_civstrife_sep_slaves } } }
			}
			owner = { #Generally, one would expect the strongest planet to be the center of the revolt
				#Use case here is if you conquer a whole bunch of enemy planets at once.
				ordered_owned_planet = {
					position = 0
					order_by = num_slave_rebels
					limit = {
						has_planet_flag = unrest_timer
						planet_stability < @stabilitylevel2
						has_orbital_bombardment = no
						has_ground_combat = no
						NOR = {
							has_planet_flag = 3_year_owner_change_flag
							has_planet_flag = recent_revolt_attempt
						}
						exists = controller
						controller = { is_same_value = root.owner }
						OR = {
							owner = { is_gestalt = yes }
							any_owned_species = { species_has_happiness_with_owner = root.owner }
						}
						# check_variable_arithmetic = { #will the revolt actually tick up?
						# 	which = value:potential_revolt_situation_monthly_progress_estimation
						# 	value > 0
						# }
					}
					planet_event = { id = unrest.55 }
				}
			}
		}
	}

	after = {
		clear_variable = num_slave_rebels
	}
}

planet_event = { # Slave Situation start event
	id = unrest.55
	title = unrest.55.name
	desc = {
		trigger = {
			owner = { is_gestalt = no }
		}
		text = unrest.55.desc.slave
	}
	desc = {
		trigger = {
			owner = { is_gestalt = yes }
		}
		text = unrest.55.desc.gestalt_standard
	}
	picture = GFX_evt_night_raid
	show_sound = {
		sound = advisor_notification_planet_in_revolt
		sound_is_advisor = yes
	}
	location = root
	is_triggered_only = yes
	situation = event_target:new_situation

	immediate = {
		owner = {
			start_situation = {
				type = situation_civstrife_sep_slaves
				target = root
				effect = {
					save_event_target_as = new_situation
					set_situation_flag = slave_revolt
					set_situation_flag = slave_sit_@root
				}
			}
		}
	}

	option = {
		name = unrest.55.A

		tooltip = {
			owner = {
				start_situation = {
					type = situation_civstrife_sep_slaves
					target = root
				}
			}
		}
	}
}

situation_event = { ### Stability Revolt - Faction Check - currently unused
	id = unrest.100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		situation_progress > 25
		NOT = { has_situation_flag = 25_percent_event }
	}

	immediate = {
		set_situation_flag = 25_percent_event

		owner = { # 30% or more pops on planet, revolt can take ethical shape. Increased severity, coordination.
			
		}

		target = {
			set_timed_planet_flag = {
				flag = recent_unrest_event
				days = @unrest_event_cooldown
			}
			random_list = {
				1 = {
					planet_event = { id = unrest.115 }
					root = { set_situation_flag = spiritualist }
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_spiritualist
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_spiritualist }
						}
						mode = add
					}
					modifier = {
						factor = 0.5
						owner = { is_spiritualist = yes }
					}
				}
				1 = {
					planet_event = { id = unrest.120 }
					root = { set_situation_flag = authoritarian }
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_authoritarian
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_authoritarian }
						}
						mode = add
					}
					modifier = {
						factor = 0.5
						owner = { is_authoritarian = yes }
					}
					modifier = {
						factor = 0.5
						owner = { is_imperial = yes }
					}
					modifier = {
						factor = 2
						owner = { is_democracy = yes }
					}
				}
				1 = {
					planet_event = { id = unrest.125 }
					root = { set_situation_flag = xenophobe }
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_xenophobe
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_xenophobe }
						}
						mode = add
					}
					modifier = {
						factor = 0
						owner = { has_comms_with_alien_empire = no }
					}
					modifier = {
						factor = 0.25
						NOT = {
							any_owned_pop = {
								NOT = { is_same_species = owner }
								pop_has_happiness = no
							}
						}
					}
					modifier = {
						factor = 0.5
						owner = { is_xenophobe = yes }
					}
					modifier = {
						factor = 0.5
						is_majority_species = owner
					}
					modifier = {
						factor = 2
						NOT = { is_majority_species = owner }
					}
				}
				1 = {
					planet_event = { id = unrest.130 }
					root = { set_situation_flag = spiritualist }
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_materialist
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_materialist }
						}
						mode = add
					}
					modifier = {
						factor = 0.5
						owner = { is_materialist = yes }
					}
				}
				1 = {
					planet_event = { id = unrest.135 }
					root = { set_situation_flag = xenophile }
					modifier = {
						factor = 0
						owner = { has_comms_with_alien_empire = no }
					}
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_xenophile
							}
						}
					}
					modifier = {
						factor = 0.25
						NOT = {
							any_owned_pop = {
								NOT = { is_same_species = owner }
								pop_has_happiness = no
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_xenophile }
						}
						mode = add
					}
					modifier = {
						factor = 0.5
						owner = { is_xenophile = yes }
					}
				}
				1 = {
					planet_event = { id = unrest.140 }
					root = { set_situation_flag = egalitarian }
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_egalitarian
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_egalitarian }
						}
						mode = add
					}
					modifier = {
						factor = 0.5
						owner = { is_egalitarian = yes }
					}
					modifier = {
						factor = 0.5
						owner = { is_democracy = yes }
					}
					modifier = {
						factor = 2
						owner = { is_imperial = yes }
					}
				}
				1 = {
					planet_event = { id = unrest.145 }
					root = { set_situation_flag = pacifist }
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_pacifist
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_pacifist }
						}
						mode = add
					}
					modifier = {
						factor = 0.5
						owner = { is_pacifist = yes }
					}
					modifier = {
						factor = 2
						owner = { is_at_war = yes }
					}
				}
				1 = {
					planet_event = { id = unrest.150 }
					root = { set_situation_flag = militarist }
					modifier = {
						factor = 0
						NOT = {
							any_owned_pop = {
								has_ethic = ethic_militarist
							}
						}
					}
					complex_trigger_modifier = {
						trigger = count_owned_pop
						parameters = {
							limit = { has_ethic = ethic_militarist }
						}
						mode = add
					}
					modifier = {
						factor = 0.5
						owner = { is_militarist = yes }
					}
					modifier = {
						factor = 0.75
						owner = { is_at_war = yes }
					}
				}
				1 = {
					if = {
						limit = {
							owner = { is_hive_empire = yes }
						}
						root = { set_situation_flag = hive }
					}
					else_if = {
						limit = {
							owner = { is_machine_empire = yes }
						}
						root = { set_situation_flag = machine }
					}
					#Nothing else. We don't really need an event here for them.

					modifier = {
						factor = 0
						OR = {
							owner = { is_gestalt = no }
							count_owned_pop = {
								limit = {
									is_gestalt = no
								}
								count = 0
							}
						}
					}
				}
			}
		}
	}
}


# These events are still important and are used.
### Random events

# Unrest: Terror
situation_event = {
	id = unrest.101
	title = unrest.101.name
	desc = unrest.101.civstrife.desc
	picture = GFX_evt_night_raid
	show_sound = event_air_raid_siren
	location = event_target:target_planet
	is_triggered_only = yes
	situation = this

	trigger = {
		situation_progress >= 30
		NOT = { has_situation_flag = random_event_happened }
		owner = {
			is_country_type_with_subjects = yes
			is_gestalt = no
		}
		target = {
			any_owned_pop = {
				planet = {
					exists = controller
					controller = { is_same_value = root.owner }
					planet_stability < @stabilitylevel2
					NOT = { has_planet_flag = recent_unrest_event }
					has_orbital_bombardment = no
					has_ground_combat = no
				}
			}	
		}
	}

	immediate = {
		set_timed_situation_flag = { flag = random_event_happened days = 360 }
		target = {
			random_owned_pop = {
				limit = {
					planet = {
						exists = controller
						controller = { is_same_value = root.owner }
						planet_stability < @stabilitylevel2
						NOT = { has_planet_flag = recent_unrest_event }
						has_orbital_bombardment = no
						has_ground_combat = no
					}
				}
				planet = {
					add_modifier = {
						modifier = minor_terrorist_action
						days = 3600 # 10 years
					}
					set_timed_planet_flag = {
						flag = recent_unrest_event
						days = @unrest_event_cooldown
					}
					save_event_target_as = target_planet
				}
			}
		}
	}

	option = {
		name = UNFORTUNATE
		tooltip = {
			event_target:target_planet = {
				add_modifier = {
					modifier = minor_terrorist_action
					days = 3600 # 10 years
				}
			}
		}
	}
}

# Unrest: Severe Terror
situation_event = {
	id = unrest.105
	title = unrest.105.name
	desc = unrest.105.civstrife.desc
	picture = GFX_evt_night_raid
	show_sound = event_air_raid_siren
	location = event_target:target_planet
	is_triggered_only = yes
	situation = this

	trigger = {
		situation_progress >= 30
		NOT = { has_situation_flag = random_event_happened }
		owner = {
			is_country_type_with_subjects = yes
			is_gestalt = no
		}
		target = {
			any_owned_pop = {
				planet = {
					exists = controller
					controller = { is_same_value = root.owner }
					planet_stability < @stabilitylevel2
					NOT = { has_planet_flag = recent_unrest_event }
					has_orbital_bombardment = no
					has_ground_combat = no
				}
			}	
		}
	}

	immediate = {
		set_timed_situation_flag = { flag = random_event_happened days = 360 }
		target = {
			random_owned_pop = {
				limit = {
					planet = {
						exists = controller
						controller = { is_same_value = root.owner }
						planet_stability < @stabilitylevel2
						NOT = { has_planet_flag = recent_unrest_event }
						has_orbital_bombardment = no
						has_ground_combat = no
					}
				}
				planet = {
					add_modifier = {
						modifier = major_terrorist_action
						days = 7200 # 20 years
					}
					set_timed_planet_flag = {
						flag = recent_unrest_event
						days = @unrest_event_cooldown
					}
					save_event_target_as = target_planet
				}
			}
		}
	}

	option = {
		name = UNFORTUNATE
		tooltip = {
			event_target:target_planet = {
				add_modifier = {
					modifier = major_terrorist_action
					days = 7200 # 20 years
				}
			}
		}
	}
}

# Unrest : Keeping the Peace
situation_event = {
	id = unrest.110
	title = unrest.110.name
	desc = unrest.110.desc
	picture = GFX_evt_announcement
	show_sound = event_announcement
	location = root.target
	is_triggered_only = yes
	situation = this

	trigger = {
		situation_progress >= 30
		NOT = { has_situation_flag = random_event_happened }
		owner = {
			is_country_type = default
			is_gestalt = no
		}
		target = {
			exists = controller
			controller = { is_same_value = root.owner }
			planet_stability < @stabilitylevel2
			planet_stability >= @stabilitylevel1
			NOT = { has_planet_flag = recent_unrest_event }
			has_orbital_bombardment = no
			has_ground_combat = no
		}
	}

	immediate = {
		set_situation_flag = random_event_happened
		target = {
			add_modifier = {
				modifier = riots_averted
				days = 3600 # 10 years
			}
			set_timed_planet_flag = {
				flag = recent_unrest_event
				days = @unrest_event_cooldown
			}
		}
	}

	option = {
		name = GOOD
		tooltip = {
			target = {
				add_modifier = {
					modifier = riots_averted
					days = 3600 # 20 years
				}
			}
		}
	}
}

# Extra slave revolt content

# Resistance: Sabotage
planet_event = {
	id = unrest.156
	title = unrest.156.name
	desc = unrest.156.desc
	picture = GFX_evt_night_raid
	show_sound = event_ship_explosion
	location = event_target:revolt_planet
	situation = from

	is_triggered_only = yes

	immediate = {
		add_planet_devastation = 30
	}
	option = {
		name = unrest.156.a
		tooltip = { add_planet_devastation = 30 }
	}
	option = {
		name = unrest.156.b
		tooltip = { add_planet_devastation = 30 }
	}
}

# Riots
situation_event = {
	id = unrest.157
	title = unrest.157.name
	desc = unrest.157.desc
	picture = GFX_evt_surrender
	show_sound = event_planetary_riot
	location = target
	situation = this

	trigger = {
		situation_progress >= 20
		has_situation_flag = slave_revolt
		NOT = { has_situation_flag = slave_riots }
		owner = { is_country_type = default }
		target = {
			exists = controller
			controller = { is_same_value = root.owner }
			planet_stability < @stabilitylevel2
			NOT = { has_planet_flag = recent_unrest_event }
			has_orbital_bombardment = no
			has_ground_combat = no
		}
	}

	is_triggered_only = yes

	immediate = {
		set_situation_flag = random_event_happened
		set_situation_flag = slave_riots
		target = {
			set_timed_planet_flag = {
				flag = recent_unrest_event
				days = @unrest_event_cooldown
			}
			add_modifier = {
				modifier = slave_riots
				days = 3600
			}
		}
	}
	option = {
		name = unrest.157.a
	}
	option = {
		name = unrest.157.b
	}
	after = {
		tooltip = {
			target = {
				add_modifier = {
					modifier = slave_riots
					days = 3600
				}
			}
		}
	}
}

# Resistance: hunger strike
situation_event = {
	id = unrest.159
	title = unrest.159.name
	desc = unrest.159.desc
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot
	location = target
	situation = this

	trigger = {
		situation_progress >= 20
		has_situation_flag = slave_revolt
		NOT = { has_situation_flag = slave_hunger_strikes }
		owner = { is_country_type = default }
		target = {
			exists = controller
			controller = { is_same_value = root.owner }
			planet_stability < @stabilitylevel2
			NOT = { has_planet_flag = recent_unrest_event }
			has_orbital_bombardment = no
			has_ground_combat = no
		}
	}

	is_triggered_only = yes

	immediate = {
		set_situation_flag = random_event_happened
		set_situation_flag = slave_hunger_strikes
		target = {
			set_timed_planet_flag = {
				flag = recent_unrest_event
				days = @unrest_event_cooldown
			}
			add_modifier = {
				modifier = slave_hunger_strike
				days = 1800
			}
		}
	}

	option = {
		name = unrest.159.a
	}
	option = {
		name = unrest.159.b
	}
	after = {
		tooltip = {
			target = {
				add_modifier = {
					modifier = slave_hunger_strike
					days = 1800
				}
			}
		}
	}
}