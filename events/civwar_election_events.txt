
###############################
### Civil Wars by MrFunEGUY ###
###############################

namespace = civelection

# Election dispute triggered
country_event = {
	id = civelection.1000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		num_owned_planets > 1
		count_pop_faction = {
			count > 1
		}
		NOR = {
			years_passed <= 50
			# is_subject = yes
			has_ethic = ethic_gestalt_consciousness
		}
	}

	immediate = {

		# Get Ruling Party
		random_pop_faction = {
			limit = {
				leader = { leader_class = ruler }
			}
			save_event_target_as = ruling_party
		}

		# Count how many parties there are
		if = {
			limit = {
				count_pop_faction = {
					count = 2
				}
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						NOT = { leader_class = ruler }
					}
				}
				set_pop_faction_flag = civil_war_grievance_party
				leader = { set_leader_flag = civil_war_disputed_leader }
			}
			set_variable = { which = non_power_parties value = 1 }
		}
		else_if = {
			limit = {
				count_pop_faction = {
					count = 3
				}
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						NOT = { leader_class = ruler }
					}
				}
				set_pop_faction_flag = civil_war_grievance_party
				leader = { set_leader_flag = civil_war_disputed_leader }
			}
			set_variable = { which = non_power_parties value = 2 }
		}
		else_if = {
			limit = {
				count_pop_faction = {
					count = 4
				}
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						NOT = { leader_class = ruler }
					}
				}
				set_pop_faction_flag = civil_war_grievance_party
				leader = { set_leader_flag = civil_war_disputed_leader }
			}
			set_variable = { which = non_power_parties value = 3 }
		}
		else_if = {
			limit = {
				count_pop_faction = {
					count = 5
				}
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						NOT = { leader_class = ruler }
					}
				}
				set_pop_faction_flag = civil_war_grievance_party
				leader = { set_leader_flag = civil_war_disputed_leader }
			}
			set_variable = { which = non_power_parties value = 4 }
		}
		else_if = {
			limit = {
				count_pop_faction = {
					count = 6
				}
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						NOT = { leader_class = ruler }
					}
				}
				set_pop_faction_flag = civil_war_grievance_party
				leader = { set_leader_flag = civil_war_disputed_leader }
			}
			set_variable = { which = non_power_parties value = 5 }
		}
		else_if = {
			limit = {
				count_pop_faction = {
					count = 7
				}
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						NOT = { leader_class = ruler }
					}
				}
				set_pop_faction_flag = civil_war_grievance_party
				leader = { set_leader_flag = civil_war_disputed_leader }
			}
			set_variable = { which = non_power_parties value = 6 }
		}
		else_if = {
			limit = {
				count_pop_faction = {
					count = 8
				}
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						NOT = { leader_class = ruler }
					}
				}
				set_pop_faction_flag = civil_war_grievance_party
				leader = { set_leader_flag = civil_war_disputed_leader }
			}
			set_variable = { which = non_power_parties value = 7 }
		}
		else_if = {
			limit = {
				count_pop_faction = {
					count = 9
				}
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						NOT = { leader_class = ruler }
					}
				}
				set_pop_faction_flag = civil_war_grievance_party
				leader = { set_leader_flag = civil_war_disputed_leader }
			}
			set_variable = { which = non_power_parties value = 8 }
		}
		else_if = {
			limit = {
				count_pop_faction = {
					count = 10
				}
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						NOT = { leader_class = ruler }
					}
				}
				set_pop_faction_flag = civil_war_grievance_party
				leader = { set_leader_flag = civil_war_disputed_leader }
			}
			set_variable = { which = non_power_parties value = 9 }
		}

		# Assign parties as event targets
		if = {
			limit = { check_variable = { which = non_power_parties value >= 1 } }
			random_pop_faction = {
				limit = { has_pop_faction_flag = civil_war_grievance_party }
				remove_pop_faction_flag = civil_war_grievance_party
				save_event_target_as = party_1
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 2 } }
			random_pop_faction = {
				limit = { has_pop_faction_flag = civil_war_grievance_party }
				remove_pop_faction_flag = civil_war_grievance_party
				save_event_target_as = party_2
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 3 } }
			random_pop_faction = {
				limit = { has_pop_faction_flag = civil_war_grievance_party }
				remove_pop_faction_flag = civil_war_grievance_party
				save_event_target_as = party_3
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 4 } }
			random_pop_faction = {
				limit = { has_pop_faction_flag = civil_war_grievance_party }
				remove_pop_faction_flag = civil_war_grievance_party
				save_event_target_as = party_4
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 5 } }
			random_pop_faction = {
				limit = { has_pop_faction_flag = civil_war_grievance_party }
				remove_pop_faction_flag = civil_war_grievance_party
				save_event_target_as = party_5
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 6 } }
			random_pop_faction = {
				limit = { has_pop_faction_flag = civil_war_grievance_party }
				remove_pop_faction_flag = civil_war_grievance_party
				save_event_target_as = party_6
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 7 } }
			random_pop_faction = {
				limit = { has_pop_faction_flag = civil_war_grievance_party }
				remove_pop_faction_flag = civil_war_grievance_party
				save_event_target_as = party_7
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 8 } }
			random_pop_faction = {
				limit = { has_pop_faction_flag = civil_war_grievance_party }
				remove_pop_faction_flag = civil_war_grievance_party
				save_event_target_as = party_8
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 9 } }
			random_pop_faction = {
				limit = { has_pop_faction_flag = civil_war_grievance_party }
				remove_pop_faction_flag = civil_war_grievance_party
				save_event_target_as = party_9
			}
		}

		# Get party support levels
		if = {
			limit = { check_variable = { which = non_power_parties value >= 1 } }
			event_target:party_1 = {
				export_trigger_value_to_variable = {
					trigger = support
					variable = party_1_support
				}
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 2 } }
			event_target:party_2 = {
				export_trigger_value_to_variable = {
					trigger = support
					variable = party_2_support
				}
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 3 } }
			event_target:party_3 = {
				export_trigger_value_to_variable = {
					trigger = support
					variable = party_3_support
				}
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 4 } }
			event_target:party_4 = {
				export_trigger_value_to_variable = {
					trigger = support
					variable = party_4_support
				}
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 5 } }
			event_target:party_5 = {
				export_trigger_value_to_variable = {
					trigger = support
					variable = party_5_support
				}
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 6 } }
			event_target:party_6 = {
				export_trigger_value_to_variable = {
					trigger = support
					variable = party_6_support
				}
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 7 } }
			event_target:party_7 = {
				export_trigger_value_to_variable = {
					trigger = support
					variable = party_7_support
				}
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 8 } }
			event_target:party_8 = {
				export_trigger_value_to_variable = {
					trigger = support
					variable = party_8_support
				}
			}
		}
		if = {
			limit = { check_variable = { which = non_power_parties value >= 9 } }
			event_target:party_9 = {
				export_trigger_value_to_variable = {
					trigger = support
					variable = party_9_support
				}
			}
		}

		# Get largest party
		if = {
			limit = { check_variable = { which = non_power_parties value = 1 } }
			event_target:party_1 = {
				save_event_target_as = grievance_party
			}
		}
		else_if = {
			limit = { check_variable = { which = non_power_parties value = 2 } }
			if = {
				limit = {
					check_variable = {
						which = party_1_support
						value > party_2_support
					}
				}
				event_target:party_1 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = party_2_support
						value > party_1_support
					}
				}
				event_target:party_2 = {
					save_event_target_as = grievance_party
				}
			}
			# In the event that the parties have the same support level. I'll probably want a way to make this better eventually.
			else = {
				random_list = {
					50 = {
						event_target:party_1 = {
							save_event_target_as = grievance_party
						}
					}
					50 = {
						event_target:party_2 = {
							save_event_target_as = grievance_party
						}
					}
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = non_power_parties value = 3 } }
			if = {
				limit = {
					AND = {
						check_variable = {
							which = party_1_support
							value > party_2_support
						}
						check_variable = {
							which = party_1_support
							value > party_3_support
						}
					}
				}
				event_target:party_1 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_2_support
							value > party_1_support
						}
						check_variable = {
							which = party_2_support
							value > party_3_support
						}
					}
				}
				event_target:party_2 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_3_support
							value > party_1_support
						}
						check_variable = {
							which = party_3_support
							value > party_2_support
						}
					}
				}
				event_target:party_3 = {
					save_event_target_as = grievance_party
				}
			}
			# In the event that the parties have the same support level. I'll probably want a way to make this better eventually.
			else = {
				random_list = {
					33 = {
						event_target:party_1 = {
							save_event_target_as = grievance_party
						}
					}
					33 = {
						event_target:party_2 = {
							save_event_target_as = grievance_party
						}
					}
					33 = {
						event_target:party_3 = {
							save_event_target_as = grievance_party
						}
					}
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = non_power_parties value = 4 } }
			if = {
				limit = {
					AND = {
						check_variable = {
							which = party_1_support
							value > party_2_support
						}
						check_variable = {
							which = party_1_support
							value > party_3_support
						}
						check_variable = {
							which = party_1_support
							value > party_4_support
						}
					}
				}
				event_target:party_1 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_2_support
							value > party_1_support
						}
						check_variable = {
							which = party_2_support
							value > party_3_support
						}
						check_variable = {
							which = party_2_support
							value > party_4_support
						}
					}
				}
				event_target:party_2 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_3_support
							value > party_1_support
						}
						check_variable = {
							which = party_3_support
							value > party_2_support
						}
						check_variable = {
							which = party_3_support
							value > party_4_support
						}
					}
				}
				event_target:party_3 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_4_support
							value > party_1_support
						}
						check_variable = {
							which = party_4_support
							value > party_2_support
						}
						check_variable = {
							which = party_4_support
							value > party_3_support
						}
					}
				}
				event_target:party_4 = {
					save_event_target_as = grievance_party
				}
			}
			# In the event that the parties have the same support level. I'll probably want a way to make this better eventually.
			else = {
				random_list = {
					25 = {
						event_target:party_1 = {
							save_event_target_as = grievance_party
						}
					}
					25 = {
						event_target:party_2 = {
							save_event_target_as = grievance_party
						}
					}
					25 = {
						event_target:party_3 = {
							save_event_target_as = grievance_party
						}
					}
					25 = {
						event_target:party_4 = {
							save_event_target_as = grievance_party
						}
					}
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = non_power_parties value = 5 } }
			if = {
				limit = {
					AND = {
						check_variable = {
							which = party_1_support
							value > party_2_support
						}
						check_variable = {
							which = party_1_support
							value > party_3_support
						}
						check_variable = {
							which = party_1_support
							value > party_4_support
						}
						check_variable = {
							which = party_1_support
							value > party_5_support
						}
					}
				}
				event_target:party_1 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_2_support
							value > party_1_support
						}
						check_variable = {
							which = party_2_support
							value > party_3_support
						}
						check_variable = {
							which = party_2_support
							value > party_4_support
						}
						check_variable = {
							which = party_2_support
							value > party_5_support
						}
					}
				}
				event_target:party_2 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_3_support
							value > party_1_support
						}
						check_variable = {
							which = party_3_support
							value > party_2_support
						}
						check_variable = {
							which = party_3_support
							value > party_4_support
						}
						check_variable = {
							which = party_3_support
							value > party_5_support
						}
					}
				}
				event_target:party_3 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_4_support
							value > party_1_support
						}
						check_variable = {
							which = party_4_support
							value > party_2_support
						}
						check_variable = {
							which = party_4_support
							value > party_3_support
						}
						check_variable = {
							which = party_4_support
							value > party_5_support
						}
					}
				}
				event_target:party_4 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_5_support
							value > party_1_support
						}
						check_variable = {
							which = party_5_support
							value > party_2_support
						}
						check_variable = {
							which = party_5_support
							value > party_3_support
						}
						check_variable = {
							which = party_5_support
							value > party_4_support
						}
					}
				}
				event_target:party_5 = {
					save_event_target_as = grievance_party
				}
			}
			# In the event that the parties have the same support level. I'll probably want a way to make this better eventually.
			else = {
				random_list = {
					20 = {
						event_target:party_1 = {
							save_event_target_as = grievance_party
						}
					}
					20 = {
						event_target:party_2 = {
							save_event_target_as = grievance_party
						}
					}
					20 = {
						event_target:party_3 = {
							save_event_target_as = grievance_party
						}
					}
					20 = {
						event_target:party_4 = {
							save_event_target_as = grievance_party
						}
					}
					20 = {
						event_target:party_5 = {
							save_event_target_as = grievance_party
						}
					}
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = non_power_parties value = 6 } }
			if = {
				limit = {
					AND = {
						check_variable = {
							which = party_1_support
							value > party_2_support
						}
						check_variable = {
							which = party_1_support
							value > party_3_support
						}
						check_variable = {
							which = party_1_support
							value > party_4_support
						}
						check_variable = {
							which = party_1_support
							value > party_5_support
						}
						check_variable = {
							which = party_1_support
							value > party_6_support
						}
					}
				}
				event_target:party_1 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_2_support
							value > party_1_support
						}
						check_variable = {
							which = party_2_support
							value > party_3_support
						}
						check_variable = {
							which = party_2_support
							value > party_4_support
						}
						check_variable = {
							which = party_2_support
							value > party_5_support
						}
						check_variable = {
							which = party_2_support
							value > party_6_support
						}
					}
				}
				event_target:party_2 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_3_support
							value > party_1_support
						}
						check_variable = {
							which = party_3_support
							value > party_2_support
						}
						check_variable = {
							which = party_3_support
							value > party_4_support
						}
						check_variable = {
							which = party_3_support
							value > party_5_support
						}
						check_variable = {
							which = party_3_support
							value > party_6_support
						}
					}
				}
				event_target:party_3 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_4_support
							value > party_1_support
						}
						check_variable = {
							which = party_4_support
							value > party_2_support
						}
						check_variable = {
							which = party_4_support
							value > party_3_support
						}
						check_variable = {
							which = party_4_support
							value > party_5_support
						}
						check_variable = {
							which = party_4_support
							value > party_6_support
						}
					}
				}
				event_target:party_4 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_5_support
							value > party_1_support
						}
						check_variable = {
							which = party_5_support
							value > party_2_support
						}
						check_variable = {
							which = party_5_support
							value > party_3_support
						}
						check_variable = {
							which = party_5_support
							value > party_4_support
						}
						check_variable = {
							which = party_2_support
							value > party_6_support
						}
					}
				}
				event_target:party_5 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_6_support
							value > party_1_support
						}
						check_variable = {
							which = party_6_support
							value > party_2_support
						}
						check_variable = {
							which = party_6_support
							value > party_3_support
						}
						check_variable = {
							which = party_6_support
							value > party_4_support
						}
						check_variable = {
							which = party_6_support
							value > party_5_support
						}
					}
				}
				event_target:party_6 = {
					save_event_target_as = grievance_party
				}
			}
			# In the event that the parties have the same support level. I'll probably want a way to make this better eventually.
			else = {
				random_list = {
					16 = {
						event_target:party_1 = {
							save_event_target_as = grievance_party
						}
					}
					16 = {
						event_target:party_2 = {
							save_event_target_as = grievance_party
						}
					}
					16 = {
						event_target:party_3 = {
							save_event_target_as = grievance_party
						}
					}
					16 = {
						event_target:party_4 = {
							save_event_target_as = grievance_party
						}
					}
					16 = {
						event_target:party_5 = {
							save_event_target_as = grievance_party
						}
					}
					16 = {
						event_target:party_6 = {
							save_event_target_as = grievance_party
						}
					}
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = non_power_parties value = 7 } }
			if = {
				limit = {
					AND = {
						check_variable = {
							which = party_1_support
							value > party_2_support
						}
						check_variable = {
							which = party_1_support
							value > party_3_support
						}
						check_variable = {
							which = party_1_support
							value > party_4_support
						}
						check_variable = {
							which = party_1_support
							value > party_5_support
						}
						check_variable = {
							which = party_1_support
							value > party_6_support
						}
						check_variable = {
							which = party_1_support
							value > party_7_support
						}
					}
				}
				event_target:party_1 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_2_support
							value > party_1_support
						}
						check_variable = {
							which = party_2_support
							value > party_3_support
						}
						check_variable = {
							which = party_2_support
							value > party_4_support
						}
						check_variable = {
							which = party_2_support
							value > party_5_support
						}
						check_variable = {
							which = party_2_support
							value > party_6_support
						}
						check_variable = {
							which = party_2_support
							value > party_7_support
						}
					}
				}
				event_target:party_2 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_3_support
							value > party_1_support
						}
						check_variable = {
							which = party_3_support
							value > party_2_support
						}
						check_variable = {
							which = party_3_support
							value > party_4_support
						}
						check_variable = {
							which = party_3_support
							value > party_5_support
						}
						check_variable = {
							which = party_3_support
							value > party_6_support
						}
						check_variable = {
							which = party_3_support
							value > party_7_support
						}
					}
				}
				event_target:party_3 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_4_support
							value > party_1_support
						}
						check_variable = {
							which = party_4_support
							value > party_2_support
						}
						check_variable = {
							which = party_4_support
							value > party_3_support
						}
						check_variable = {
							which = party_4_support
							value > party_5_support
						}
						check_variable = {
							which = party_4_support
							value > party_6_support
						}
						check_variable = {
							which = party_4_support
							value > party_7_support
						}
					}
				}
				event_target:party_4 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_5_support
							value > party_1_support
						}
						check_variable = {
							which = party_5_support
							value > party_2_support
						}
						check_variable = {
							which = party_5_support
							value > party_3_support
						}
						check_variable = {
							which = party_5_support
							value > party_4_support
						}
						check_variable = {
							which = party_5_support
							value > party_6_support
						}
						check_variable = {
							which = party_5_support
							value > party_7_support
						}
					}
				}
				event_target:party_5 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_6_support
							value > party_1_support
						}
						check_variable = {
							which = party_6_support
							value > party_2_support
						}
						check_variable = {
							which = party_6_support
							value > party_3_support
						}
						check_variable = {
							which = party_6_support
							value > party_4_support
						}
						check_variable = {
							which = party_6_support
							value > party_5_support
						}
						check_variable = {
							which = party_6_support
							value > party_7_support
						}
					}
				}
				event_target:party_6 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_7_support
							value > party_1_support
						}
						check_variable = {
							which = party_7_support
							value > party_2_support
						}
						check_variable = {
							which = party_7_support
							value > party_3_support
						}
						check_variable = {
							which = party_7_support
							value > party_4_support
						}
						check_variable = {
							which = party_7_support
							value > party_5_support
						}
						check_variable = {
							which = party_7_support
							value > party_6_support
						}
					}
				}
				event_target:party_7 = {
					save_event_target_as = grievance_party
				}
			}
			# In the event that the parties have the same support level. I'll probably want a way to make this better eventually.
			else = {
				random_list = {
					14 = {
						event_target:party_1 = {
							save_event_target_as = grievance_party
						}
					}
					14 = {
						event_target:party_2 = {
							save_event_target_as = grievance_party
						}
					}
					14 = {
						event_target:party_3 = {
							save_event_target_as = grievance_party
						}
					}
					14 = {
						event_target:party_4 = {
							save_event_target_as = grievance_party
						}
					}
					14 = {
						event_target:party_5 = {
							save_event_target_as = grievance_party
						}
					}
					14 = {
						event_target:party_6 = {
							save_event_target_as = grievance_party
						}
					}
					14 = {
						event_target:party_7 = {
							save_event_target_as = grievance_party
						}
					}
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = non_power_parties value = 8 } }
			if = {
				limit = {
					AND = {
						check_variable = {
							which = party_1_support
							value > party_2_support
						}
						check_variable = {
							which = party_1_support
							value > party_3_support
						}
						check_variable = {
							which = party_1_support
							value > party_4_support
						}
						check_variable = {
							which = party_1_support
							value > party_5_support
						}
						check_variable = {
							which = party_1_support
							value > party_6_support
						}
						check_variable = {
							which = party_1_support
							value > party_7_support
						}
						check_variable = {
							which = party_1_support
							value > party_8_support
						}
					}
				}
				event_target:party_1 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_2_support
							value > party_1_support
						}
						check_variable = {
							which = party_2_support
							value > party_3_support
						}
						check_variable = {
							which = party_2_support
							value > party_4_support
						}
						check_variable = {
							which = party_2_support
							value > party_5_support
						}
						check_variable = {
							which = party_2_support
							value > party_6_support
						}
						check_variable = {
							which = party_2_support
							value > party_7_support
						}
						check_variable = {
							which = party_2_support
							value > party_8_support
						}
					}
				}
				event_target:party_2 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_3_support
							value > party_1_support
						}
						check_variable = {
							which = party_3_support
							value > party_2_support
						}
						check_variable = {
							which = party_3_support
							value > party_4_support
						}
						check_variable = {
							which = party_3_support
							value > party_5_support
						}
						check_variable = {
							which = party_3_support
							value > party_6_support
						}
						check_variable = {
							which = party_3_support
							value > party_7_support
						}
						check_variable = {
							which = party_3_support
							value > party_8_support
						}
					}
				}
				event_target:party_3 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_4_support
							value > party_1_support
						}
						check_variable = {
							which = party_4_support
							value > party_2_support
						}
						check_variable = {
							which = party_4_support
							value > party_3_support
						}
						check_variable = {
							which = party_4_support
							value > party_5_support
						}
						check_variable = {
							which = party_4_support
							value > party_6_support
						}
						check_variable = {
							which = party_4_support
							value > party_7_support
						}
						check_variable = {
							which = party_4_support
							value > party_8_support
						}
					}
				}
				event_target:party_4 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_5_support
							value > party_1_support
						}
						check_variable = {
							which = party_5_support
							value > party_2_support
						}
						check_variable = {
							which = party_5_support
							value > party_3_support
						}
						check_variable = {
							which = party_5_support
							value > party_4_support
						}
						check_variable = {
							which = party_5_support
							value > party_6_support
						}
						check_variable = {
							which = party_5_support
							value > party_7_support
						}
						check_variable = {
							which = party_5_support
							value > party_8_support
						}
					}
				}
				event_target:party_5 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_6_support
							value > party_1_support
						}
						check_variable = {
							which = party_6_support
							value > party_2_support
						}
						check_variable = {
							which = party_6_support
							value > party_3_support
						}
						check_variable = {
							which = party_6_support
							value > party_4_support
						}
						check_variable = {
							which = party_6_support
							value > party_5_support
						}
						check_variable = {
							which = party_6_support
							value > party_7_support
						}
						check_variable = {
							which = party_6_support
							value > party_8_support
						}
					}
				}
				event_target:party_6 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_7_support
							value > party_1_support
						}
						check_variable = {
							which = party_7_support
							value > party_2_support
						}
						check_variable = {
							which = party_7_support
							value > party_3_support
						}
						check_variable = {
							which = party_7_support
							value > party_4_support
						}
						check_variable = {
							which = party_7_support
							value > party_5_support
						}
						check_variable = {
							which = party_7_support
							value > party_6_support
						}
						check_variable = {
							which = party_7_support
							value > party_8_support
						}
					}
				}
				event_target:party_7 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_8_support
							value > party_1_support
						}
						check_variable = {
							which = party_8_support
							value > party_2_support
						}
						check_variable = {
							which = party_8_support
							value > party_3_support
						}
						check_variable = {
							which = party_8_support
							value > party_4_support
						}
						check_variable = {
							which = party_8_support
							value > party_5_support
						}
						check_variable = {
							which = party_8_support
							value > party_6_support
						}
						check_variable = {
							which = party_8_support
							value > party_7_support
						}
					}
				}
				event_target:party_8 = {
					save_event_target_as = grievance_party
				}
			}
			# In the event that the parties have the same support level. I'll probably want a way to make this better eventually.
			else = {
				random_list = {
					12 = {
						event_target:party_1 = {
							save_event_target_as = grievance_party
						}
					}
					12 = {
						event_target:party_2 = {
							save_event_target_as = grievance_party
						}
					}
					12 = {
						event_target:party_3 = {
							save_event_target_as = grievance_party
						}
					}
					12 = {
						event_target:party_4 = {
							save_event_target_as = grievance_party
						}
					}
					12 = {
						event_target:party_5 = {
							save_event_target_as = grievance_party
						}
					}
					12 = {
						event_target:party_6 = {
							save_event_target_as = grievance_party
						}
					}
					12 = {
						event_target:party_7 = {
							save_event_target_as = grievance_party
						}
					}
					12 = {
						event_target:party_8 = {
							save_event_target_as = grievance_party
						}
					}
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = non_power_parties value = 9 } }
			if = {
				limit = {
					AND = {
						check_variable = {
							which = party_1_support
							value > party_2_support
						}
						check_variable = {
							which = party_1_support
							value > party_3_support
						}
						check_variable = {
							which = party_1_support
							value > party_4_support
						}
						check_variable = {
							which = party_1_support
							value > party_5_support
						}
						check_variable = {
							which = party_1_support
							value > party_6_support
						}
						check_variable = {
							which = party_1_support
							value > party_7_support
						}
						check_variable = {
							which = party_1_support
							value > party_8_support
						}
						check_variable = {
							which = party_1_support
							value > party_9_support
						}
					}
				}
				event_target:party_1 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_2_support
							value > party_1_support
						}
						check_variable = {
							which = party_2_support
							value > party_3_support
						}
						check_variable = {
							which = party_2_support
							value > party_4_support
						}
						check_variable = {
							which = party_2_support
							value > party_5_support
						}
						check_variable = {
							which = party_2_support
							value > party_6_support
						}
						check_variable = {
							which = party_2_support
							value > party_7_support
						}
						check_variable = {
							which = party_2_support
							value > party_8_support
						}
						check_variable = {
							which = party_2_support
							value > party_9_support
						}
					}
				}
				event_target:party_2 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_3_support
							value > party_1_support
						}
						check_variable = {
							which = party_3_support
							value > party_2_support
						}
						check_variable = {
							which = party_3_support
							value > party_4_support
						}
						check_variable = {
							which = party_3_support
							value > party_5_support
						}
						check_variable = {
							which = party_3_support
							value > party_6_support
						}
						check_variable = {
							which = party_3_support
							value > party_7_support
						}
						check_variable = {
							which = party_3_support
							value > party_8_support
						}
						check_variable = {
							which = party_3_support
							value > party_9_support
						}
					}
				}
				event_target:party_3 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_4_support
							value > party_1_support
						}
						check_variable = {
							which = party_4_support
							value > party_2_support
						}
						check_variable = {
							which = party_4_support
							value > party_3_support
						}
						check_variable = {
							which = party_4_support
							value > party_5_support
						}
						check_variable = {
							which = party_4_support
							value > party_6_support
						}
						check_variable = {
							which = party_4_support
							value > party_7_support
						}
						check_variable = {
							which = party_4_support
							value > party_8_support
						}
						check_variable = {
							which = party_4_support
							value > party_9_support
						}
					}
				}
				event_target:party_4 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_5_support
							value > party_1_support
						}
						check_variable = {
							which = party_5_support
							value > party_2_support
						}
						check_variable = {
							which = party_5_support
							value > party_3_support
						}
						check_variable = {
							which = party_5_support
							value > party_4_support
						}
						check_variable = {
							which = party_5_support
							value > party_6_support
						}
						check_variable = {
							which = party_5_support
							value > party_7_support
						}
						check_variable = {
							which = party_5_support
							value > party_8_support
						}
						check_variable = {
							which = party_5_support
							value > party_9_support
						}
					}
				}
				event_target:party_5 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_6_support
							value > party_1_support
						}
						check_variable = {
							which = party_6_support
							value > party_2_support
						}
						check_variable = {
							which = party_6_support
							value > party_3_support
						}
						check_variable = {
							which = party_6_support
							value > party_4_support
						}
						check_variable = {
							which = party_6_support
							value > party_5_support
						}
						check_variable = {
							which = party_6_support
							value > party_7_support
						}
						check_variable = {
							which = party_6_support
							value > party_8_support
						}
						check_variable = {
							which = party_6_support
							value > party_9_support
						}
					}
				}
				event_target:party_6 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_7_support
							value > party_1_support
						}
						check_variable = {
							which = party_7_support
							value > party_2_support
						}
						check_variable = {
							which = party_7_support
							value > party_3_support
						}
						check_variable = {
							which = party_7_support
							value > party_4_support
						}
						check_variable = {
							which = party_7_support
							value > party_5_support
						}
						check_variable = {
							which = party_7_support
							value > party_6_support
						}
						check_variable = {
							which = party_7_support
							value > party_8_support
						}
						check_variable = {
							which = party_7_support
							value > party_9_support
						}
					}
				}
				event_target:party_7 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_8_support
							value > party_1_support
						}
						check_variable = {
							which = party_8_support
							value > party_2_support
						}
						check_variable = {
							which = party_8_support
							value > party_3_support
						}
						check_variable = {
							which = party_8_support
							value > party_4_support
						}
						check_variable = {
							which = party_8_support
							value > party_5_support
						}
						check_variable = {
							which = party_8_support
							value > party_6_support
						}
						check_variable = {
							which = party_8_support
							value > party_7_support
						}
						check_variable = {
							which = party_8_support
							value > party_9_support
						}
					}
				}
				event_target:party_8 = {
					save_event_target_as = grievance_party
				}
			}
			else_if = {
				limit = {
					AND = {
						check_variable = {
							which = party_9_support
							value > party_1_support
						}
						check_variable = {
							which = party_9_support
							value > party_2_support
						}
						check_variable = {
							which = party_9_support
							value > party_3_support
						}
						check_variable = {
							which = party_9_support
							value > party_4_support
						}
						check_variable = {
							which = party_9_support
							value > party_5_support
						}
						check_variable = {
							which = party_9_support
							value > party_6_support
						}
						check_variable = {
							which = party_9_support
							value > party_7_support
						}
						check_variable = {
							which = party_9_support
							value > party_8_support
						}
					}
				}
				event_target:party_9 = {
					save_event_target_as = grievance_party
				}
			}
			# In the event that the parties have the same support level. I'll probably want a way to make this better eventually.
			else = {
				random_list = {
					11 = {
						event_target:party_1 = {
							save_event_target_as = grievance_party
						}
					}
					11 = {
						event_target:party_2 = {
							save_event_target_as = grievance_party
						}
					}
					11 = {
						event_target:party_3 = {
							save_event_target_as = grievance_party
						}
					}
					11 = {
						event_target:party_4 = {
							save_event_target_as = grievance_party
						}
					}
					11 = {
						event_target:party_5 = {
							save_event_target_as = grievance_party
						}
					}
					11 = {
						event_target:party_6 = {
							save_event_target_as = grievance_party
						}
					}
					11 = {
						event_target:party_7 = {
							save_event_target_as = grievance_party
						}
					}
					11 = {
						event_target:party_8 = {
							save_event_target_as = grievance_party
						}
					}
					11 = {
						event_target:party_9 = {
							save_event_target_as = grievance_party
						}
					}
				}
			}
		}

		# Get party leader
		event_target:grievance_party = {
			leader = {
				save_event_target_as = grievance_party_leader
			}
		}
	}

	after = {
		country_event = { id = civelection.1001 days = 30 random = 360 }
	}
}

# Election dispute triggered
country_event = {
	id = civelection.1001
	title = civelection.1001.name
	desc = civelection.1001.desc
	picture = GFX_evt_civil_action
	hide_window = no
	is_triggered_only = yes

	option = {
		name = civelection.1001.a
		hidden_effect = {
			country_event = { id = civcom.7000 }
		}
	}
}

# The investigation finds no evidence of fraud.
country_event = {
	id = civelection.1002
	title = civelection.1002.name
	desc = civelection.1002.desc
	picture = GFX_evt_galactic_senate
	hide_window = no
	is_triggered_only = yes

	option = {
		name = civelection.1002.a
	}
}

# The investigation finds evidence of fraud, new elections called, ruler forced to resign
country_event = {
	id = civelection.1003
	title = civelection.1003.name
	desc = civelection.1003.desc
	picture = GFX_evt_civil_action
	hide_window = no
	is_triggered_only = yes

	option = {
		name = civelection.1003.a
		custom_tooltip = civelection.1003.a.tooltip
		hidden_effect = {
			ruler = {
				kill_leader = { show_notification = no }
			}
		}
	}
}

# Our denial worked, the other parties did not even really attempt to look into it.
country_event = {
	id = civelection.1004
	title = civelection.1004.name
	desc = civelection.1004.desc
	picture = GFX_evt_galactic_senate
	hide_window = no
	is_triggered_only = yes

	option = {
		name = civelection.1004.a
	}
}

# The concerned party conducted their own investigation and found no evidence of fraud.
country_event = {
	id = civelection.1005
	title = civelection.1005.name
	desc = civelection.1005.desc
	picture = GFX_evt_galactic_senate
	hide_window = no
	is_triggered_only = yes

	option = {
		name = civelection.1005.a
	}
}

# The concerned party conducted their own investigation and found evidence of fraud.
country_event = {
	id = civelection.1006
	title = civelection.1006.name
	desc = civelection.1006.desc
	picture = GFX_evt_civil_action
	hide_window = no
	is_triggered_only = yes

	option = {
		name = civelection.1006.a
		hidden_effect = {
			country_event = { id = civcom.7002 }
		}
	}
}

######

# Initializer for election dispute
country_event = {
	id = civelection.9000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_democratic_elections = yes
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
	}

	immediate = {

		random_list = {
			# 2% chance for potential election fraud
			2 = {
				country_event = { id = civelection.1000 }
			}
			# 98% chance nothing happens
			98 = {

			}
		}
	}
}

# Set unhappiness modifier for faction(s), first time and monthly checks
country_event = {
	id = civelection.9001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		ruler = {
			has_leader_flag = rigged_election_ruler
		}
	}

	immediate = {

		every_owned_planet = {
			limit = {
				num_pops >= 1
				NOT = {
					has_modifier = rigged_elections_planet
				}
			}
			add_modifier = {
				modifier = rigged_elections_planet
				days = -1
			}
		}

		# All pops are upset about the rigged elections
		every_owned_pop = {
			limit = {
				NOT = { has_modifier = rigged_elections_pop }
			}
			add_modifier = {
				modifier = rigged_elections_pop
				days = -1
			}
		}

		# Well, except for the pops of the winning party
		random_pop_faction = {
			limit = {
				leader = {
					leader_class = ruler
				}
			}
			every_owned_pop = {
				limit = {
					has_modifier = rigged_elections_pop
				}
				remove_modifier = rigged_elections_pop
			}
		}

		# All parties are mad about the rigged elections
		every_pop_faction = {
			limit = {
				NOT = {has_modifier = rigged_elections_faction }
				leader = { NOT = { leader_class = ruler } }
			}
			add_modifier = {
				modifier = rigged_elections_faction
				days = -1
			}
		}
	}
}

# Set different unhappiness modifier for faction(s), if ruler gets reelected
country_event = {
	id = civelection.9002
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		ruler = {
			has_leader_flag = rigged_election_ruler
		}
	}

	immediate = {

		ruler = {
			remove_leader_flag = rigged_election_ruler
			set_leader_flag = once_rigged_elections
		}

		every_owned_planet = {
			limit = {
				has_modifier = rigged_elections_planet
			}
			remove_modifier = rigged_elections_planet
		}

		every_owned_pop = {
			limit = {
				has_modifier = rigged_elections_pop
			}
			remove_modifier = rigged_elections_pop
		}

		every_pop_faction = {
			limit = {
				has_modifier = rigged_elections_faction
			}
			remove_modifier = rigged_elections_faction
			add_modifier = { modifier = ruler_once_rigged_elections days = -1 }
		}
	}
}

# Remove first unhappiness modifier
country_event = {
	id = civelection.9003
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		ruler = {
			NOT = {
				has_leader_flag = rigged_election_ruler
			}
		}
	}

	immediate = {

		every_owned_planet = {
			limit = {
				has_modifier = rigged_elections_planet
			}
			remove_modifier = rigged_elections_planet
		}

		every_owned_pop = {
			limit = {
				has_modifier = rigged_elections_pop
			}
			remove_modifier = rigged_elections_pop
		}

		every_pop_faction = {
			limit = {
				has_modifier = rigged_elections_faction
			}
			remove_modifier = rigged_elections_faction
		}
	}
}

# Remove second unhappiness modifier
country_event = {
	id = civelection.9004
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		ruler = {
			NOT = {
				has_leader_flag = once_rigged_elections
			}
		}
	}

	immediate = {

		every_owned_pop = {
			limit = {
				has_modifier = rigged_elections_pop
			}
			remove_modifier = rigged_elections_pop
		}

		every_pop_faction = {
			limit = {
				has_modifier = rigged_elections_faction
			}
			remove_modifier = ruler_once_rigged_elections
		}
	}
}