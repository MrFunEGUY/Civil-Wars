
###############################
### Civil Wars by MrFunEGUY ###
###############################

namespace = civwar

#################
# Leader Marking Events

country_event = { # Pulse Event for Civil War, every year - factions and corrupt
	id = civwar.1000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
	}

	immediate = {
		if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 10
					empire_sprawl_over_cap  < 20
				}
			}
			random_list = {
				95 = { # 93% chance nothing happens
				}
				5 = { # Civil War if One of the Conditions are met
					country_event = { id = civwar.2000 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 20
					empire_sprawl_over_cap  < 30
				}
			}
			random_list = {
				93 = { # 91% chance nothing happens
				}
				7 = { # Civil War if One of the Conditions are met
					country_event = { id = civwar.2000 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 30
					empire_sprawl_over_cap  < 40
				}
			}
			random_list = {
				91 = { # 89% chance nothing happens
				}
				9 = { # Civil War if One of the Conditions are met
					country_event = { id = civwar.2000 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 40
					empire_sprawl_over_cap  < 50
				}
			}
			random_list = {
				89 = { # 89% chance nothing happens
				}
				11 = { # Civil War if One of the Conditions are met
					country_event = { id = civwar.2000 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 50
					empire_sprawl_over_cap  < 60
				}
			}
			random_list = {
				87 = { # 85% chance nothing happens
				}
				13 = { # Civil War if One of the Conditions are met
					country_event = { id = civwar.2000 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 60
					empire_sprawl_over_cap  < 70
				}
			}
			random_list = {
				85 = { # 83% chance nothing happens
				}
				15 = { # Civil War if One of the Conditions are met
					country_event = { id = civwar.2000 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 70
					empire_sprawl_over_cap  < 80
				}
			}
			random_list = {
				83 = { # 81% chance nothing happens
				}
				17 = { # Civil War if One of the Conditions are met
					country_event = { id = civwar.2000 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 80
					empire_sprawl_over_cap  < 90
				}
			}
			random_list = {
				81 = { # 79% chance nothing happens
				}
				19 = { # Civil War if One of the Conditions are met
					country_event = { id = civwar.2000 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 90
					empire_sprawl_over_cap  < 100
				}
			}
			random_list = {
				79 = { # 77% chance nothing happens
				}
				21 = { # Civil War if One of the Conditions are met
					country_event = { id = civwar.2000 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 100
					empire_sprawl_over_cap  < 125
				}
			}
			random_list = {
				77 = { # 75% chance nothing happens
				}
				23 = { # Civil War if One of the Conditions are met
					country_event = { id = civwar.2000 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 125
					empire_sprawl_over_cap  < 150
				}
			}
			random_list = {
				55 = { # 55% chance nothing happens
				}
				45 = { # Civil War if One of the Conditions are met
					country_event = { id = civwar.2000 }
				}
			}
		}
		else_if = {
			limit = {
				empire_sprawl_over_cap  >= 150
			}
			random_list = {
				35 = { # 25% chance nothing happens
				}
				65 = { # Civil War if One of the Conditions are met
					country_event = { id = civwar.2000 }
				}
			}
		}
		else = {
			random_list = {
				96 = { # 96% chance nothing happens
				}
				4 = { # Civil War if One of the Conditions are met
					country_event = { id = civwar.2000 }
				}
			}
		}	
	}
}

country_event = { # Pulse Delayer for Civil War, every year - Galaxy Size Event
	id = civwar.1010
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		galaxy_percentage >= 0.6
		is_country_type_with_subjects = yes
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
	}

	immediate = {
		country_event = { id = civwar.1011 days = 1 random = 359 }
	}
}

country_event = { # Delayed Pulse Event for Civil War, every year Galaxy Size
	id = civwar.1011
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				galaxy_percentage >= 0.6
				# galaxy_percentage < 0.5
			}
			random_list = {
				10 = { # 10% chance nothing happens
				}
				90 = { # Civil War if One of the Conditions are met
					country_event = { id = civwar.2001 }
				}
			}
		}
		# else_if = {
		# 	limit = {
		# 		galaxy_percentage >= 0.5
		# 		galaxy_percentage < 0.6
		# 	}
		# 	random_list = {
		# 		20 = { # 20% chance nothing happens
		# 		}
		# 		80 = { # Civil War
		# 			country_event = { id = civwar.2001 }
		# 		}
		# 	}
		# }
		# else_if = {
		# 	limit = {
		# 		galaxy_percentage >= 0.6
		# 		galaxy_percentage < 0.7
		# 	}
		# 	random_list = {
		# 		30 = { # 30% chance nothing happens
		# 		}
		# 		70 = { # Civil War 
		# 			country_event = { id = civwar.2001 }
		# 		}
		# 	}
		# }
		# else_if = {
		# 	limit = {
		# 		galaxy_percentage >= 0.7
		# 		galaxy_percentage < 0.8
		# 	}
		# 	random_list = {
		# 		40 = { # 40% chance nothing happens
		# 		}
		# 		60 = { # Civil War 
		# 			country_event = { id = civwar.2001 }
		# 		}
		# 	}
		# }
		# else_if = {
		# 	limit = {
		# 		galaxy_percentage >= 0.8
		# 		galaxy_percentage < 0.9
		# 	}
		# 	random_list = {
		# 		50 = { # 50% chance nothing happens
		# 		}
		# 		50 = { # Civil War 
		# 			country_event = { id = civwar.2001 }
		# 		}
		# 	}
		# }
		# else_if = {
		# 	limit = {
		# 		galaxy_percentage >= 0.9
		# 	}
		# 	random_list = {
		# 		60 = { # 60% chance nothing happens
		# 		}
		# 		40 = { # Civil War 
		# 			country_event = { id = civwar.2001 }
		# 		}
		# 	}
		# }
	}
}

country_event = { # Pulse Event for Planetary Rebellion, every 5 years
	id = civwar.1100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
	}

	immediate = {
		if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 10
					empire_sprawl_over_cap  < 20
				}
			}
			random_list = {
				77 = { # 77% chance nothing happens
				}
				23 = { # Planetary Rebellion if One of the Conditions are met
					country_event = { id = civwar.2100 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 20
					empire_sprawl_over_cap  < 30
				}
			}
			random_list = {
				74 = { # 74% chance nothing happens
				}
				26 = { # Planetary Rebellion if One of the Conditions are met
					country_event = { id = civwar.2100 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 30
					empire_sprawl_over_cap  < 40
				}
			}
			random_list = {
				71 = { # 71% chance nothing happens
				}
				29 = { # Planetary Rebellion if One of the Conditions are met
					country_event = { id = civwar.2100 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 40
					empire_sprawl_over_cap  < 50
				}
			}
			random_list = {
				68 = { # 68% chance nothing happens
				}
				32 = { # Planetary Rebellion if One of the Conditions are met
					country_event = { id = civwar.2100 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 50
					empire_sprawl_over_cap  < 60
				}
			}
			random_list = {
				65 = { # 65% chance nothing happens
				}
				35 = { # Planetary Rebellion if One of the Conditions are met
					country_event = { id = civwar.2100 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 60
					empire_sprawl_over_cap  < 70
				}
			}
			random_list = {
				62 = { # 62% chance nothing happens
				}
				38 = { # Planetary Rebellion if One of the Conditions are met
					country_event = { id = civwar.2100 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 70
					empire_sprawl_over_cap  < 80
				}
			}
			random_list = {
				59 = { # 59% chance nothing happens
				}
				41 = { # Planetary Rebellion if One of the Conditions are met
					country_event = { id = civwar.2100 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 80
					empire_sprawl_over_cap  < 90
				}
			}
			random_list = {
				56 = { # 56% chance nothing happens
				}
				44 = { # Planetary Rebellion if One of the Conditions are met
					country_event = { id = civwar.2100 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 90
					empire_sprawl_over_cap  < 100
				}
			}
			random_list = {
				53 = { # 53% chance nothing happens
				}
				47 = { # Planetary Rebellion if One of the Conditions are met
					country_event = { id = civwar.2100 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 100
					empire_sprawl_over_cap  < 125
				}
			}
			random_list = {
				50 = { # 50% chance nothing happens
				}
				50 = { # Planetary Rebellion if One of the Conditions are met
					country_event = { id = civwar.2100 }
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					empire_sprawl_over_cap  >= 125
					empire_sprawl_over_cap  < 150
				}
			}
			random_list = {
				40 = { # 40% chance nothing happens
				}
				60 = { # Planetary Rebellion if One of the Conditions are met
					country_event = { id = civwar.2100 }
				}
			}
		}
		else_if = {
			limit = {
				empire_sprawl_over_cap  >= 150
			}
			random_list = {
				30 = { # 30% chance nothing happens
				}
				70 = { # Planetary Rebellion if One of the Conditions are met
					country_event = { id = civwar.2100 }
				}
			}
		}
		else = {
			random_list = {
				80 = { # 80% chance nothing happens
				}
				20 = { # Planetary Rebellion if One of the Conditions are met
					country_event = { id = civwar.2100 }
				}
			}
		}
	}
}

country_event = { # Mark disapproving Faction Leaders who are Governors, every month
	id = civwar.1200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		num_sectors > 1
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
		any_pop_faction = {
			exists = leader
			leader = {
				NOR = {
					has_leader_flag = appointed_heir
					has_leader_flag = civil_war_leader_governor_faction
				}
				leader_class = governor
			}
			faction_approval <= 0.4
			support >= 0.15
		}
	}

	immediate = {
		every_pop_faction = {
			limit = {
				exists = leader
				leader = {
					NOR = {
						has_leader_flag = appointed_heir
						has_leader_flag = civil_war_leader_governor_faction
					}
					leader_class = governor
				}
				faction_approval <= 0.4
				support >= 0.15
			}
			set_pop_faction_flag = civil_war_faction_governor
			leader = { set_leader_flag = civil_war_leader_governor_faction }
		}
	}
}

country_event = { # Unmark approving Faction Leaders who are Governors, every month
	id = civwar.1300
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			any_pop_faction = {
				exists = leader
				leader = {
					leader_class = governor
					has_leader_flag = civil_war_leader_governor_faction
					NOT = { has_leader_flag = foreign_operation_ally_leader }
				}
				faction_approval > 0.4
			}
			any_pop_faction = {
				exists = leader
				leader = {
					leader_class = governor
					has_leader_flag = civil_war_leader_governor_faction
					NOT = { has_leader_flag = foreign_operation_ally_leader }
				}
				support < 0.15
			}
		}
	}

	immediate = {
		every_pop_faction = {
			limit = {
				exists = leader
				leader = {
					leader_class = governor
					has_leader_flag = civil_war_leader_governor_faction
					NOT = { has_leader_flag = foreign_operation_ally_leader }
				}
				OR  = {
					faction_approval > 0.4
					support < 0.15
				}
			}
			remove_pop_faction_flag = civil_war_faction_governor
			leader = { remove_leader_flag = civil_war_leader_governor_faction }
		}
	}
}

country_event = { # Mark disapproving Faction Leaders who are Admirals, every month
	id = civwar.1400
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
		any_pop_faction = {
			exists = leader
			leader = {
				NOR = {
					has_leader_flag = appointed_heir
					has_leader_flag = civil_war_leader_admiral_faction
				}
				leader_class = admiral
			}
			faction_approval <= 0.4
			support >= 0.15
		}
	}

	immediate = {
		every_pop_faction = {
			limit = {
				exists = leader
				leader = {
					NOR = {
						has_leader_flag = appointed_heir
						has_leader_flag = civil_war_leader_admiral_faction
					}
					leader_class = admiral
				}
				faction_approval <= 0.4
				support >= 0.15
			}
			set_pop_faction_flag = civil_war_faction_admiral
			leader = { set_leader_flag = civil_war_leader_admiral_faction }
		}
	}
}

country_event = { # Unmark approving Faction Leaders who are Admirals, every month
	id = civwar.1500
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			any_pop_faction = {
				exists = leader
				leader = {
					leader_class = admiral
					has_leader_flag = civil_war_leader_admiral_faction
					NOT = { has_leader_flag = foreign_operation_ally_leader }
				}
				faction_approval > 0.4
			}
			any_pop_faction = {
				exists = leader
				leader = {
					leader_class = admiral
					has_leader_flag = civil_war_leader_admiral_faction
					NOT = { has_leader_flag = foreign_operation_ally_leader }
				}
				support < 0.15
			}
		}
	}

	immediate = {
		every_pop_faction = {
			limit = {
				exists = leader
				leader = {
					leader_class = admiral
					has_leader_flag = civil_war_leader_admiral_faction
					NOT = { has_leader_flag = foreign_operation_ally_leader }
				}
				OR  = {
					faction_approval > 0.4
					support < 0.15
				}
			}
			remove_pop_faction_flag = civil_war_faction_admiral
			leader = { remove_leader_flag = civil_war_leader_admiral_faction }
		}
	}
}

country_event = { # Mark disapproving Faction Leaders who are Scientists, every month
	id = civwar.1600
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		any_owned_planet = {
			num_pops >= 1
			is_colony = yes
			solar_system = { check_civwar_capital = yes }
		}
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
		any_pop_faction = {
			exists = leader
			leader = {
				NOR = {
					has_leader_flag = appointed_heir
					has_leader_flag = civil_war_leader_scientist_faction
				}
				leader_class = scientist
			}
			faction_approval <= 0.4
			support >= 0.15
		}
	}

	immediate = {
		every_pop_faction = {
			limit = {
				exists = leader
				leader = {
					NOR = {
						has_leader_flag = appointed_heir
						has_leader_flag = civil_war_leader_scientist_faction
					}
					leader_class = scientist
				}
				faction_approval <= 0.4
				support >= 0.15
			}
			set_pop_faction_flag = civil_war_faction_scientist
			leader = { set_leader_flag = civil_war_leader_scientist_faction }
		}
	}
}

country_event = { # Unmark approving Faction Leaders who are Scientists, every month
	id = civwar.1700
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			any_pop_faction = {
				exists = leader
				leader = {
					leader_class = scientist
					has_leader_flag = civil_war_leader_scientist_faction
					NOT = { has_leader_flag = foreign_operation_ally_leader }
				}
				faction_approval > 0.4
			}
			any_pop_faction = {
				exists = leader
				leader = {
					leader_class = scientist
					has_leader_flag = civil_war_leader_scientist_faction
					NOT = { has_leader_flag = foreign_operation_ally_leader }
				}
				support < 0.15
			}
		}
	}

	immediate = {
		every_pop_faction = {
			limit = {
				exists = leader
				leader = {
					leader_class = scientist
					has_leader_flag = civil_war_leader_scientist_faction
					NOT = { has_leader_flag = foreign_operation_ally_leader }
				}
				OR  = {
					faction_approval > 0.4
					support < 0.15
				}
			}
			remove_pop_faction_flag = civil_war_faction_scientist
			leader = { remove_leader_flag = civil_war_leader_scientist_faction }
		}
	}
}

country_event = { # Mark disapproving Faction Leaders who are Generals, every month
	id = civwar.1800
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		any_owned_planet = {
			num_pops >= 1
			is_colony = yes
			solar_system = { check_civwar_capital = yes }
		}
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
		any_pop_faction = {
			exists = leader
			leader = {
				NOR = {
					has_leader_flag = appointed_heir
					has_leader_flag = civil_war_leader_general_faction
				}
				leader_class = general
			}
			faction_approval <= 0.4
			support >= 0.15
		}
	}

	immediate = {
		every_pop_faction = {
			limit = {
				exists = leader
				leader = {
					NOR = {
						has_leader_flag = appointed_heir
						has_leader_flag = civil_war_leader_general_faction
					}
					leader_class = general
				}
				faction_approval <= 0.4
				support >= 0.15
			}
			set_pop_faction_flag = civil_war_faction_general
			leader = { set_leader_flag = civil_war_leader_general_faction }
		}
	}
}

country_event = { # Unmark approving Faction Leaders who are Generals, every month
	id = civwar.1900
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			any_pop_faction = {
				exists = leader
				leader = {
					leader_class = general
					has_leader_flag = civil_war_leader_general_faction
					NOT = { has_leader_flag = foreign_operation_ally_leader }
				}
				faction_approval > 0.4
			}
			any_pop_faction = {
				exists = leader
				leader = {
					leader_class = general
					has_leader_flag = civil_war_leader_general_faction
					NOT = { has_leader_flag = foreign_operation_ally_leader }
				}
				support < 0.15
			}
		}
	}

	immediate = {
		every_pop_faction = {
			limit = {
				exists = leader
				leader = {
					leader_class = general
					has_leader_flag = civil_war_leader_general_faction
					NOT = { has_leader_flag = foreign_operation_ally_leader }
				}
				OR  = {
					faction_approval > 0.4
					support < 0.15
				}
			}
			remove_pop_faction_flag = civil_war_faction_general
			leader = { remove_leader_flag = civil_war_leader_general_faction }
		}
	}
}

country_event = { # Unmark Leaders who are no longer leading factions
	id = civwar.1999
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_leader = {
			OR = {
				has_leader_flag = civil_war_leader_governor_faction
				has_leader_flag = civil_war_leader_admiral_faction
				has_leader_flag = civil_war_leader_scientist_faction
				has_leader_flag = civil_war_leader_general_faction
			}
			NOR = {
				leader_of_faction = totalitarian
				leader_of_faction = progressive
				leader_of_faction = imperialist
				leader_of_faction = prosperity
				leader_of_faction = technologist
				leader_of_faction = traditionalist
				leader_of_faction = xenoist
				leader_of_faction = supremacist
				leader_of_faction = isolationist
				# Divided Loyalties
				leader_of_faction = indentured
				leader_of_faction = aristocrat
				leader_of_faction = elitist
				leader_of_faction = labourite
				leader_of_faction = survivalist
				leader_of_faction = warmaker
				leader_of_faction = activist
				leader_of_faction = industrialist
				leader_of_faction = perfectionist
				leader_of_faction = adopter
				leader_of_faction = crusader
				leader_of_faction = shepherd
				leader_of_faction = holistic
				leader_of_faction = warmaker
				leader_of_faction = enslaver
				# Ethics and Civics
				leader_of_faction = socialists
				leader_of_faction = bankers
				leader_of_faction = manufacturers
				leader_of_faction = environmentalists
				leader_of_faction = conservatives
				leader_of_faction = labourites
			}
		}
	}

	immediate = {
		every_owned_leader = {
			limit = {
				OR = {
					has_leader_flag = civil_war_leader_governor_faction
					has_leader_flag = civil_war_leader_admiral_faction
					has_leader_flag = civil_war_leader_scientist_faction
					has_leader_flag = civil_war_leader_general_faction
				}
				NOR = {
					leader_of_faction = totalitarian
					leader_of_faction = progressive
					leader_of_faction = imperialist
					leader_of_faction = prosperity
					leader_of_faction = technologist
					leader_of_faction = traditionalist
					leader_of_faction = xenoist
					leader_of_faction = supremacist
					leader_of_faction = isolationist
					# Divided Loyalties
					leader_of_faction = indentured
					leader_of_faction = aristocrat
					leader_of_faction = elitist
					leader_of_faction = labourite
					leader_of_faction = survivalist
					leader_of_faction = warmaker
					leader_of_faction = activist
					leader_of_faction = industrialist
					leader_of_faction = perfectionist
					leader_of_faction = adopter
					leader_of_faction = crusader
					leader_of_faction = shepherd
					leader_of_faction = holistic
					leader_of_faction = warmaker
					leader_of_faction = enslaver
					# Ethics and Civics
					leader_of_faction = socialists
					leader_of_faction = bankers
					leader_of_faction = manufacturers
					leader_of_faction = environmentalists
					leader_of_faction = conservatives
					leader_of_faction = labourites
				}
			}
			if = {
				limit = {
					has_leader_flag = civil_war_leader_governor_faction
				}
				remove_leader_flag = civil_war_leader_governor_faction
			}
			if = {
				limit = {
					has_leader_flag = civil_war_leader_admiral_faction
				}
				remove_leader_flag = civil_war_leader_admiral_faction
			}
			if = {
				limit = {
					has_leader_flag = civil_war_leader_scientist_faction
				}
				remove_leader_flag = civil_war_leader_scientist_faction
			}
			if = {
				limit = {
					has_leader_flag = civil_war_leader_general_faction
				}
				remove_leader_flag = civil_war_leader_general_faction
			}
		}
	}
}

#################
# Initializers

country_event = { # Initializer for Civil Wars - factions and corrupt
	id = civwar.2000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		OR = {
			any_owned_planet = {
				num_pops >= 1
				is_colony = yes
				solar_system = { check_civwar_capital = yes }
			}
			num_sectors > 1
		}
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
	}

	immediate = {
		if = {
			limit = {
				any_owned_leader = {
					OR = {
						NOT = { has_leader_flag = appointed_heir }
						has_trait = leader_trait_corrupt
						has_leader_flag = civil_war_leader_governor_faction
						has_leader_flag = civil_war_leader_scientist_faction
						has_leader_flag = civil_war_leader_general_faction
					}
	        	}
			}
			country_event = { id = civwar.3000 days = 1 random = 359 }
		}
		else_if = {
			limit = {
				any_owned_leader = {
					has_leader_flag = civil_war_leader_admiral_faction
	        	}
			}
			country_event = { id = civwar.3001 days = 1 random = 359 }
		}
		else = {
			# No Civil War
		}
	}
}

country_event = { # Initializer for Civil Wars - Galaxy Size
	id = civwar.2001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		OR = {
			any_owned_planet = {
				num_pops >= 1
				is_colony = yes
				solar_system = { check_civwar_capital = yes }
			}
			num_sectors > 1
		}
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
	}

	immediate = {

		set_country_flag = size_civil_war


		if = {
			limit = {
				is_autocracy = yes
			}
			random_pop_faction = {
				limit = {
					exists = leader
					leader = {
						NOR = {
							leader_class = ruler
							has_leader_flag = appointed_heir
						}
					}
				}
				if = {
					limit = { leader = { leader_class = governor } }
					leader = { set_leader_flag = civil_war_leader_governor_faction }
					set_pop_faction_flag = civil_war_faction_governor
				}
				else_if = {
					limit = { leader = { leader_class = general } }
					leader = { set_leader_flag = civil_war_leader_general_faction }
					set_pop_faction_flag = civil_war_faction_governor
				}
				else_if = {
					limit = { leader = { leader_class = scientist } }
					leader = { set_leader_flag = civil_war_leader_scientist_faction }
					set_pop_faction_flag = civil_war_faction_governor
				}
				else_if = {
					limit = { leader = { leader_class = admiral } }
					leader = { set_leader_flag = civil_war_leader_admiral_faction }
					set_pop_faction_flag = civil_war_faction_governor
				}
			}
			else = {
				random_pop_faction = {
					limit = {
						exists = leader
						leader = {
							NOR = {
								leader_class = ruler
								leader_class = admiral
								has_leader_flag = appointed_heir
							}
						}
					}
					if = {
						limit = { leader = { leader_class = governor } }
						leader = { set_leader_flag = civil_war_leader_governor_faction }
						set_pop_faction_flag = civil_war_faction_governor
					}
					else_if = {
						limit = { leader = { leader_class = general } }
						leader = { set_leader_flag = civil_war_leader_general_faction }
						set_pop_faction_flag = civil_war_faction_governor
					}
					else_if = {
						limit = { leader = { leader_class = scientist } }
						leader = { set_leader_flag = civil_war_leader_scientist_faction }
						set_pop_faction_flag = civil_war_faction_governor
					}
				}
			}
		}

		if = {
			limit = {
				any_owned_leader = {
					OR = {
						NOT = { has_leader_flag = appointed_heir }
						has_trait = leader_trait_corrupt
						has_leader_flag = civil_war_leader_governor_faction
						has_leader_flag = civil_war_leader_scientist_faction
						has_leader_flag = civil_war_leader_general_faction
					}
	        	}
			}
			country_event = { id = civwar.3000 }
		}
		else_if = {
			limit = {
				any_owned_leader = {
					has_leader_flag = civil_war_leader_admiral_faction
	        	}
			}
			country_event = { id = civwar.3001 }
		}
	}
}

country_event = { # Initializer for Planetary Rebellion
	id = civwar.2100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
	}

	immediate = {
		if = {
			limit = {
				any_owned_planet = {
					has_planet_flag = revolt_tick_5
					has_modifier = planetary_rebels
					is_occupied_flag = no
					has_orbital_bombardment = no
					NOT = {
						has_planet_flag = rebellion_suppressed
					}
				}
			}
			country_event = { id = civwar.3100 days = 1 random = 359 }
		}
		else = {
			# No Planetary Rebellion
		}
	}
}

#################
# Get Civil War Creator

country_event = { # Civil War via Governor / Scientist / General
	id = civwar.3000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		num_owned_planets > 1
		any_owned_leader = {
			OR = {
				has_leader_flag = civil_war_leader_governor_faction
				has_leader_flag = civil_war_leader_scientist_faction
				has_leader_flag = civil_war_leader_general_faction
				has_trait = leader_trait_corrupt
			}
			
		}
	}
	
	immediate = {

		save_event_target_as = current_civwar_originator

		# setting flags
		set_country_flag = civwar_mother_country

		# Set Empire Sprawl Variable
		get_empire_sprawl = yes

		# event lock all fleets to prevent exploits
		every_owned_fleet = { 
			set_event_locked = yes
		}

		# Get Leader
		random_owned_leader = {
			limit = {
				OR = {
					has_trait = leader_trait_corrupt
					has_leader_flag = civil_war_leader_governor_faction
					has_leader_flag = civil_war_leader_scientist_faction
					has_leader_flag = civil_war_leader_general_faction
				}
			}
			if = {
				limit = {
					# OR = {
					# 	has_trait = leader_trait_corrupt
					# 	has_leader_flag = civil_war_leader_governor_faction
					# }
					prev = {
						any_owned_sector = {
							has_sector_type = normal_sector
			                leader = {
			                	OR = {
									has_trait = leader_trait_corrupt
									has_leader_flag = civil_war_leader_governor_faction
								}
			                }
						}
					}
				}
				prev = {
					random_owned_sector = {
						limit = {
							has_sector_type = normal_sector
			                leader = {
			                	OR = {
									has_trait = leader_trait_corrupt
									has_leader_flag = civil_war_leader_governor_faction
								}
			                }
			            }
			            leader = { set_leader_flag = faction_local_flag }
			            set_sector_flag = rebel_sector
					    every_system_within_border = {
				            limit = {
				                check_civwar_capital = yes
				            }
				            set_star_flag = civil_war_flip
				        }
					}
					random_pop_faction = {
						limit = {
							has_pop_faction_flag = civil_war_faction_governor
							leader = {
								has_leader_flag = faction_local_flag
							}
						}
						leader = { remove_leader_flag = faction_local_flag }
						remove_pop_faction_flag = civil_war_faction_governor
						save_global_event_target_as = civil_war_party
					}
				}
				# Set empire species to rebelling leader's species
				species = { save_global_event_target_as = civwar_species }
				save_global_event_target_as = civil_war_leader
				# Remove Governor
				exile_leader_as = civil_war_leader
			}
			else_if = {
				limit = {
					has_leader_flag = civil_war_leader_governor_faction
				}
				set_leader_flag = faction_local_flag
				prev = {
					random_owned_sector = {
						limit = {
							has_sector_type = normal_sector
			            }
			            set_sector_flag = rebel_sector
					    every_system_within_border = {
				            limit = {
				                check_civwar_capital = yes
				            }
				            set_star_flag = civil_war_flip
				        }
					}
					random_pop_faction = {
						limit = {
							has_pop_faction_flag = civil_war_faction_governor
							leader = { has_leader_flag = faction_local_flag }
						}
						leader = { remove_leader_flag = faction_local_flag }
						remove_pop_faction_flag = civil_war_faction_governor
						save_global_event_target_as = civil_war_party
					}
				}
				# Set empire species to rebelling leader's species
				species = { save_global_event_target_as = civwar_species }
				save_global_event_target_as = civil_war_leader
				# Remove Governor
				exile_leader_as = civil_war_leader
			}
			else_if = {
				limit = {
					has_trait = leader_trait_corrupt
				}
				prev = {
					random_owned_sector = {
						limit = {
							has_sector_type = normal_sector
			            }
			            set_sector_flag = rebel_sector
					    every_system_within_border = {
				            limit = {
				                check_civwar_capital = yes
				            }
				            set_star_flag = civil_war_flip
				        }
					}
				}
				# Set empire species to rebelling leader's species
				species = { save_global_event_target_as = civwar_species }
				save_global_event_target_as = civil_war_leader
				# Remove Governor
				exile_leader_as = civil_war_leader
			}
			else_if = {
				limit = {
					has_leader_flag = civil_war_leader_scientist_faction
				}
				# Tag Faction for localisation
				prev = {
					random_pop_faction = {
						limit = {
							has_pop_faction_flag = civil_war_faction_scientist
						}
						remove_pop_faction_flag = civil_war_faction_scientist
						save_global_event_target_as = civil_war_party
					}
				}
				# Set empire species to rebelling leader's species
				species = { save_global_event_target_as = civwar_species }
				save_global_event_target_as = civil_war_leader
				# Remove Scientist
				exile_leader_as = civil_war_leader
			}
			else_if = {
				limit = {
					has_leader_flag = civil_war_leader_general_faction
				}
				# Tag Faction for localisation
				prev = {
					random_pop_faction = {
						limit = {
							has_pop_faction_flag = civil_war_faction_general
						}
						remove_pop_faction_flag = civil_war_faction_general
						save_global_event_target_as = civil_war_party
					}
				}
				# Set empire species to rebelling leader's species
				species = { save_global_event_target_as = civwar_species }
				save_global_event_target_as = civil_war_leader
				# Remove Scientist
				exile_leader_as = civil_war_leader
			}
		}

		# Will they seize a planet, a sector, or multiple sectors?
		# Scientists and Generals
		if = {
			limit = {
				event_target:civil_war_leader = {
					OR = {
						has_leader_flag = civil_war_leader_scientist_faction
						has_leader_flag = civil_war_leader_general_faction
					}
				}
			}
			if = {
				limit = {
					num_sectors > 2
					any_pop_faction = {
						leader = { is_same_value = event_target:civil_war_leader }
						support >= 0.20
					}
				}
				random_list = {
					60 = { # Planet
						get_civil_war_faction_planet = yes
					}
					30 = { # 1 Sector
						get_random_sector_for_civwar = yes
						get_civil_war_faction = yes
					}
					10 = { # Multiple Sectors
						get_sectors_and_multiply = yes
						set_country_flag = traitor_got_multiple_sectors
						while = {
							count = total_sectors
							# find and flag systems
							random_owned_sector = {
								limit = {
									has_sector_type = normal_sector
									NOT = { has_sector_flag = rebel_sector }
					            }
					            set_sector_flag = rebel_sector
							    every_system_within_border = {
						            limit = {
						                check_civwar_capital = yes
						            }
						            set_star_flag = civil_war_flip
						        }
							}
						}
						get_civil_war_faction = yes
					}
				}
			}
			else = {
				random_list = {
					60 = { # Planet
						get_civil_war_faction_planet = yes
					}
					40 = { # 1 Sector
						get_random_sector_for_civwar = yes
						get_civil_war_faction = yes
					}
				}
			}
		}
		# Governors
		else_if = {
			limit = { 
				num_sectors > 2
			}
			random_list = {
				12 = { # They get lucky
					get_sectors_and_multiply = yes
					set_country_flag = traitor_got_multiple_sectors
					while = {
						count = total_sectors
						# find and flag systems
						random_owned_sector = {
							limit = {
								has_sector_type = normal_sector
								NOT = { has_sector_flag = rebel_sector }
				            }
				            set_sector_flag = rebel_sector
						    every_system_within_border = {
					            limit = {
					                check_civwar_capital = yes
					            }
					            set_star_flag = civil_war_flip
					        }
						}
					}
					if = {
						limit {
							event_target:civil_war_leader = {
								has_trait = leader_trait_corrupt
							}
						}
						if = {
							limit = {
								has_global_flag = more_authorities_activated
							}
							country_event = { id = civwarcountry_ma.1014 }
						}
						else = {
							country_event = { id = civwarcountry.1014 }
						}
					}
					else = {
						get_civil_war_faction = yes
					}
				}
				88 = { # They only get one sector
					if = {
						limit {
							event_target:civil_war_leader = {
								has_trait = leader_trait_corrupt
							}
						}
						if = {
							limit = {
								has_global_flag = more_authorities_activated
							}
							country_event = { id = civwarcountry_ma.1014 }
						}
						else = {
							country_event = { id = civwarcountry.1014 }
						}
					}
					get_civil_war_faction = yes
				}
			}
		}
		else = {
			get_civil_war_faction = yes
		}
	}

	after = {
		every_owned_fleet = {
			set_event_locked = no
		}
	}
}

country_event = { # Civil War via Admiral
	id = civwar.3001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		any_owned_leader = {
			has_leader_flag = civil_war_leader_admiral_faction
		}
	}
	
	immediate = {

		save_event_target_as = current_civwar_originator

		# setting flags
		set_country_flag = civwar_mother_country

		# Set Empire Sprawl Variable
		get_empire_sprawl = yes

		# event lock all fleets to prevent exploits
		every_owned_fleet = { 
			set_event_locked = yes
		}

		# Remove Admiral
		# Set empire species to rebelling admiral's species
		if = {
			limit = {
				any_owned_fleet = {
					exists = leader
					leader = { has_leader_flag = civil_war_leader_admiral_faction }
				}
			}
			random_owned_fleet = {
				limit = {
					is_ship_class = shipclass_military
					leader = {
						has_leader_flag = civil_war_leader_admiral_faction
					}
				}
				save_global_event_target_as = admiral_rebel_rally_point
				set_fleet_flag = civil_war_fleet
				leader = {
					set_leader_flag = faction_local_flag
					solar_system = { save_global_event_target_as = admiral_rebel_system }
					species = { save_global_event_target_as = civwar_species }
					set_leader_flag = leader_civil_war_faction
				}
				prev = {
					random_pop_faction = {
						limit = {
							has_pop_faction_flag = civil_war_faction_admiral
							leader = { has_leader_flag = faction_local_flag }
						}
						leader = { remove_leader_flag = faction_local_flag }
						remove_pop_faction_flag = civil_war_faction_admiral
						save_global_event_target_as = civil_war_party
					}
				}
				leader = {
					save_global_event_target_as = civil_war_leader
					exile_leader_as = civil_war_leader
				}
				# Destroy 33% of the fleet in the infighting
				every_owned_ship = {
					limit = { is_ship_class = shipclass_military }
				    PREV = { change_variable = { which = ship_count value = 1 }}
				}
				divide_variable = { which = ship_count value = 3 }
				while = {
				    count = ship_count
				    random_owned_ship = {
				    	limit = {
				    		is_ship_class = shipclass_military
				    		NOR = {
				    			is_ship_size = giga_massive_planet
				    			is_ship_size = giga_planet_behemoth
				    			is_ship_size = giga_systemcraft
				    		}
				    	}
				        delete_ship = THIS
				    }
				}
				set_variable = { which = ship_count value = 0 }
			}
		}
		else = {
			random_owned_leader = {
				limit = {
					has_leader_flag = civil_war_leader_admiral_faction
				}
				set_leader_flag = faction_local_flag
				prev = {
					random_owned_sector = {
						limit = {
							has_sector_type = normal_sector
			            }
			            set_sector_flag = rebel_sector
					    every_system_within_border = {
				            limit = {
				                check_civwar_capital = yes
				            }
				            set_star_flag = civil_war_flip
				        }
					}
					random_pop_faction = {
						limit = {
							has_pop_faction_flag = civil_war_faction_admiral
							leader = { has_leader_flag = faction_local_flag }
						}
						leader = { remove_leader_flag = faction_local_flag }
						remove_pop_faction_flag = civil_war_faction_admiral
						save_global_event_target_as = civil_war_party
					}
				}
				# Set empire species to rebelling leader's species
				species = { save_global_event_target_as = civwar_species }
				save_global_event_target_as = civil_war_leader
				# Remove Governor
				exile_leader_as = civil_war_leader	
			}
		}

		get_civil_war_faction = yes
	}

	after = {
		every_owned_fleet = {
			set_event_locked = no
		}
		event_target:civil_war_leader = {
			kill_leader = { show_notification = no }
		}
	}
}

country_event = { # Planetary Rebellion via Disgruntled Planet
	id = civwar.3100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		any_owned_planet = {
			has_planet_flag = revolt_tick_5
			has_modifier = planetary_rebels
			is_occupied_flag = no
			has_orbital_bombardment = no
			NOT = {
				has_planet_flag = rebellion_suppressed
			}
		}
	}
	
	immediate = {

		save_event_target_as = current_civwar_originator

		# setting flags
		set_country_flag = civwar_mother_country

		# Set Empire Sprawl Variable
		get_empire_sprawl = yes

		# find and flag planet and get species
		random_owned_planet = {
			limit = {
				has_planet_flag = revolt_tick_5
				has_modifier = planetary_rebels
			}
			random_owned_pop = {
				limit = {
					PREV = { is_majority_species = prev.species }
					NOR = { 
						pop_has_trait = trait_syncretic_proles
						is_pop_category = pre_sapients
					}  
				}  
				species = { save_global_event_target_as = civwar_species }
			}
			if = {
				limit = {
					has_global_flag = more_authorities_activated
				}
				planet_event = { id = civplan.2100 }
			}
			else = {
				planet_event = { id = civplan.2000 }
			}
		}
	}
}

#################
# Setup

country_event = { # Setup for Governor / Scientist / General Civil War
	id = civwar.4000
	hide_window = yes
	is_triggered_only = yes

	immediate = {

		# saving civwar and host as event targets
		save_event_target_as = current_civwar_rebels

		# setting flags
		set_country_flag = civwar_country

		set_relation_flag = {
			who = event_target:current_civwar_originator
			flag = civwar_to_host_flag
		}

		from = {
			set_relation_flag = {
				who = root
				flag = host_to_civwar_flag
			}
		}

		if = {
			limit = {
				has_federation = yes
			}
			leave_alliance = { override_requirements = yes }
		}

		# setting graphical culture
		set_graphical_culture = event_target:current_civwar_originator

		# establish comms
		every_country = {
			limit = {
				OR = {
					has_communications = event_target:current_civwar_originator
					intel_level = {
						level > low
						system = event_target:current_civwar_originator.capital_scope.solar_system
					}
					any_system = {
						has_star_flag = civil_war_flip
						prev = {
							intel_level = {
								level > low
								system = prev
							}
						}
					}
				}
			}
			establish_communications_no_message = root
			establish_contact = { who = root location = from }
		}

		# clear new contact opinion modifier
		if = {
			limit = {
				has_opinion_modifier = {
					who = event_target:current_civwar_originator
					modifier = opinion_new_contact
				}
			}
			remove_opinion_modifier = {
				who = event_target:current_civwar_originator
				modifier = opinion_new_contact
			}
		}

		# flip remaining flagged systems and remove flags
		event_target:current_civwar_originator = {
			every_owned_planet = {
				limit = {
					solar_system = {
						has_star_flag = civil_war_flip
					}
				}
				solar_system = {
					every_fleet_in_system = {
						limit = {
							exists = owner
							is_owned_by = event_target:current_civwar_originator
							any_owned_ship = { is_ship_class = shipclass_military_station }
						}
						set_owner = root
					}
				}
				set_owner = root
				set_controller = root
			}
			every_owned_sector = {
				limit = {
					has_sector_flag = rebel_sector
	            }
	            remove_sector_flag = rebel_sector
			}
			every_system_within_border = {
				limit = {
					has_star_flag = civil_war_flip
				}
				remove_star_flag = civil_war_flip
				starbase = { set_owner = root }
			}
		}

		# get host's technologies
		copy_techs_from = {
			target = event_target:current_civwar_originator
			except = {
				# Horizon Signal
				tech_akx_worm_1
				tech_akx_worm_2
				tech_akx_worm_3
			}
		}

		# survey host's surveyed planets
		every_galaxy_planet = {
			limit = {
				is_surveyed = {
					who = event_target:current_civwar_originator
					status = yes
				}
			}
			set_surveyed = {
				surveyed = yes
				surveyor = root
			}
		}

		# Set capital starbase size
		capital_scope = {
			solar_system = {
				starbase = {
					set_starbase_size = starbase_starport
				}
			}
		}

		# create fleets and give resources, destroy home country fleets
		country_event = { id = civwar.7000 }

		# Maybe the rebels get an Attack Moon/Planet/Systemcraft if it was in their borders
		every_system_within_border = {
			random_ship_in_system = {
				limit = {
					is_owned_by = event_target:current_civwar_originator
					OR = {
						is_ship_size = giga_massive_planet
		    			is_ship_size = giga_planet_behemoth
		    			is_ship_size = giga_systemcraft
					}
				}
				fleet = {
					random_list = {
						60 = { # The rebels get your big toy.
							set_owner = event_target:current_civwar_rebels
						}
						40 = {
							# The governor couldn't pull it off
						}
					}
				}
			}
		}

		add_100_unity_per_year_passed = yes # scripted effect

		#science
		create_fleet = {
			effect = {
				set_owner = root

				create_ship = {
					name = random
					random_existing_design = science
				}

				set_fleet_stance = evasive				
				set_location = root.capital_scope
				
				owner = {
					create_leader = {
						name = random
						class = scientist
						sub_type = survey
						species = event_target:civwar_species
					}
				}
				set_leader = last_created_leader
			}			
		}
			
		#constructor
		create_fleet = {
			effect = {
				set_owner = root
				
				create_ship = {
					name = random
					random_existing_design = constructor
				}
				
				set_fleet_stance = evasive
				set_location = root.capital_scope
			}
		}

		# Make Traitor Leader
		country_event = { id = civwar.6000 }
		ruler = {
			add_trait = trait_ruler_deep_connections
		}

		# If this was done via espionage operation, give them the resources
		if = {
			limit = {
				ruler = {
					has_leader_flag = small_op_resources
				}
			}
			add_resource = {
				energy = 2000
				alloys = 1000
				consumer_goods = 500
			}
		}
		else_if = {
			limit = {
				ruler = {
					has_leader_flag = medium_op_resources
				}
			}
			add_resource = {
				energy = 5000
				alloys = 2500
				consumer_goods = 1000
			}
		}
		else_if = {
			limit = {
				ruler = {
					has_leader_flag = large_op_resources
				}
			}
			add_resource = {
				energy = 10000
				alloys = 5000
				consumer_goods = 2500
			}
		}
		if = {
			limit = {
				ruler = {
					OR = {
						has_leader_flag = small_op_resources
						has_leader_flag = medium_op_resources
						has_leader_flag = large_op_resources
					}
				}
			}
			ruler = {
				remove_leader_flag = small_op_resources
				remove_leader_flag = medium_op_resources
				remove_leader_flag = large_op_resources
			}
		}
	}

	after = {
		# To fix naming issues. This line is necessary.
		if = {
			limit = {
				capital_scope = { NOT = { has_planet_flag = civwar_name_changed } }
				event_target:current_civwar_originator = { is_ai = yes }
			}
			capital_scope = {
				set_name = random
				set_planet_flag = civwar_name_changed
			}
		}
		set_name = random

		add_intel = {
			who = event_target:current_civwar_originator
			amount = 70
		}

		# create armies
		create_civwar_armies = yes

		# Flavor Civics
		if = {
			limit = {
				NOT = { has_civic = civic_warrior_culture }
				event_target:civil_war_leader = {
					has_trait = leader_trait_army_veteran
				}
			}
			force_add_civic = civic_warrior_culture
		}
		else_if = {
			limit = {
				NOT = { has_civic = civic_distinguished_admiralty }
				event_target:civil_war_leader = {
					has_trait = leader_trait_retired_fleet_officer
				}
			}
			force_add_civic = civic_distinguished_admiralty
		}
		else_if = {
			limit = {
				NOT = { has_civic = civic_slaver_guilds }
				event_target:civil_war_leader = {
					has_trait = leader_trait_iron_fist
				}
			}
			force_add_civic = civic_slaver_guilds
		}
		else = {
			# Do Nothing
		}

		event_target:current_civwar_originator = {
			
			# Add intel
			add_intel = {
				who = event_target:current_civwar_rebels
				amount = 70
			}

			# Declare War
			if = {
				limit = {
					event_target:civil_war_leader = {
						has_leader_flag = civil_war_leader_governor_faction
					}
				}
				country_event = { id = civwar.5000 }
			}
			else_if = {
				limit = {
					event_target:civil_war_leader = {
						has_leader_flag = civil_war_leader_general_faction
					}
				}
				country_event = { id = civwar.5002 }
			}
			else_if = {
				limit = {
					event_target:civil_war_leader = {
						has_leader_flag = civil_war_leader_scientist_faction
					}
				}
				country_event = { id = civwar.5003 }
			}

			remove_country_flag = empire_sprawl_0
			remove_country_flag = empire_sprawl_0_10
			remove_country_flag = empire_sprawl_10_20
			remove_country_flag = empire_sprawl_20_30
			remove_country_flag = empire_sprawl_30_40
			remove_country_flag = empire_sprawl_40_50
			remove_country_flag = empire_sprawl_50_60
			remove_country_flag = empire_sprawl_60_70
			remove_country_flag = empire_sprawl_70_80
			remove_country_flag = empire_sprawl_80_90
			remove_country_flag = empire_sprawl_90_100
			remove_country_flag = empire_sprawl_100_plus
		}
	}
}

country_event = { # Setup for Admiral Revolt
	id = civwar.4001
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# saving civwar and host as event targets
		save_event_target_as = current_civwar_rebels

		# setting flags
		set_country_flag = civwar_fleet

		set_relation_flag = {
			who = event_target:current_civwar_originator
			flag = civwar_to_host_flag
		}

		from = {
			set_relation_flag = {
				who = root
				flag = host_to_civwar_flag
			}
		}

		if = {
			limit = {
				exists = event_target:admiral_rebel_system
			}
			# Flip system and any owned planets
			event_target:admiral_rebel_system = {
				if = {
					limit = {
						check_civwar_capital = yes
						exists = starbase
						starbase = {
							is_owned_by = event_target:current_civwar_originator
						}
					}
					prev = { set_country_flag = admiral_skirmish }
					starbase = { set_owner = root }
					give_admiral_planets = yes
					every_neighbor_system = {
						limit = {
							check_civwar_capital = yes
							exists = starbase
							starbase = {
								is_owned_by = event_target:current_civwar_originator
							}
						}
						starbase = { set_owner = root }
						give_admiral_planets = yes
					}
				}
			}
			clear_global_event_target = admiral_rebel_system
		}
		else = {
			set_country_flag = admiral_has_sector
			# flip remaining flagged systems and remove flags
			event_target:current_civwar_originator = {
				every_owned_planet = {
					limit = {
						solar_system = {
							has_star_flag = civil_war_flip
						}
					}
					solar_system = {
						every_fleet_in_system = {
							limit = {
								exists = owner
								is_owned_by = event_target:current_civwar_originator
								any_owned_ship = { is_ship_class = shipclass_military_station }
							}
							set_owner = root
						}
					}
					set_owner = root
					set_controller = root
				}
				every_owned_sector = {
					limit = {
						has_sector_flag = rebel_sector
		            }
		            remove_sector_flag = rebel_sector
				}
				every_system_within_border = {
					limit = {
						has_star_flag = civil_war_flip
					}
					remove_star_flag = civil_war_flip
					starbase = { set_owner = root }
				}
			}
		}

		if = {
			limit = {
				has_federation = yes
			}
			leave_alliance = { override_requirements = yes }
		}

		# setting graphical culture
		set_graphical_culture = event_target:current_civwar_originator

		# establish comms
		every_country = {
			limit = {
				OR = {
					has_communications = event_target:current_civwar_originator
					intel_level = {
						level > low
						system = event_target:current_civwar_originator.capital_scope.solar_system
					}
					any_system = {
						has_star_flag = civil_war_flip
						prev = {
							intel_level = {
								level > low
								system = prev
							}
						}
					}
				}
			}
			establish_communications_no_message = root
			establish_contact = { who = root location = from }
		}

		# clear new contact opinion modifier
		if = {
			limit = {
				has_opinion_modifier = {
					who = event_target:current_civwar_originator
					modifier = opinion_new_contact
				}
			}
			remove_opinion_modifier = {
				who = event_target:current_civwar_originator
				modifier = opinion_new_contact
			}
		}

		# flip remaining flagged fleets
		event_target:current_civwar_originator = {
			while = {
				count = 100
				limit = {
					any_owned_fleet = {
						has_fleet_flag = civil_war_fleet
						is_owned_by = event_target:current_civwar_originator
					}
				}
				random_owned_fleet = {
					limit = {
						has_fleet_flag = civil_war_fleet
						is_owned_by = event_target:current_civwar_originator
					}
					fleet = { set_owner = event_target:current_civwar_rebels }
				}
			}
		}

		# get host's technologies
		copy_techs_from = {
			target = event_target:current_civwar_originator
			except = {
				# Horizon Signal
				tech_akx_worm_1
				tech_akx_worm_2
				tech_akx_worm_3
			}
		}

		# survey host's surveyed planets
		every_galaxy_planet = {
			limit = {
				is_surveyed = {
					who = event_target:current_civwar_originator
					status = yes
				}
			}
			set_surveyed = {
				surveyed = yes
				surveyor = root
			}
		}

		# Create Armies and give resources
		if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_0 
				}
			}
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 3
						create_army_transport = {
							species = event_target:civwar_species
							army_type = "assault_army"
						}
					}
					set_location = {
						target = event_target:admiral_rebel_rally_point
						distance = 5
						angle = random
					}
				}
			}
			add_resource = {
				energy = 3000
				minerals = 3000
				influence = 1000
				alloys = 3000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_0_10
				}
			}
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 5
						create_army_transport = {
							species = event_target:civwar_species
							army_type = "assault_army"
						}
					}
					set_location = {
						target = event_target:admiral_rebel_rally_point
						distance = 5
						angle = random
					}
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 1000
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_10_20
				}
			}
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 8
						create_army_transport = {
							species = event_target:civwar_species
							army_type = "assault_army"
						}
					}
					set_location = {
						target = event_target:admiral_rebel_rally_point
						distance = 5
						angle = random
					}
				}
			}
			add_resource = {
				energy = 8000
				minerals = 8000
				influence = 1000
				alloys = 8000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_20_30
				}
			}
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 11
						create_army_transport = {
							species = event_target:civwar_species
							army_type = "assault_army"
						}
					}
					set_location = {
						target = event_target:admiral_rebel_rally_point
						distance = 5
						angle = random
					}
				}
			}
			add_resource = {
				energy = 10000
				minerals = 10000
				influence = 1000
				alloys = 10000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_30_40
				}
			}
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 14
						create_army_transport = {
							species = event_target:civwar_species
							army_type = "assault_army"
						}
					}
					set_location = {
						target = event_target:admiral_rebel_rally_point
						distance = 5
						angle = random
					}
				}
			}
			add_resource = {
				energy = 12000
				minerals = 12000
				influence = 1000
				alloys = 12000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_40_50
				}
			}
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 17
						create_army_transport = {
							species = event_target:civwar_species
							army_type = "assault_army"
						}
					}
					set_location = {
						target = event_target:admiral_rebel_rally_point
						distance = 5
						angle = random
					}
				}
			}
			add_resource = {
				energy = 14000
				minerals = 14000
				influence = 1000
				alloys = 14000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_50_60
				}
			}
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 19
						create_army_transport = {
							species = event_target:civwar_species
							army_type = "assault_army"
						}
					}
					set_location = {
						target = event_target:admiral_rebel_rally_point
						distance = 5
						angle = random
					}
				}
			}
			add_resource = {
				energy = 16000
				minerals = 16000
				influence = 1000
				alloys = 15000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_60_70
				}
			}
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 21
						create_army_transport = {
							species = event_target:civwar_species
							army_type = "assault_army"
						}
					}
					set_location = {
						target = event_target:admiral_rebel_rally_point
						distance = 5
						angle = random
					}
				}
			}
			add_resource = {
				energy = 18000
				minerals = 18000
				influence = 1000
				alloys = 15000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_70_80
				}
			}
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 24
						create_army_transport = {
							species = event_target:civwar_species
							army_type = "assault_army"
						}
					}
					set_location = {
						target = event_target:admiral_rebel_rally_point
						distance = 5
						angle = random
					}
				}
			}
			add_resource = {
				energy = 20000
				minerals = 20000
				influence = 1000
				alloys = 15000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_80_90
				}
			}
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 27
						create_army_transport = {
							species = event_target:civwar_species
							army_type = "assault_army"
						}
					}
					set_location = {
						target = event_target:admiral_rebel_rally_point
						distance = 5
						angle = random
					}
				}
			}
			add_resource = {
				energy = 22000
				minerals = 22000
				influence = 1000
				alloys = 15000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_90_100
				}
			}
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 30
						create_army_transport = {
							species = event_target:civwar_species
							army_type = "assault_army"
						}
					}
					set_location = {
						target = event_target:admiral_rebel_rally_point
						distance = 5
						angle = random
					}
				}
			}
			add_resource = {
				energy = 24000
				minerals = 24000
				influence = 1000
				alloys = 15000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_100_plus
				}
			}
			create_fleet = {
				effect = {
					set_owner = root
					while = {
						count = 33
						create_army_transport = {
							species = event_target:civwar_species
							army_type = "assault_army"
						}
					}
					set_location = {
						target = event_target:admiral_rebel_rally_point
						distance = 5
						angle = random
					}
				}
			}
			add_resource = {
				energy = 26000
				minerals = 26000
				influence = 1000
				alloys = 15000
			}
		}
		add_100_unity_per_year_passed = yes # scripted effect

		#science
		create_fleet = {
			effect = {
				set_owner = root

				create_ship = {
					name = random
					random_existing_design = science
				}

				set_fleet_stance = evasive				
				set_location = {
					target = event_target:admiral_rebel_rally_point
					distance = 5
					angle = random
				}
				
				owner = {
					create_leader = {
						class = scientist
						sub_type = survey
						name = random
						species = event_target:civwar_species
					}
				}
				set_leader = last_created_leader
			}			
		}
			
		#constructor
		create_fleet = {
			effect = {
				set_owner = root
				
				create_ship = {
					name = random
					random_existing_design = constructor
				}
				
				set_fleet_stance = evasive
				set_location = {
					target = event_target:admiral_rebel_rally_point
					distance = 5
					angle = random
				}
			}
		}

		# Colony Ship
		create_fleet = {
			effect = {
				set_owner = root
				
				create_ship = {
					name = random
					random_existing_design = colonizer
				}
				
				set_fleet_stance = evasive
				set_location = {
					target = event_target:admiral_rebel_rally_point
					distance = 5
					angle = random
				}
			}
		}

		# Make Admiral Leader
		country_event = { id = civwar.6001 }

		# If this was done via espionage operation, give them the resources
		if = {
			limit = {
				ruler = {
					has_leader_flag = small_op_resources
				}
			}
			add_resource = {
				energy = 2000
				alloys = 1000
				consumer_goods = 500
			}
		}
		else_if = {
			limit = {
				ruler = {
					has_leader_flag = medium_op_resources
				}
			}
			add_resource = {
				energy = 5000
				alloys = 2500
				consumer_goods = 1000
			}
		}
		else_if = {
			limit = {
				ruler = {
					has_leader_flag = large_op_resources
				}
			}
			add_resource = {
				energy = 10000
				alloys = 5000
				consumer_goods = 2500
			}
		}
		if = {
			limit = {
				ruler = {
					OR = {
						has_leader_flag = small_op_resources
						has_leader_flag = medium_op_resources
						has_leader_flag = large_op_resources
					}
				}
			}
			ruler = {
				remove_leader_flag = small_op_resources
				remove_leader_flag = medium_op_resources
				remove_leader_flag = large_op_resources
			}
		}
	}

	
	after = {
		# To fix naming issues. This line is necessary.
		set_name = random

		add_intel = {
			who = event_target:current_civwar_originator
			amount = 70
		}

		event_target:current_civwar_originator = {
			add_intel = {
				who = event_target:current_civwar_rebels
				amount = 70
			}

			# Declare War
			country_event = { id = civwar.5001 }

			remove_country_flag = empire_sprawl_0
			remove_country_flag = empire_sprawl_0_10
			remove_country_flag = empire_sprawl_10_20
			remove_country_flag = empire_sprawl_20_30
			remove_country_flag = empire_sprawl_30_40
			remove_country_flag = empire_sprawl_40_50
			remove_country_flag = empire_sprawl_50_60
			remove_country_flag = empire_sprawl_60_70
			remove_country_flag = empire_sprawl_70_80
			remove_country_flag = empire_sprawl_80_90
			remove_country_flag = empire_sprawl_90_100
			remove_country_flag = empire_sprawl_100_plus
		}
	}
}

country_event = { # Setup for Planetary Rebellion
	id = civwar.4100
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_country_type = default

		create_leader = {
			class = ruler
			species = event_target:civwar_species
			name = random
			skill = 5
			traits = {}
		}
		set_leader = last_created_leader
		last_created_leader = {
			add_trait = trait_ruler_deep_connections
			save_global_event_target_as = civil_war_leader_ruler
		}

		set_relation_flag = {
			who = event_target:current_civwar_originator
			flag = civwar_to_host_flag
		}

		event_target:current_civwar_originator = {
			set_relation_flag = {
				who = root
				flag = host_to_civwar_flag
			}
		}

		if = {
			limit = {
				has_federation = yes
			}
			leave_alliance = { override_requirements = yes }
		}

		# setting graphical culture
		set_graphical_culture = event_target:current_civwar_originator

		# establish comms
		every_country = {
			limit = {
				OR = {
					has_communications = event_target:current_civwar_originator
					intel_level = {
						level > low
						system = event_target:current_civwar_rebels.capital_scope.solar_system
					}
					any_system = {
						has_star_flag = civil_war_flip
						prev = {
							intel_level = {
								level > low
								system = prev
							}
						}
					}
				}
			}
			establish_communications_no_message = root
			establish_contact = { who = root location = from }
		}

		# clear new contact opinion modifier
		if = {
			limit = {
				has_opinion_modifier = {
					who = event_target:current_civwar_originator
					modifier = opinion_new_contact
				}
			}
			remove_opinion_modifier = {
				who = event_target:current_civwar_originator
				modifier = opinion_new_contact
			}
		}

		# get host's technologies
		copy_techs_from = {
			target = event_target:current_civwar_originator
			except = {
				# Horizon Signal
				tech_akx_worm_1
				tech_akx_worm_2
				tech_akx_worm_3
			}
		}

		# survey host's surveyed planets
		every_galaxy_planet = {
			limit = {
				is_surveyed = {
					who = event_target:current_civwar_originator
					status = yes
				}
			}
			set_surveyed = {
				surveyed = yes
				surveyor = root
			}
		}

		# Set capital starbase size and flip neighbor systems
		capital_scope = {
			solar_system = {
				starbase = {
					set_starbase_size = starbase_starport
				}
				every_neighbor_system = {
					limit = {
						NOR = {
							any_system_planet = {
								is_owned_by = event_target:current_civwar_originator
							}
							any_fleet_in_system = {
								is_ship_class = shipclass_military
								is_owned_by = event_target:current_civwar_originator
							}
						}
						exists = starbase
						starbase = {
							is_owned_by = event_target:current_civwar_originator
						}
					}
					starbase = { set_owner = root }
				}
			}
		}

		#science
		create_fleet = {
			effect = {
				set_owner = root

				create_ship = {
					name = random
					random_existing_design = science
				}

				set_fleet_stance = evasive				
				set_location = root.capital_scope
				
				owner = {
					create_leader = {
						class = scientist
						sub_type = survey
						name = random
						species = event_target:civwar_species
					}
				}
				set_leader = last_created_leader
			}			
		}
			
		#constructor
		create_fleet = {
			effect = {
				set_owner = root
				
				create_ship = {
					name = random
					random_existing_design = constructor
				}
				
				set_fleet_stance = evasive
				set_location = root.capital_scope
			}
		}
	}

	after = {
		# To fix naming issues. This line is necessary.
		if = {
			limit = {
				capital_scope = { NOT = { has_planet_flag = civwar_name_changed } }
				event_target:current_civwar_originator = { is_ai = yes }
			}
			capital_scope = {
				set_name = random
				set_planet_flag = civwar_name_changed
			}
		}
		set_name = random

		add_intel = {
			who = event_target:current_civwar_originator
			amount = 70
		}

		# create ships
		if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_0 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:current_civwar_rebels
					while = {
						count = 2
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 4000
				minerals = 4000
				influence = 200
				alloys = 4000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_0_10 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:current_civwar_rebels
					while = {
						count = 3
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 5000
				minerals = 5000
				influence = 200
				alloys = 5000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_10_20 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:current_civwar_rebels
					while = {
						count = 4
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_20_30 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:current_civwar_rebels
					while = {
						count = 5
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_30_40 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:current_civwar_rebels
					while = {
						count = 6
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_40_50 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:current_civwar_rebels
					while = {
						count = 7
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_50_60 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:current_civwar_rebels
					while = {
						count = 10
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_60_70 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:current_civwar_rebels
					while = {
						count = 12
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_70_80 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:current_civwar_rebels
					while = {
						count = 14
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_80_90 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:current_civwar_rebels
					while = {
						count = 16
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_90_100 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:current_civwar_rebels
					while = {
						count = 18
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:current_civwar_originator = {
					has_country_flag = empire_sprawl_100_plus 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:current_civwar_rebels
					while = {
						count = 20
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		add_100_unity_per_year_passed = yes # scripted effect

		event_target:current_civwar_originator = {
			add_intel = {
				who = event_target:current_civwar_rebels
				amount = 70
			}
			remove_country_flag = empire_sprawl_0
			remove_country_flag = empire_sprawl_0_10
			remove_country_flag = empire_sprawl_10_20
			remove_country_flag = empire_sprawl_20_30
			remove_country_flag = empire_sprawl_30_40
			remove_country_flag = empire_sprawl_40_50
			remove_country_flag = empire_sprawl_50_60
			remove_country_flag = empire_sprawl_60_70
			remove_country_flag = empire_sprawl_70_80
			remove_country_flag = empire_sprawl_80_90
			remove_country_flag = empire_sprawl_90_100
			remove_country_flag = empire_sprawl_100_plus
		}
	}
}

#################
# Communications

country_event = { # Governor - Communications
	id = civwar.5000
	picture = GFX_evt_civil_action
	title = civwar.5000.name
	desc = civwar.5000.desc
	hide_window = no
	is_triggered_only = yes

	option = {
		name = ON_SCREEN_REBELS
		ai_chance = {
			factor = 1
		}
		hidden_effect = {
			if = {
				limit = {
					is_subject = no
					NOT = { has_country_flag = traitor_got_multiple_sectors }
					event_target:civil_war_leader = {
						has_leader_flag = civil_war_leader_governor_faction
						NOT = { has_trait = leader_trait_corrupt }
					}
				}
				random_list = {
					85 = { country_event = { id = civcom.5000 } }
					15 = { country_event = { id = civcom.5100 } }
				}
			}
			# Governor got multiple sectors, wont ask to become a vassal.
			else_if = {
				limit = {
					is_subject = no
					has_country_flag = traitor_got_multiple_sectors
					event_target:civil_war_leader = {
						has_leader_flag = civil_war_leader_governor_faction
						NOT = { has_trait = leader_trait_corrupt }
					}
				}
				country_event = { id = civcom.5000 }
			}
			# Subject civil war, catch and ask overlord.
			else_if = {
				limit = {
					is_subject = yes
					event_target:civil_war_leader = {
						OR = {
							has_leader_flag = civil_war_leader_governor_faction
							has_trait = leader_trait_corrupt
						}
					}
				}
				overlord = {
					country_event = { id = civcom.3000 }
				}
			}
			# Corrupt governor got multiple sectors, wont ask to become a vassal.
			else_if = {
				limit = {
					has_country_flag = traitor_got_multiple_sectors
				}
				country_event = { id = civcom.5040 }
			}
			else = {
				random_list = {
					95 = { country_event = { id = civcom.5040 } }
					5 = { country_event = { id = civcom.5140 } }
				}
			}
		}
	}
}

country_event = { # Admiral - Communications
	id = civwar.5001
	picture = GFX_evt_civil_action
	title = civwar.5001.name
	hide_window = no
	is_triggered_only = yes

	desc = {
		text = civwar.5001.desc
		trigger {
			from = { has_country_flag = admiral_skirmish }
		}
	}

	desc = {
		text = civwar.5001.sector.desc
		trigger {
			from = { NOT = { has_country_flag = admiral_skirmish } }
		}
	}

	option = {
		name = ON_SCREEN_REBELS
		ai_chance = {
			factor = 1
		}
		hidden_effect = {
			if = {
				limit = {
					is_subject = no
				}
				if = {
					limit = {
						event_target:current_civwar_rebels = {
							num_owned_planets > 0
						}
					}
					random_list = {
						95 = { country_event = { id = civcom.5031 } }
						5 = { country_event = { id = civcom.5130 } }
					}
				}
				else = {
					country_event = { id = civcom.5030 }
				}
			}
			else = {
				country_event = { id = civcom.3001 }
			}
		}
	}
}

country_event = { # General - Communications
	id = civwar.5002
	picture = GFX_evt_civil_action
	title = civwar.5002.name
	desc = civwar.5002.desc
	hide_window = no
	is_triggered_only = yes

	option = {
		name = ON_SCREEN_REBELS
		ai_chance = {
			factor = 1
		}
		hidden_effect = {
			if = {
				limit = {
					NOT = { is_subject = yes }
				}
				random_list = {
					80 = { country_event = { id = civcom.5020 } }
					20 = { country_event = { id = civcom.5120 } }
				}
			}
			else = {
				country_event = { id = civcom.3000 }
			}
		}
	}
}

country_event = { # Scientist - Communications
	id = civwar.5003
	picture = GFX_evt_civil_action
	title = civwar.5003.name
	desc = civwar.5003.desc
	hide_window = no
	is_triggered_only = yes

	option = {
		name = ON_SCREEN_REBELS
		ai_chance = {
			factor = 1
		}
		hidden_effect = {
			if = {
				limit = {
					NOT = { is_subject = yes }
				}
				random_list = {
					75 = { country_event = { id = civcom.5010 } }
					25 = { country_event = { id = civcom.5110 } }
				}
			}
			else = {
				country_event = { id = civcom.3000 }
			}
		}
	}
}

country_event = { # Declare War vs. Governor / Scientist / General
	id = civwar.5100
	hide_window = yes
	is_triggered_only = yes

	immediate = { 
		hidden_effect = {
			declare_war = {
				target = event_target:current_civwar_rebels
				name = "NAME_civwar_War"
				attacker_war_goal = "wg_civwar"
			}
		}
	}
}

country_event = { # Declare War vs. Admiral
	id = civwar.5101
	hide_window = yes
	is_triggered_only = yes

	immediate = { 
		hidden_effect = {
			if = {
				limit = {
					event_target:current_civwar_originator = {
						is_subject = yes
					}
					event_target:current_civwar_rebels = {
						num_owned_planets > 0
					}
				}
				declare_war = {
					target = event_target:current_civwar_rebels
					name = "NAME_civwar_War_subject"
					attacker_war_goal = "wg_civwar_subject"
				}
			}
			else_if = {
				limit = {
					event_target:current_civwar_originator = {
						is_subject = yes
					}
				}
				declare_war = {
					target = event_target:current_civwar_rebels
					name = "NAME_admr_rebellion_War"
					attacker_war_goal = "wg_admiral_rebellion"
				}
			}
			else_if = {
				limit = {
					event_target:current_civwar_rebels = {
						num_owned_planets > 0
					}
				}
				declare_war = {
					target = event_target:current_civwar_rebels
					name = "NAME_civwar_War"
					attacker_war_goal = "wg_civwar"
				}
			}
			else = {
				declare_war = {
					target = event_target:current_civwar_rebels
					name = "NAME_admr_rebellion_War"
					attacker_war_goal = "wg_admiral_rebellion"
				}
			}
			clear_global_event_target = admiral_rebel_rally_point
		}
	}
}

country_event = { # Declare War vs Planet
	id = civwar.5200
	hide_window = yes
	is_triggered_only = yes

	immediate = { 
		if = {
			limit = {
				has_federation = yes
			}
			every_federation_ally = {
				set_country_flag = remove_from_civil_war
			}
		}
		if = {
			limit = {
				is_overlord = yes
			}
			every_subject = {
				set_country_flag = remove_from_civil_war
			}
		}
		declare_war = {
			target = event_target:current_civwar_rebels
			name = "NAME_plan_rebellion_War"
			attacker_war_goal = "wg_planet_rebellion"
		}
	}
}

country_event = { # Declare War vs. Governor / Scientist / General / Heir Subjects rebels
	id = civwar.5300
	hide_window = yes
	is_triggered_only = yes

	immediate = { 
		hidden_effect = {
			if = {
				limit = {
					has_federation = yes
				}
				every_federation_ally = {
					limit = {
						NOT = { is_same_value = event_target:current_civwar_originator }
					}
					set_country_flag = remove_from_civil_war
				}
			}
			declare_war = {
				target = event_target:current_civwar_rebels
				name = "NAME_civwar_War_subject"
				attacker_war_goal = "wg_civwar_subject"
			}
		}
	}
}

#################
# Leader Setting

country_event = { # Traitorous Governor/Scientist/General becomes rebellion country leader
	id = civwar.6000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		clone_leader = {
			target = event_target:civil_war_leader
			class = ruler
		}
		set_leader = last_created_leader
		last_created_leader = {
			save_global_event_target_as = civil_war_leader_ruler
			set_leader_flag = started_civil_war
		}
		if = {
			limit = {
				event_target:civil_war_leader = {
					has_leader_flag = small_op_resources
				}
			}
			event_target:civil_war_leader_ruler = {
				set_leader_flag = small_op_resources
			}
		}
		else_if = {
			limit = {
				event_target:civil_war_leader = {
					has_leader_flag = medium_op_resources
				}
			}
			event_target:civil_war_leader_ruler = {
				set_leader_flag = medium_op_resources
			}
		}
		else_if = {
			limit = {
				event_target:civil_war_leader = {
					has_leader_flag = large_op_resources
				}
			}
			event_target:civil_war_leader_ruler = {
				set_leader_flag = large_op_resources
			}
		}
	}
}

country_event = { # Traitorous Admiral becomes rebellion country leader and admiral
	id = civwar.6001
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		clone_leader = {
			target = event_target:civil_war_leader
			class = ruler
		}
		set_leader = last_created_leader
		last_created_leader = {
			save_global_event_target_as = civil_war_leader_ruler
			set_leader_flag = started_civil_war
		}

		clone_leader = {
			target = event_target:civil_war_leader
			class = admiral
		}

		random_owned_fleet = {
			limit = {
				has_fleet_flag = civil_war_fleet
			}
			set_leader = last_created_leader
		}
	}
}

#################
# Fleet Stuff

country_event = { # Create Fleets and give resources, faction civil wars
	id = civwar.7000
	hide_window = yes
	is_triggered_only = yes

	immediate = {

		event_target:civil_war_party = {
			export_trigger_value_to_variable = {
				trigger = support
				variable = faction_support_level
			}
		}

		set_variable = {
			which = faction_support_level
			value = event_target:civil_war_party.faction_support_level
		}

		event_target:current_civwar_originator = {
			create_fleet_from_naval_cap = event_target:civil_war_party.faction_support_level
		}

		random_owned_planet = {
			last_created_fleet = {
				set_owner = prev.owner
				set_location = prev
			}
		}
		
		add_resource = {
			energy = 8000
			minerals = 8000
			influence = 750
			alloys = 8000
		}
	}

	after = {
		# Destroy Fleet percentage from home country
		country_event = { id = civwar.7001 }
	}
}

country_event = { # Destroy Fleets, faction civil wars
	id = civwar.7001
	hide_window = yes
	is_triggered_only = yes

	immediate = {

		save_event_target_as = ship_owner

		multiply_variable = {
			which = faction_support_level
			value = 100
		}

		round_variable = faction_support_level

		event_target:current_civwar_originator = {
			every_owned_fleet = {
				set_variable = { which = ship_count value = 0 }
				every_owned_ship = {
					limit = { is_ship_class = shipclass_military }
					PREV = { change_variable = { which = ship_count value = event_target:ship_owner.faction_support_level } }
				}
				divide_variable = { which = ship_count value = 100 }
				while = {
					count = ship_count
					random_owned_ship = {
						limit = {
				    		is_ship_class = shipclass_military
				    		NOR = {
				    			is_ship_size = giga_massive_planet
				    			is_ship_size = giga_planet_behemoth
				    			is_ship_size = giga_systemcraft
				    			is_ship_size = space_dragon_origin
				    			is_ship_size = space_dragon_origin_baby
				    			is_ship_size = space_amoeba_centenarian
				    			is_ship_size = space_whale_1
				    			is_ship_size = space_whale_2
				    			is_ship_size = space_whale_3
				    			is_ship_size = space_whale_4
				    		}
				    	}
					    delete_ship = THIS
					}
				}
				set_variable = { which = ship_count value = 0 }
			}
		}
	}
}

#################
# Subject Stuff

country_event = { # War won - Transfer subject systems back to subjects
	id = civwar.8000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			has_country_flag = transfer_subject_systems
		}
	}

	immediate = {
		from = {
			remove_country_flag = transfer_subject_systems
		}
		random_country = {
			limit = {
				has_country_flag = subject_for_systems
				has_overlord = from
			}
			remove_country_flag = subject_for_systems
			save_event_target_as = subject_country_transfer
		}
		while = {
			count = 100
			limit = {
				any_system = {
					has_star_flag = subject_system
					exists = starbase
					starbase = {
						is_owned_by = from
					}
				}
			}
			random_system = {
				limit = {
					has_star_flag = subject_system
					exists = starbase
					starbase = {
						is_owned_by = from
					}
				}
				remove_star_flag = subject_system
				starbase = { set_owner = event_target:subject_country_transfer }
			}
		}
	}
}

country_event = { # Status quo - Transfer subject systems back to subjects
	id = civwar.8100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		fromfrom = {
			has_country_flag = transfer_subject_systems
		}
	}

	immediate = {
		fromfrom = {
			remove_country_flag = transfer_subject_systems
		}
		random_country = {
			limit = {
				has_country_flag = subject_for_systems
				has_overlord = fromfrom
			}
			remove_country_flag = subject_for_systems
			save_event_target_as = subject_country_transfer
		}
		while = {
			count = 100
			limit = {
				any_system = {
					has_star_flag = subject_system
					exists = starbase
					starbase = {
						is_owned_by = fromfrom
					}
				}
			}
			random_system = {
				limit = {
					has_star_flag = subject_system
					exists = starbase
					starbase = {
						is_owned_by = fromfrom
					}
				}
				remove_star_flag = subject_system
				starbase = { set_owner = event_target:subject_country_transfer }
			}
		}
		while = {
			count = 100
			limit = {
				any_system = {
					has_star_flag = subject_system
					exists = starbase
					starbase = {
						is_owned_by = fromfromfrom
					}
				}
			}
			random_system = {
				limit = {
					has_star_flag = subject_system
					exists = starbase
					starbase = {
						is_owned_by = fromfromfrom
					}
				}
				remove_star_flag = subject_system
			}
		}
	}
}

#################
# Misc

# 9000 - Free

country_event = { # Unflag federation members who are not in federations anymore
	id = civwar.9100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_federation = no
	}

	immediate = {
		if = {
			limit = {
				has_country_flag = remove_from_civil_war
			}
			remove_country_flag = remove_from_civil_war
		}
	}
}

country_event = { # Remove flag from faction leaders who become rulers
	id = civwar.9200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		ruler = {
			OR = {
				has_leader_flag = civil_war_leader_governor_faction
				has_leader_flag = civil_war_leader_admiral_faction
				has_leader_flag = civil_war_leader_scientist_faction
				has_leader_flag = civil_war_leader_general_faction
			}
		}
	}

	immediate = {
		if = {
			limit = {
				ruler = {
					has_leader_flag = civil_war_leader_governor_faction
				}	
			}
			ruler = {
				remove_leader_flag = civil_war_leader_governor_faction
			}
		}
		else_if = {
			limit = {
				ruler = {
					has_leader_flag = civil_war_leader_admiral_faction
				}	
			}
			ruler = {
				remove_leader_flag = civil_war_leader_admiral_faction
			}
		}
		else_if = {
			limit = {
				ruler = {
					has_leader_flag = civil_war_leader_scientist_faction
				}	
			}
			ruler = {
				remove_leader_flag = civil_war_leader_scientist_faction
			}
		}
		else_if = {
			limit = {
				ruler = {
					has_leader_flag = civil_war_leader_general_faction
				}	
			}
			ruler = {
				remove_leader_flag = civil_war_leader_general_faction
			}
		}
	}
}

country_event = { # Remove flag from faction leaders who become Heirs
	id = civwar.9201
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = heir
		heir = {
			OR = {
				AND = {
					has_leader_flag = civil_war_leader_governor_faction
					has_leader_flag = appointed_heir
				}
				AND = {
					has_leader_flag = civil_war_leader_admiral_faction
					has_leader_flag = appointed_heir
				}
				AND = {
					has_leader_flag = civil_war_leader_scientist_faction
					has_leader_flag = appointed_heir
				}
				AND = {
					has_leader_flag = civil_war_leader_general_faction
					has_leader_flag = appointed_heir
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				heir = {
					has_leader_flag = civil_war_leader_governor_faction
				}	
			}
			heir = {
				remove_leader_flag = civil_war_leader_governor_faction
			}
		}
		else_if = {
			limit = {
				heir = {
					has_leader_flag = civil_war_leader_admiral_faction
				}	
			}
			heir = {
				remove_leader_flag = civil_war_leader_admiral_faction
			}
		}
		else_if = {
			limit = {
				heir = {
					has_leader_flag = civil_war_leader_scientist_faction
				}	
			}
			heir = {
				remove_leader_flag = civil_war_leader_scientist_faction
			}
		}
		else_if = {
			limit = {
				heir = {
					has_leader_flag = civil_war_leader_general_faction
				}	
			}
			heir = {
				remove_leader_flag = civil_war_leader_general_faction
			}
		}
	}
}

country_event = { # Remove flag sectors that are flagged
	id = civwar.9203
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_sector = {
			OR = {
				has_sector_flag = rebel_sector
				has_sector_flag = already_used
			}
		}
	}

	immediate = {
		while = {
			count = 10
			random_owned_sector = {
				limit = {
					has_sector_flag = rebel_sector
				}
				remove_sector_flag = rebel_sector
			}
			random_owned_sector = {
				limit = {
					has_sector_flag = already_used
				}
				remove_sector_flag = already_used
			}
		}
	}
}

country_event = { # Remove Extra civil_war_flip flags
	id = civwar.9204
	hide_window = yes
	is_triggered_only = yes

	immediate = {

		if = {
			limit = {
				any_system_within_border = {
					has_star_flag = civil_war_flip
				}
			}
			every_system_within_border = {
				limit = {
					has_star_flag = civil_war_flip
				}
				remove_star_flag = civil_war_flip
			}
		}
	}
}

event = { # Set Global Flag
	id = civwar.9300
	hide_window = yes
	is_triggered_only = yes

	immediate = {

		if = {
			limit = {
				NOT = { has_global_flag = civil_wars_active }
			}
			set_global_flag = civil_wars_active
		}
	}
}

country_event = { # Admiral Rebellion Rename after win - Status Quo
	id = civwar.9400
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_country_flag = civwar_fleet
	}

	immediate = {
		if = {
			limit = {
				num_owned_planets > 1
			}
			remove_country_flag = civwar_fleet
			capital_scope = {
				set_name = random
			}
			set_name = random
		}
		else = {
			set_country_flag = fleet_no_planets
			# set_name = random
		}
	}
}

country_event = { # Admiral Rebellion Rename after win - yearly fire
	id = civwar.9410
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_at_war = no
		num_owned_planets > 1
		has_country_flag = civwar_fleet
	}

	immediate = {

		if = {
			limit = {
				has_country_flag = fleet_no_planets
			}
			remove_country_flag = fleet_no_planets
		}

		remove_country_flag = civwar_fleet
		
		capital_scope = {
			set_name = random
		}
		set_name = random
	}
}