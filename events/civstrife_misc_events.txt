
###############################
### Civil Wars by MrFunEGUY ###
###############################


namespace = civmisc

#################
# Misc

event = { # Set Global Flag
	id = civmisc.1000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = civil_wars_active }
	}

	immediate = {
		set_global_flag = civil_wars_active
	}
}

# New Dynamic Mod Menu support.
event = {
	id = civmisc.1100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		dmm_is_installed = yes
	}

	immediate = {
		dmm_register_mod = {
			DMM_NAME = civstrife_menu_name
			DMM_FLAG = civil_strife_mod_menu_flag
		}
	}
}

country_event = {
	id = civmisc.1101
	hide_window = yes
	is_triggered_only = yes

	trigger = {
        from = { has_leader_flag = civil_strife_mod_menu_flag }
    }

	immediate = {
		country_event = { id = civmisc.5010 }
	}
}

country_event = { # Kill old Dummy faction Leaders
	id = civmisc.2100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_leader = {
			is_ruler = no
			has_leader_flag = sep_leader
		}
	}

	immediate = {
		every_owned_leader = {
			limit = {
				is_ruler = no
				has_leader_flag = sep_leader
			}
			kill_leader = { show_notification = no }
		}
	}
}

country_event = { # Clear unused global event targets
	id = civmisc.2200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_sector = {
			OR = {
				is_sector_event_target = yes
				is_iso_sector_event_target = yes
			}
			NOT = { has_sector_flag = sector_sep_active }
		}
	}

	immediate = {
		if = {
			limit = {
				any_owned_sector = {
					OR = {
						is_sector_event_target = yes
						is_iso_sector_event_target = yes
					}
					NOT = { has_sector_flag = sector_sep_active }
				}
			}
			every_owned_sector = {
				limit = {
					OR = {
						is_sector_event_target = yes
						is_iso_sector_event_target = yes
					}
					NOT = { has_sector_flag = sector_sep_active }
				}
				remove_sector_event_target = yes
			}
		}
	}
}

country_event = {
	# Set Birthday
	id = civmisc.3000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_country_type = rebel
			is_country_type_with_subjects = yes
			has_civstrife_origin = yes
		}
	}

	immediate = {
		if = {
			limit = { exists = from.owner }
			from.owner = { save_event_target_as = birth_event_owner }
		}
		country_event = { id = civmisc.3001 days = 1 }
	}
}

country_event = { # Set Birthday
	id = civmisc.3001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { is_variable_set = birth_year }
		OR = {
			is_country_type = rebel
			is_country_type_with_subjects = yes
			has_civstrife_origin = yes
		}
	}

	immediate = {

		set_saved_date = {
			key = birth_date
			days_from_present = -1
		}

		set_variable = { which = birth_year value = 2200 }
		export_trigger_value_to_variable = {
			trigger = years_passed
			variable = years_passed_birthday
		}
		change_variable = { which = birth_year value = this.years_passed_birthday }
		clear_variable = years_passed_birthday

		log = "| ========================================="

		log = "| The [this.GetName] was formed on [this.birth_date]"
		if = {
			limit = { is_country_type = rebel }
			log = "| Planetary Rebellion: YES"
		}
		log = "| Capital World: [this.Capital.GetName]"
		log = "| Origin: [this.GetOriginName]"
		log = "| Ruler: [this.Ruler.GetName]"

		if = {
			limit = { is_standard_faction_country = yes }
			log = "| Ethic Rebellion, Rebelling Ethic:"
			if = {
				limit = { has_country_flag = civwar_egal }
				log = "| -- Egalitarian"
			}
			else_if = {
				limit = { has_country_flag = civwar_auth }
				log = "| -- Authoritarian"
			}

			if = {
				limit = { has_country_flag = civwar_mil }
				log = "| -- Militarist"
			}
			else_if = {
				limit = { has_country_flag = civwar_pac }
				log = "| -- Pacifist"
			}

			if = {
				limit = { has_country_flag = civwar_spi }
				log = "| -- Spiritualist"
			}
			else_if = {
				limit = { has_country_flag = civwar_mat }
				log = "| -- Materialist"
			}

			if = {
				limit = { has_country_flag = civwar_phobe }
				log = "| -- Xenophobe"
			}
			else_if = {
				limit = { has_country_flag = civwar_phile }
				log = "| -- Xenophile"
			}

			if = {
				limit = { has_country_flag = civwar_soc }
				log = "| -- Socialism"
			}
			else_if = {
				limit = { has_country_flag = civwar_cap }
				log = "| -- Capitalism"
			}
			log = "| ######"
		}

		if = {
			limit = {
				exists = event_target:birth_event_owner
				has_civstrife_origin = yes
			}
			event_target:birth_event_owner = {
				log = "| Rebelled from [this.GetName]; ETHICS:"
				if = {
					limit = { has_ethic = ethic_egalitarian }
					log = "| -- Egalitarian"
				}
				else_if = {
					limit = { has_ethic = ethic_fanatic_egalitarian }
					log = "| -- Fanatic Egalitarian"
				}
				else_if = {
					limit = { has_ethic = ethic_authoritarian }
					log = "| -- Authoritarian"
				}
				else_if = {
					limit = { has_ethic = ethic_fanatic_authoritarian }
					log = "| -- Fanatic Authoritarian"
				}

				if = {
					limit = { has_ethic = ethic_militarist }
					log = "| -- Militarist"
				}
				else_if = {
					limit = { has_ethic = ethic_fanatic_militarist }
					log = "| -- Fanatic Militarist"
				}
				else_if = {
					limit = { has_ethic = ethic_pacifist }
					log = "| -- Pacifist"
				}
				else_if = {
					limit = { has_ethic = ethic_fanatic_pacifist }
					log = "| -- Fanatic Pacifist"
				}

				if = {
					limit = { has_ethic = ethic_spiritualist }
					log = "| -- Spiritualist"
				}
				else_if = {
					limit = { has_ethic = ethic_fanatic_spiritualist }
					log = "| -- Fanatic Spiritualist"
				}
				else_if = {
					limit = { has_ethic = ethic_materialist }
					log = "| -- Materialist"
				}
				else_if = {
					limit = { has_ethic = ethic_fanatic_materialist }
					log = "| -- Fanatic Materialist"
				}

				if = {
					limit = { has_ethic = ethic_xenophobe }
					log = "| -- Xenophobe"
				}
				else_if = {
					limit = { has_ethic = ethic_fanatic_xenophobe }
					log = "| -- Fanatic Xenophobe"
				}
				else_if = {
					limit = { has_ethic = ethic_xenophile }
					log = "| -- Xenophile"
				}
				else_if = {
					limit = { has_ethic = ethic_fanatic_xenophile }
					log = "| -- Fanatic Xenophile"
				}

				if = {
					limit = { has_ethic = ethic_socialism }
					log = "| -- Socialism"
				}
				else_if = {
					limit = { has_ethic = ethic_fanatic_socialism }
					log = "| -- Fanatic Socialism"
				}
				else_if = {
					limit = { has_ethic = ethic_capitalism }
					log = "| -- Capitalism"
				}
				else_if = {
					limit = { has_ethic = ethic_fanatic_capitalism }
					log = "| -- Fanatic Capitalism"
				}
			}
		}

		log = "| ========================================="
	}
}

# Neighbor/Motherland ship loan indefinite
fleet_event = {
	id = civmisc.4000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_fleet_flag = civwar_loaned_fleet
		NOT = { is_owned_by = root.controller }
	}

	immediate = {
		prolong_fleet_contract = { days = 3600 }
		fleet_event = { id = civmisc.4000 days = 3570 }
	}
}
# Remove Fleet Flag
fleet_event = {
	id = civmisc.4100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_fleet_flag = civwar_loaned_fleet
	}

	immediate = {
		remove_fleet_flag = civwar_loaned_fleet
	}
}

# fires when a country finishes being integrated
# This = overlord
# From = subject
country_event = {
	id = civmisc.4000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		from = { set_country_flag = integrated_subject }
	}
}

country_event = {
	id = civmisc.5000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_civstrife_origin = yes
		NOT = { has_origin = origin_exile_government }
		NOT = { has_origin = origin_disinherited_heir }
		NOT = { has_origin = origin_restored_government }
		NOT = { has_origin = origin_restored_successor_government }
	}

	immediate = {
		event_target:global_event_country = {
			change_variable = { which = total_gal_civstrife_events value = 1 }
			if = {
				limit = { root = { has_origin = origin_civwar } }
				change_variable = { which = total_gal_civil_wars value = 1 }
			}
			else_if = {
				limit = { root = { has_origin = origin_nationalist_rebellion } }
				change_variable = { which = total_gal_nat_events value = 1 }
			}
			else_if = {
				limit = { root = { has_origin = origin_plan_rebellion } }
				change_variable = { which = total_gal_plan_rebs value = 1 }
			}
			else_if = {
				limit = { root = { has_origin = origin_civstrife_slave_rebellion } }
				change_variable = { which = total_gal_slave_rebs value = 1 }
			}
			else_if = {
				limit = { root = { has_origin = origin_civsecession } }
				change_variable = { which = total_gal_secession_rebs value = 1 }
			}
			else_if = {
				limit = { root = { has_origin = origin_heir_rebellion } }
				change_variable = { which = total_gal_heir_rebs value = 1 }
			}
			else_if = {
				limit = {
					OR = {
						root = { has_origin = origin_coup_successor }
						root = { has_origin = origin_coup_independent }
					}
				}
				change_variable = { which = total_gal_coup_rebs value = 1 }
			}
			else_if = {
				limit = {
					OR = {
						root = { has_origin = origin_sec_rebellion }
						root = { has_origin = origin_isolated_rebellion }
					}
				}
				change_variable = { which = total_gal_sector_rebs value = 1 }
			}
		}
	}
}

# Mod Menu support.
country_event = {
	id = civmisc.5010
	title = civstrife.modmenu.title
	desc = civstrife.modmenu.desc
	picture = GFX_evt_open_revolt
	hide_window = no
	is_triggered_only = yes

	option = {
		name = OK
	}
}