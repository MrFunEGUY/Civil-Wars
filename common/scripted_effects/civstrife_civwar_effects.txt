
###############################
### Civil Wars by MrFunEGUY ###
###############################

# Set Installed Heir Setup
set_installed_heir_gov = {
	if = {
		limit = { is_imperial_authority = no }
		change_government = {
			authority = auth_imperial
			cooldown = no
			remove_invalid_civics = yes
		}
	}
	if = {
		limit = { exists = heir }
		heir = { kill_leader = { show_notification = no } }
	}
	set_leader = event_target:traitor_leader
	ruler = { set_leader_flag = grateful_restored_leader_@this }
	add_opinion_modifier = {
		who = prev
		modifier = opinion_restored_to_leadership
	}
}

# Set Installed Leader Setup
set_installed_traitor_gov = {
	if = {
		limit = { is_imp_or_dict = no }
		if = {
			limit = { is_megacorp = yes }
			get_remove_civics = yes
		}
		random_list = {
			85 = {
				change_government = {
					authority = auth_dictatorial
					cooldown = no
					remove_invalid_civics = yes
				}
			}
			15 = {
				change_government = {
					authority = auth_imperial
					cooldown = no
					remove_invalid_civics = yes
				}
			}
		}
	}
	else_if = {
		limit = { exists = heir }
		heir = { kill_leader = { show_notification = no } }
	}
	ruler = { kill_leader = { show_notification = no } }

	set_leader = event_target:traitor_leader
	ruler = { set_leader_flag = grateful_restored_leader_@this }
	add_opinion_modifier = {
		who = prev
		modifier = opinion_restored_to_leadership
	}
	if = {
		limit = { has_rival = prev }
		end_rivalry = prev
	}
}

after_comms_cleanup_effect = { # root is event_target:civwar_originator

	if = {
		limit = { exists = event_target:civwar_rebels }
		event_target:civwar_rebels = {
			# Unlock Fleets, needs to be here for some reason
			every_owned_fleet = { set_event_locked = no }

			if = {
				limit = { prev = { any_situation = { is_situation_type = situation_civstrife_succession } } }
				if = {
					limit = { has_country_flag = crisis_successor_@root }
					declare_war = {
						target = root
						name = "Succession Conflict"
						attacker_war_goal = "wg_coup_successor"
						effect = {
							set_name = {
								key = NAME_succession_conflict
								variable_string = "\\[This.MainAttacker.GetAdj]"
							}
							every_war_participant = {
								limit = {
									has_overlord = root
									is_war_leader = no
								}
								prev = { remove_war_participant = prev }
							}
						}
					}
					root = {
						every_system_within_border = {
							limit = { NOT = { prevprev = { has_claim = prev } } }
							add_claims = { who = prevprev }
						}
					}
					if = {
						limit = {
							any_country = {
								NOT = { is_same_value = prev }
								NOT = { is_at_war_with = prev }
								has_country_flag = crisis_successor_@root
							}
						}
						every_country = {
							limit = {
								NOT = { is_same_value = prev }
								NOT = { is_at_war_with = prev }
								has_country_flag = crisis_successor_@root
							}
							declare_war = {
								target = prev
								name = "Succession Conflict"
								attacker_war_goal = "wg_coup_successor"
								effect = {
									set_name = {
										key = NAME_succession_conflict
										variable_string = "\\[This.MainAttacker.GetAdj]"
									}
									every_war_participant = {
										limit = {
											has_overlord = root
											is_war_leader = no
										}
										prev = { remove_war_participant = prev }
									}
								}
							}
							every_system_within_border = {
								limit = { NOT = { prevprev = { has_claim = prev } } }
								add_claims = { who = prevprev }
							}
							prev = {
								every_system_within_border = {
									limit = { NOT = { prevprev = { has_claim = prev } } }
									add_claims = { who = prevprev }
								}
							}
						}
					}
					if = {
						limit = {
							any_country = {
								NOT = { is_same_value = prev }
								NOT = { is_at_war_with = prev }
								has_country_flag = crisis_independent_@root
							}
						}
						every_country = {
							limit = {
								NOT = { is_same_value = prev }
								NOT = { is_at_war_with = prev }
								has_country_flag = crisis_independent_@root
							}
							every_system_within_border = {
								limit = { NOT = { prevprev = { has_claim = prev } } }
								add_claims = { who = prevprev }
							}
							prev = {
								declare_war = {
									target = prev
									name = "Fealty War"
									attacker_war_goal = "wg_coup_independent"
									effect = {
										set_name = {
											key = NAME_fealty_war
											variable_string = "\\[This.MainDefender.Ruler.GetName]"
										}
										every_war_participant = {
											limit = {
												has_overlord = root
												is_war_leader = no
											}
											prev = { remove_war_participant = prev }
										}
									}
								}
							}
							
						}
					}
				}
				else_if = {
					limit = { has_country_flag = crisis_independent_@root }
					root = {
						if = {
							limit = { NOT = { has_country_flag = crisis_subject } }
							declare_war = {
								target = prev
								name = "Fealty War"
								attacker_war_goal = "wg_coup_independent"
								effect = {
									set_name = {
										key = NAME_fealty_war
										variable_string = "\\[This.MainDefender.Ruler.GetName]"
									}
									every_war_participant = {
										limit = {
											has_overlord = root
											is_war_leader = no
										}
										prev = { remove_war_participant = prev }
									}
								}
							}
						}
					}
					if = {
						limit = {
							any_country = {
								NOT = { is_at_war_with = prev }
								has_country_flag = crisis_successor_@root
							}
						}
						every_country = {
							limit = {
								NOT = { is_at_war_with = prev }
								has_country_flag = crisis_successor_@root
							}
							declare_war = {
								target = prev
								name = "Fealty War"
								attacker_war_goal = "wg_coup_independent"
								effect = {
									set_name = {
										key = NAME_succession_conflict
										variable_string = "\\[This.MainAttacker.GetAdj]"
									}
									every_war_participant = {
										limit = {
											has_overlord = root
											is_war_leader = no
										}
										prev = { remove_war_participant = prev }
									}
								}
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					prev = { NOT = { any_situation = { is_situation_type = situation_civstrife_succession } } }
					any_country = { has_country_flag = crisis_successor_@root }
				}
				every_country = {
					limit = { has_country_flag = crisis_successor_@root }
					remove_country_flag = crisis_successor_@root
				}
			}
			if = {
				limit = { has_country_flag = ethic_sec_rebels }
				remove_country_flag = ethic_sec_rebels
			}
			else_if = {
				limit = { has_country_flag = sep_sec_rebels }
				remove_country_flag = sep_sec_rebels
			}
			else_if = {
				limit = { has_country_flag = nat_plan_rebels }
				remove_country_flag = nat_plan_rebels
			}
			else_if = {
				limit = { has_country_flag = nat_sec_rebels }
				remove_country_flag = nat_sec_rebels
			}

			if = {
				limit = {
					is_at_war = yes
					is_overlord = yes
				}
				every_subject = { join_war = event_target:civwar_rebels }
			}
		}
	}
	

	if = { # Request assistance from neighbors
		limit = {
			exists = event_target:civwar_rebels
			event_target:civwar_rebels = { is_at_war_with = event_target:civwar_originator }
			any_country = {
				is_able_to_assist_rebels = yes
				any_system_within_border = {
					closest_system = {
						limit = {
							exists = space_owner
							OR = {
								space_owner = { is_same_empire = event_target:civwar_rebels }
								space_owner = { is_same_empire = event_target:civwar_originator }
								AND = {
									exists = event_target:civwar_originator.overlord
									space_owner = { is_same_empire = event_target:civwar_originator.overlord }
									event_target:civwar_rebels = { is_at_war_with = event_target:civwar_originator.overlord }
								}
							}
						}
						use_bypasses = yes
						max_steps = 1
					}
				}
			}
		}
		every_country = {
			limit = {
				is_able_to_assist_rebels = yes
				any_system_within_border = {
					closest_system = {
						limit = {
							exists = space_owner
							OR = {
								space_owner = { is_same_empire = event_target:civwar_rebels }
								space_owner = { is_same_empire = event_target:civwar_originator }
								AND = {
									exists = event_target:civwar_originator.overlord
									space_owner = { is_same_empire = event_target:civwar_originator.overlord }
									event_target:civwar_rebels = { is_at_war_with = event_target:civwar_originator.overlord }
								}
							}
						}
						use_bypasses = yes
						max_steps = 1
					}
				}
			}
			if = {
				limit = {
					has_federation = no
					OR = {
						is_subject = no
						subject_can_wage_war = yes
					}
				}
				if = {
					limit = {
						is_subject = yes
						overlord = {
							has_federation = no
							is_able_to_assist_rebels = yes
						}
					}
					overlord = { country_event = { id = civwar.2100 days = 1 } }
				}
				country_event = { id = civwar.2100 }
			}
			else_if = {
				limit = {
					has_federation = no
					exists = overlord
					overlord = { is_able_to_assist_rebels = yes }
				}
				overlord = {
					if = {
						limit = { has_federation = yes }
						if = {
							limit = { NOT = { is_in_federation_with = event_target:civwar_originator } }
							random_federation_ally = {
								limit = { is_federation_leader = yes }
								country_event = { id = civwar.2100 }
							}
						}
						
					}
					else = { country_event = { id = civwar.2100 days = 1 } }
				}			
			}
			else_if = {
				limit = {
					has_federation = yes
					NOT = { is_in_federation_with = event_target:civwar_originator }
				}
				random_federation_ally = {
					limit = {
						is_federation_leader = yes
						is_able_to_assist_rebels = yes
					}
					country_event = { id = civwar.2100 }
				}
			}
		}
	}
	if = {
		limit = {
			exists = event_target:civwar_rebels
			exists = event_target:nat_motherland_model
			event_target:nat_motherland_model = { has_country_flag = motherland_will_join_@event_target:civwar_rebels }
		}
		event_target:nat_motherland_model = {
			remove_country_flag = motherland_will_join_@event_target:civwar_rebels
			if = {
				limit = { event_target:civwar_rebels = { is_at_war = yes } }
				join_war = event_target:civwar_rebels
			}
			else = {
				event_target:civwar_rebels = {
					set_truce = {
						target = event_target:civwar_originator
						type = liberation
					}
				}
			}
		}
	}

	if = {
		limit = {
			exists = event_target:civwar_rebels
			any_country = { has_country_flag = motherland_wont_join_@event_target:civwar_rebels }
		}
		random_country = {
			limit = { has_country_flag = motherland_wont_join_@event_target:civwar_rebels }
			remove_country_flag = motherland_wont_join_@event_target:civwar_rebels
		}
	}

	if = { # Ally Rebels join war
		limit = { any_country = { has_country_flag = ally_reb_@event_target:civwar_originator } }
		every_country = {
			limit = {
				has_country_flag = ally_reb_@event_target:civwar_originator
				NOT = { is_same_value = event_target:civwar_rebels }
			}
			if = {
				limit = {
					exists = event_target:civwar_rebels
					event_target:civwar_rebels = { is_at_war = yes }
				}
				join_war = event_target:civwar_rebels
			}
			else = {
				set_truce = {
					target = event_target:civwar_originator
					type = liberation
				}
			}
		}
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				if = {
					limit = {
						is_at_war = no
						NOT = { has_truce = event_target:civwar_originator }
					}
					set_truce = {
						target = event_target:civwar_originator
						type = liberation
					}
				}
			}
		}
		
	}

	if = {
		limit = { has_country_flag = nat_civwar }
		remove_country_flag = nat_civwar
	}
	else_if = {
		limit = { has_country_flag = ethic_civwar }
		remove_country_flag = ethic_civwar
	}
	else_if = {
		limit = { has_country_flag = succession_mother_country }
		remove_country_flag = succession_mother_country
	}

	if = {
		limit = { any_owned_leader = { has_leader_flag = dummy_sector_leader } }
		random_owned_leader = {
			limit = { has_leader_flag = dummy_sector_leader }
			kill_leader = { show_notification = no }
		}
	}
	if = {
		limit = {
			exists = event_target:civwar_party_name_leader
			any_owned_leader = { is_same_value = event_target:civwar_party_name_leader }
		}
		random_owned_leader = {
			limit = { is_same_value = event_target:civwar_party_name_leader }
			kill_leader = { show_notification = no }
		}
	}

	if = {
		limit = {
			exists = event_target:civwar_rebels
			event_target:civwar_rebels.ruler = { has_leader_flag = civil_war_ruler_heir_isolated }
		}
		ruler = { save_event_target_as = crisis_dynasty_name }
		
		create_leader = {
			class = random_ruler
			species = event_target:civwar_originator.ruler.species
			name = random
			skill = 5
			leader_age_min = 13
			leader_age_max = 30
			effect = {
				save_event_target_as = new_heir
				set_name = {
					key = append_dynasty_name
					variable_string = "\\[This.GetFirstName]"
					variable_string = "\\[event_target:crisis_dynasty_name.GetName]"
				}
			}
		}
		# Need to change heirs
		set_heir = event_target:new_heir
	}

	if = {
		limit = { is_variable_set = num_subjects }
		clear_variable = num_subjects
	}

	if = {
		limit = {
			exists = event_target:civwar_rebels
			is_at_war_with = event_target:civwar_rebels
			any_subject = {
				OR = {
					has_country_flag = subject_helps_rebels_@root
					has_country_flag = subject_helps_overlord_@root
					has_country_flag = subject_joins_overlord_@root
				}
			}
		}
		event_target:civwar_rebels = {
			random_war = { save_event_target_as = civwar_for_subs }
		}
		get_subject_decisions_effect = yes
		# if = {
		# 	limit = { NOT = { has_country_flag = subject_after_effects_timer } }
		# 	set_timed_country_flag = { flag = subject_after_effects_timer years = 1 }
		# 	get_subject_decisions_effect = yes
		# }
	}
}

get_subject_decisions_effect = {
	if = { # Succession Conflict stuff
		limit = {
			any_country = {
				exists = overlord
				overlord = {
					is_at_war = yes
					is_succession_country = yes
				}
				NOT = { is_at_war = yes }
				# has_country_flag = subject_joins_rebels_@root
			}
		}
		every_country = {
			limit = {
				exists = overlord
				overlord = {
					is_at_war = yes
					is_succession_country = yes
				}
				NOT = { is_at_war = yes }
				# has_country_flag = subject_joins_rebels_@root
			}
			overlord = { save_event_target_as = sub_overlord }
			join_war = event_target:sub_overlord
		}
	}
	
	if = {
		limit = { any_subject = { has_country_flag = subject_helps_rebels_@root } }
		every_subject = {
			limit = { has_country_flag = subject_helps_rebels_@root }
			if = {
				limit = {
					any_country = {
						is_at_war_with = overlord
						is_succession_country = yes
					}
				}
				random_country = {
					limit = { has_country_flag = borders_the_subject_@prev }
					save_event_target_as = civwar_rebels
					random_war = { save_event_target_as = civwar_for_subs }
				}
				set_subject_of = {
					who = event_target:civwar_rebels
					preset = preset_tributary
				}
				join_war_on_side = {
					war = event_target:civwar_for_subs
					side = event_target:civwar_rebels
				}
			}
			else = {
				set_subject_of = {
					who = event_target:civwar_rebels
					preset = preset_tributary
				}
				join_war_on_side = {
					war = event_target:civwar_for_subs
					side = event_target:civwar_rebels
				}
			}
		}
	}
	if = {
		limit = { any_subject = { has_country_flag = subject_joins_overlord_@root } }
		every_subject = {
			limit = { has_country_flag = subject_joins_overlord_@root }
			if = {
				limit = {
					any_country = {
						is_at_war_with = prev.overlord
						is_succession_country = yes
					}
				}
				random_country = {
					limit = {
						is_at_war_with = prev.overlord
						is_succession_country = yes
					}
					random_war = { save_event_target_as = civwar_for_subs }
				}
			}
			join_war_on_side = {
				war = event_target:civwar_for_subs
				side = attackers
			}
		}
	}
	country_event = { id = civcom.5000 days = 1 random = 5 }
}

get_motherland_effect = {
	if = {
		limit = {
			any_country = {
				OR = {
					has_country_flag = motherland_will_join_@event_target:civwar_rebels
					has_country_flag = motherland_wont_join_@event_target:civwar_rebels
				}	
			}
		}
		random_country = {
			limit = {
				OR = {
					has_country_flag = motherland_will_join_@event_target:civwar_rebels
					has_country_flag = motherland_wont_join_@event_target:civwar_rebels
				}
			}
			save_event_target_as = nat_motherland
		}
	}
}

#####################
# Make countries

make_civil_war_faction_country = {
	if = {
		limit = { root.target = { is_authoritarian_faction = yes } }
		owner = { create_auth_fac_country = yes }
	}
	else_if = {
		limit = { root.target = { is_egalitarian_faction = yes } }
		owner = { create_egal_fac_country = yes }
	}
	else_if = {
		limit = { root.target = { is_militarist_faction = yes } }
		owner = { create_mil_fac_country = yes }
	}
	else_if = {
		limit = { root.target = { is_pacifist_faction = yes } }
		owner = { create_pac_fac_country = yes }
	}
	else_if = {
		limit = { root.target = { is_materialist_faction = yes } }
		owner = { create_mat_fac_country = yes }
	}
	else_if = {
		limit = { root.target = { is_spiritualist_faction = yes } }
		owner = { create_spi_fac_country = yes }
	}
	else_if = {
		limit = { root.target = { is_xenophile_faction = yes } }
		owner = { create_phile_fac_country = yes }
	}
	else_if = {
		limit = { root.target = { is_xenophobe_faction = yes } }
		owner = { create_phobe_fac_country = yes }
	}
	else_if = {
		limit = { root.target = { is_socialist_faction = yes } }
		owner = { create_soc_fac_country = yes }
	}
	else_if = {
		limit = { root.target = { is_capitalism_faction = yes } }
		owner = { create_cap_fac_country = yes }
	}
	else_if = {
		limit = { root.target = { is_industrial_faction = yes } }
		owner = { create_indus_fac_country = yes }
	}
	else_if = {
		limit = { root.target = { is_ecologist_faction = yes } }
		owner = { create_eco_fac_country = yes }
	}
	else_if = {
		limit = { root.target = { is_elitist_faction = yes } }
		owner = { create_elite_fac_country = yes }
	}
	else_if = {
		limit = { root.target = { is_pluralist_faction = yes } }
		owner = { create_plur_fac_country = yes }
	}
}

make_nat_war_country = {
	random_country = {
		limit = {
			has_country_flag = nat_motherland_sit_@root
			has_country_flag = nat_motherland_sit_@root.owner
		}
		save_event_target_as = nat_motherland_model
		if = {
			limit = { is_exile_country = yes }
			prev.owner = { set_country_flag = motherland_is_exile }
		}
	}
	if = { # New country has the same flag if it is a restoration
		limit = {
			event_target:nat_motherland_model = { is_exile_country = yes }
			NOT = { any_country = { has_country_flag = exile_link_@event_target:nat_motherland_model } }
		}
		create_country = {
			name = event_target:nat_motherland_model
			type = default
			species = event_target:nat_motherland_model
			ignore_initial_colony_error = yes
			day_zero_contact = no
			authority = event_target:nat_motherland_model
			ethos = event_target:nat_motherland_model
			origin = origin_nationalist_rebellion
			civics = event_target:nat_motherland_model
			flag = event_target:nat_motherland_model
			effect = {
				set_country_flag = exile_restored_country
				set_country_flag = exile_link_@event_target:nat_motherland_model
				set_country_flag = nat_country
				if = {
					limit = { event_target:nat_motherland_model = { has_country_flag = was_purifier } }
					force_add_civic = civic_fanatic_purifiers
				}
				created_civwar_country_effect = yes
			}
		}
		event_target:nat_motherland_model = { set_country_flag = exile_link_@last_created_country }
	}
	else = {
		create_country = {
			name = random
			type = default
			species = event_target:nat_motherland_model
			ignore_initial_colony_error = yes
			day_zero_contact = no
			authority = event_target:nat_motherland_model
			ethos = event_target:nat_motherland_model
			origin = origin_nationalist_rebellion
			civics = event_target:nat_motherland_model
			flag = random
			effect = {
				set_country_flag = nat_country
				if = {
					limit = { event_target:nat_motherland_model = { has_country_flag = was_purifier } }
					force_add_civic = civic_fanatic_purifiers
				}
				created_civwar_country_effect = yes
			}
		}
	}

	last_created_country = { set_country_flag = nat_civwar }
}

make_isolated_sector_country = {

	if = { # Heirs always model their governments after the motherland
		limit = {
			exists = root.target.leader
			root.target.leader = { has_leader_flag = civil_war_leader_heir_isolated }
		}
		create_country = {
			name = random
			type = default
			species = event_target:civwar_species
			ignore_initial_colony_error = yes
			day_zero_contact = no
			authority = event_target:civwar_originator
			ethos = event_target:civwar_originator
			origin = origin_isolated_rebellion
			civics = event_target:civwar_originator
			flag = random
			effect = {
				created_civwar_country_effect = yes
			}
		}
	}
	else = {
		if = {
			limit = { has_global_flag = cultural_overhaul_active }
			if = {
				limit = { has_global_flag = cultural_overhaul_funefork_active }
				if = {
					limit = { is_imperial_authority = yes }
					random_list = {
						65 = { # Same as Motherland
							create_country = {
								authority = event_target:civwar_originator
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						10 = { # Dictatorial
							create_country = {
								authority = auth_dictatorial
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						10 = { # Democratic Dictatorial
							create_country = {
								authority = auth_dict_democratic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						10 = { # Oligarchic
							create_country = {
								authority = auth_oligarchic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						3 = { # Democratic
							create_country = {
								authority = auth_democratic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						2 = { # Strict Democratic
							create_country = {
								authority = auth_strict_democratic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
					}
				}
				else_if = {
					limit = { is_dictatorial_authority = yes }
					random_list = {
						65 = { # Same as Motherland
							create_country = {
								authority = event_target:civwar_originator
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						15 = { # Imperial
							create_country = {
								authority = auth_imperial
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						10 = { # Democratic Dictatorial
							create_country = {
								authority = auth_dict_democratic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						5 = { # Oligarchic
							create_country = {
								authority = auth_oligarchic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						3 = { # Democratic
							create_country = {
								authority = auth_democratic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						2 = { # Strict Democratic
							create_country = {
								authority = auth_strict_democratic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
					}
				}
				else_if = {
					limit = { is_democratic_authority = yes }
					random_list = {
						65 = { # Same as Motherland
							create_country = {
								authority = event_target:civwar_originator
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						15 = { # Oligarchic
							create_country = {
								authority = auth_oligarchic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						10 = { # Democratic Dictatorial
							create_country = {
								authority = auth_dict_democratic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						5 = { # Imperial
							create_country = {
								authority = auth_imperial
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						5 = { # Dictatorial
							create_country = {
								authority = auth_dictatorial
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
					}
				}
				else_if = {
					limit = { is_oligarchy = yes }
					random_list = {
						65 = { # Same as Motherland
							create_country = {
								authority = event_target:civwar_originator
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						10 = { # Imperial
							create_country = {
								authority = auth_imperial
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						15 = { # Dictatorial
							create_country = {
								authority = auth_dictatorial
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						5 = { # Democratic Dictatorial
							create_country = {
								authority = auth_dict_democratic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						3 = { # Democratic
							create_country = {
								authority = auth_democratic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						2 = { # Strict Democratic
							create_country = {
								authority = auth_strict_democratic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
					}
				}
			}
			else = {
				if = { # Imperial governments usually make imperial govenrments
					limit = { is_imperial_authority = yes }
					random_list = {
						65 = { # Same as Motherland
							create_country = {
								authority = event_target:civwar_originator
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						15 = { # Dictatorial
							create_country = {
								authority = auth_dictatorial
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						10 = { # Oligarchic
							create_country = {
								authority = auth_oligarchic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						7 = { # Democratic
							create_country = {
								authority = auth_democratic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						3 = { # Direct Democratic
							create_country = {
								authority = auth_direct_democratic
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
					}
				}
				else_if = {
					limit = { is_dictatorial_authority = yes }
					random_list = {
						65 = { # Same as Motherland
							create_country = {
								authority = event_target:civwar_originator
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						10 = { # Imperial
							create_country = {
								authority = auth_imperial
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						15 = { # Oligarchic
							create_country = {
								authority = auth_oligarchic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						7 = { # Democratic
							create_country = {
								authority = auth_democratic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						3 = { # Direct Democratic
							create_country = {
								authority = auth_direct_democratic
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
					}
				}
				else_if = {
					limit = { is_democratic_authority = yes }
					random_list = {
						65 = { # Same as Motherland
							create_country = {
								authority = event_target:civwar_originator
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						20 = { # Oligarchic
							create_country = {
								authority = auth_oligarchic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						5 = { # Imperial
							create_country = {
								authority = auth_imperial
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						10 = { # Dictatorial
							create_country = {
								authority = auth_dictatorial
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
					}
				}
				else_if = {
					limit = { is_oligarchy = yes }
					random_list = {
						65 = { # Same as Motherland
							create_country = {
								authority = event_target:civwar_originator
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						10 = { # Imperial
							create_country = {
								authority = auth_imperial
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						15 = { # Dictatorial
							create_country = {
								authority = auth_dictatorial
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						7 = { # Democratic
							create_country = {
								authority = auth_democratic
								ethos = random
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
						3 = { # Direct Democratic
							create_country = {
								authority = auth_direct_democratic
								ethos = event_target:civwar_originator
								inline_script = { script = civil_war_country_creation/isolated_sector }
							}
						}
					}
				}
			}
		}
		else = {
			if = {
				limit = { is_imperial_authority = yes }
				random_list = {
					65 = { # Same as Motherland
						create_country = {
							authority = event_target:civwar_originator
							ethos = event_target:civwar_originator
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
					20 = { # Dictatorial
						create_country = {
							authority = auth_dictatorial
							ethos = random
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
					10 = { # Oligarchic
						create_country = {
							authority = auth_oligarchic
							ethos = random
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
					5 = { # Democratic
						create_country = {
							authority = auth_democratic
							ethos = random
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
				}
			}
			else_if = {
				limit = { is_dictatorial_authority = yes }
				random_list = {
					65 = { # Same as Motherland
						create_country = {
							authority = event_target:civwar_originator
							ethos = event_target:civwar_originator
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
					10 = { # Imperial
						create_country = {
							authority = auth_imperial
							ethos = random
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
					15 = { # Oligarchic
						create_country = {
							authority = auth_oligarchic
							ethos = random
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
					10 = { # Democratic
						create_country = {
							authority = auth_democratic
							ethos = random
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
				}
			}
			else_if = {
				limit = { is_democratic_authority = yes }
				random_list = {
					65 = { # Same as Motherland
						create_country = {
							authority = event_target:civwar_originator
							ethos = event_target:civwar_originator
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
					20 = { # Oligarchic
						create_country = {
							authority = auth_oligarchic
							ethos = random
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
					10 = { # Dictatorial
						create_country = {
							authority = auth_dictatorial
							ethos = random
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
					5 = { # Imperial
						create_country = {
							authority = auth_imperial
							ethos = random
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
				}
			}
			else_if = {
				limit = { is_oligarchy = yes }
				random_list = {
					65 = { # Same as Motherland
						create_country = {
							authority = event_target:civwar_originator
							ethos = event_target:civwar_originator
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
					10 = { # Imperial
						create_country = {
							authority = auth_imperial
							ethos = random
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
					15 = { # Dictatorial
						create_country = {
							authority = auth_dictatorial
							ethos = random
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
					10 = { # Democratic
						create_country = {
							authority = auth_democratic
							ethos = random
							inline_script = { script = civil_war_country_creation/isolated_sector }
						}
					}
				}
			}
		}
	}

	last_created_country = { set_country_flag = sec_rebel_country }
}

make_succession_crisis_gov_country = {

	event_target:crisis_sector = {
		set_sector_flag = leader_sector
	}

	# It gets lost along the way, poor thing
	save_global_event_target_as = civwar_originator

	set_country_flag = succession_mother_country

	create_country = {
		name = random
		type = default
		species = event_target:crisis_sector_leader
		ignore_initial_colony_error = yes
		day_zero_contact = no
		authority = auth_imperial
		ethos = { 
			ethic = ethic_fanatic_authoritarian
			ethic = random
		}
		origin = origin_coup_independent
		civics = random
		flag = random
		effect = {
			set_country_flag = crisis_independent_@event_target:civwar_originator
			created_civwar_country_effect = yes
		}
	}

	set_country_flag = succession_crisis_mom_@last_created_country
}

make_succession_crisis_dynast_country = {

	event_target:crisis_sector = {
		set_sector_flag = leader_sector
	}

	save_event_target_as = civwar_originator

	# It gets lost along the way, poor thing
	save_global_event_target_as = civwar_originator

	set_country_flag = succession_mother_country

	create_country = {
		name = event_target:civwar_originator
		type = default
		species = event_target:crisis_sector_leader
		ignore_initial_colony_error = yes
		day_zero_contact = no
		authority = auth_imperial
		ethos = event_target:civwar_originator
		origin = origin_coup_successor
		civics = event_target:civwar_originator
		flag = event_target:civwar_originator
		effect = {
			set_country_flag = crisis_successor_@event_target:civwar_originator
			created_civwar_country_effect = yes
		}
	}

	set_country_flag = succession_crisis_mom_@last_created_country
}

#### Unused, as factions no longer have leaders so independence faction leaders do not exists and can not become the ruler of the country.
	### If this ever comes back, switch to scripted triggers.
make_ruler_secession_country = { 

	save_event_target_as = civwar_originator

	# if = {
	# 	limit = {
	# 		OR = {
	# 			NOT = { has_global_flag = cultural_overhaul_active }
	# 			has_global_flag = bug_branch_active # Bug Branch changes EC ethic names, makes it not easily compatible
	# 		}
	# 	}
	# 	random_list = {
	# 		# Authoritarian
	# 		10 = { country_event = { id = civwarsecession.1000 } }
	# 		# Egalitarian
	# 		20 = { country_event = { id = civwarsecession.1005 } }
	# 		# Militarist
	# 		20 = { country_event = { id = civwarsecession.1010 } }
	# 		# Pacifist
	# 		10 = { country_event = { id = civwarsecession.1015 } }
	# 		# Materialist
	# 		10 = { country_event = { id = civwarsecession.1020 } }
	# 		# Spiritualist
	# 		10 = { country_event = { id = civwarsecession.1025 } }
	# 		# Xenophile
	# 		10 = { country_event = { id = civwarsecession.1030 } }
	# 		# Xenophobe
	# 		10 = { country_event = { id = civwarsecession.1035 } }
	# 	}
	# }
	# else_if = {
	# 	limit = {
	# 		has_global_flag = cultural_overhaul_active
	# 		has_global_flag = cultural_overhaul_redux_active
	# 	}
	# 	random_list = {
	# 		# Authoritarian
	# 		10 = { country_event = { id = civwarsecession.1000 } }
	# 		# Egalitarian
	# 		10 = { country_event = { id = civwarsecession.1005 } }
	# 		# Militarist
	# 		10 = { country_event = { id = civwarsecession.1010 } }
	# 		# Pacifist
	# 		10 = { country_event = { id = civwarsecession.1015 } }
	# 		# Materialist
	# 		10 = { country_event = { id = civwarsecession.1020 } }
	# 		# Spiritualist
	# 		10 = { country_event = { id = civwarsecession.1025 } }
	# 		# Xenophile
	# 		10 = { country_event = { id = civwarsecession.1030 } }
	# 		# Xenophobe
	# 		10 = { country_event = { id = civwarsecession.1035 } }
	# 		# Socialist
	# 		10 = { country_event = { id = civwarsecession.1040 } }
	# 		# Capitalist
	# 		10 = { country_event = { id = civwarsecession.1045 } }
	# 	}
	# }
	# else = {
	# 	random_list = {
	# 		# Authoritarian
	# 		5 = { country_event = { id = civwarsecession.1000 } }
	# 		# Egalitarian
	# 		10 = { country_event = { id = civwarsecession.1005 } }
	# 		# Militarist
	# 		10 = { country_event = { id = civwarsecession.1010 } }
	# 		# Pacifist
	# 		5 = { country_event = { id = civwarsecession.1015 } }
	# 		# Materialist
	# 		5 = { country_event = { id = civwarsecession.1020 } }
	# 		# Spiritualist
	# 		5 = { country_event = { id = civwarsecession.1025 } }
	# 		# Xenophile
	# 		5 = { country_event = { id = civwarsecession.1030 } }
	# 		# Xenophobe
	# 		10 = { country_event = { id = civwarsecession.1035 } }
	# 		# Socialist
	# 		10 = { country_event = { id = civwarsecession.1040 } }
	# 		# Capitalist
	# 		5 = { country_event = { id = civwarsecession.1045 } }
	# 		# Industrialist
	# 		10 = { country_event = { id = civwarsecession.1050 } }
	# 		# Ecologist
	# 		5 = { country_event = { id = civwarsecession.1055 } }
	# 		# Elitist
	# 		5 = { country_event = { id = civwarsecession.1060 } }
	# 		# Pluralist
	# 		10 = { country_event = { id = civwarsecession.1065 } }
	# 	}
	# }
}

create_auth_fac_country = {
	random_list = {
		50 = {
			create_country = {
				authority = auth_imperial
				ethos = { ethic = ethic_fanatic_authoritarian }
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
			}
		}
		50 = {
			create_country = {
				authority = auth_dictatorial
				ethos = { ethic = ethic_fanatic_authoritarian }
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
			}
		}
	}
}

create_egal_fac_country = {
	if = {
		limit = { has_global_flag = cultural_overhaul_active }
		if = {
			limit = { has_global_flag = cultural_overhaul_funefork_active }
			random_list = {
				40 = {
					create_country = {
						authority = auth_democratic
						ethos = { ethic = ethic_fanatic_egalitarian }
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					}
				}
				60 = {
					create_country = {
						authority = auth_strict_democratic
						ethos = { ethic = ethic_fanatic_egalitarian }
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					}
				}
			}
		}
		else = {
			random_list = {
				50 = {
					create_country = {
						authority = auth_democratic
						ethos = { ethic = ethic_fanatic_egalitarian }
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					}
				}
				50 = {
					create_country = {
						authority = auth_direct_democratic
						ethos = { ethic = ethic_fanatic_egalitarian }
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					}
				}
			}
		}
	}
	else = {
		create_country = {
			authority = auth_democratic
			ethos = { ethic = ethic_fanatic_egalitarian }
			inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
		}
	}
}

create_mil_fac_country = {
	if = {
		limit = { has_global_flag = cultural_overhaul_active }
		if = {
			limit = { has_global_flag = cultural_overhaul_funefork_active }
			random_list = {
				10 = {
					create_country = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_militarist }
					}
				}
				5 = {
					create_country = {
						authority = auth_strict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_militarist
							ethic = ethic_egalitarian
						}
					}
				}
				25 = {
					create_country = {
						authority = auth_dict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_militarist }
					}
				}
				25 = {
					create_country = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_militarist
							ethic = ethic_authoritarian
						}
					}
				}
				25 = {
					create_country = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_militarist
							ethic = ethic_authoritarian
						}
					}
				}
				10 = {
					create_country = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_militarist }
					}
				}
			}
		}
		else = {
			random_list = {
				15 = {
					create_country = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_militarist }
					}
				}
				5 = {
					create_country = {
						authority = auth_direct_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_militarist }
					}
				}
				30 = {
					create_country = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_militarist
							ethic = ethic_authoritarian
						}
					}
				}
				30 = {
					create_country = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_militarist }
					}
				}
				20 = {
					create_country = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_militarist }
					}
				}
			}
		}
	}
	else = {
		random_list = {
			5 = {
				create_country = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_militarist }
				}
			}
			45 = {
				create_country = {
					authority = auth_imperial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_militarist }
				}
			}
			40 = {
				create_country = {
					authority = auth_dictatorial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_militarist }
				}
			}
			10 = {
				create_country = {
					authority = auth_oligarchic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_militarist }
				}
			}
		}
	}
}

create_pac_fac_country = {
	if = {
		limit = { has_global_flag = cultural_overhaul_active }
		if = {
			limit = { has_global_flag = cultural_overhaul_funefork_active }
			random_list = {
				10 = {
					create_country = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_pacifist }
					}
				}
				5 = {
					create_country = {
						authority = auth_strict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_pacifist
							ethic = ethic_egalitarian
						}
					}
				}
				25 = {
					create_country = {
						authority = auth_dict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_pacifist }
					}
				}
				25 = {
					create_country = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_pacifist
							ethic = ethic_authoritarian
						}
					}
				}
				25 = {
					create_country = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_pacifist }
					}
				}
				10 = {
					create_country = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_pacifist }
					}
				}
			}
		}
		else = {
			random_list = {
				15 = {
					create_country = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_pacifist }
					}
				}
				5 = {
					create_country = {
						authority = auth_direct_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_pacifist
							ethic = ethic_egalitarian
						}
					}
				}
				30 = {
					create_country = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_pacifist
							ethic = ethic_authoritarian
						}
					}
				}
				30 = {
					create_country = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_pacifist }
					}
				}
				20 = {
					create_country = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_pacifist }
					}
				}
			}
		}
	}
	else = {
		random_list = {
			15 = {
				create_country = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_pacifist }
				}
			}
			20 = {
				create_country = {
					authority = auth_imperial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_pacifist }
				}
			}
			50 = {
				create_country = {
					authority = auth_dictatorial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_pacifist }
				}
			}
			15 = {
				create_country = {
					authority = auth_oligarchic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_pacifist }
				}
			}
		}
	}
}

create_mat_fac_country = {
	if = {
		limit = { has_global_flag = cultural_overhaul_active }
		if = {
			limit = { has_global_flag = cultural_overhaul_funefork_active }
			random_list = {
				15 = {
					create_country = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_materialist }
					}
				}
				10 = {
					create_country = {
						authority = auth_strict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_materialist
							ethic = ethic_egalitarian
						}
					}
				}
				25 = {
					create_country = {
						authority = auth_dict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_materialist }
					}
				}
				15 = {
					create_country = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_materialist
							ethic = ethic_authoritarian
						}
					}
				}
				25 = {
					create_country = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_materialist }
					}
				}
				10 = {
					create_country = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_materialist }
					}
				}
			}
		}
		else = {
			random_list = {
				15 = {
					create_country = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_materialist }
					}
				}
				10 = {
					create_country = {
						authority = auth_direct_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_materialist
							ethic = ethic_egalitarian
						}
					}
				}
				15 = {
					create_country = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_materialist
							ethic = ethic_authoritarian
						}
					}
				}
				30 = {
					create_country = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_materialist }
					}
				}
				30 = {
					create_country = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_materialist }
					}
				}
			}
		}
	}
	else = {
		random_list = {
			20 = {
				create_country = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_materialist }
				}
			}
			30 = {
				create_country = {
					authority = auth_imperial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_materialist }
				}
			}
			30 = {
				create_country = {
					authority = auth_dictatorial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_materialist }
				}
			}
			20 = {
				create_country = {
					authority = auth_oligarchic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_materialist }
				}
			}
		}
	}
}

create_spi_fac_country = {
	if = {
		limit = { has_global_flag = cultural_overhaul_active }
		if = {
			limit = { has_global_flag = cultural_overhaul_funefork_active }
			random_list = {
				10 = {
					create_country = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_spiritualist }
					}
				}
				5 = {
					create_country = {
						authority = auth_strict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_spiritualist
							ethic = ethic_egalitarian
						}
					}
				}
				25 = {
					create_country = {
						authority = auth_dict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_spiritualist }
					}
				}
				25 = {
					create_country = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_spiritualist
							ethic = ethic_authoritarian
						}
					}
				}
				25 = {
					create_country = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_spiritualist }
					}
				}
				10 = {
					create_country = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_spiritualist }
					}
				}
			}
		}
		else = {
			random_list = {
				15 = {
					create_country = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_spiritualist }
					}
				}
				5 = {
					create_country = {
						authority = auth_direct_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_spiritualist
							ethic = ethic_egalitarian
						}
					}
				}
				25 = {
					create_country = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_spiritualist
							ethic = ethic_authoritarian
						}
					}
				}
				30 = {
					create_country = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_spiritualist }
					}
				}
				25 = {
					create_country = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_spiritualist }
					}
				}
			}
		}
	}
	else = {
		random_list = {
			5 = {
				create_country = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_spiritualist }
				}
			}
			45 = {
				create_country = {
					authority = auth_imperial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_spiritualist }
				}
			}
			35 = {
				create_country = {
					authority = auth_dictatorial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_spiritualist }
				}
			}
			15 = {
				create_country = {
					authority = auth_oligarchic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_spiritualist }
				}
			}
		}
	}
}

create_phile_fac_country = {
	if = {
		limit = { has_global_flag = cultural_overhaul_active }
		if = {
			limit = { has_global_flag = cultural_overhaul_funefork_active }
			random_list = {
				5 = {
					create_country = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_xenophile }
					}
				}
				5 = {
					create_country = {
						authority = auth_strict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_xenophile
							ethic = ethic_egalitarian
						}
					}
				}
				25 = {
					create_country = {
						authority = auth_dict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_xenophile }
					}
				}
				25 = {
					create_country = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_xenophile
							ethic = ethic_authoritarian
						}
					}
				}
				25 = {
					create_country = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_xenophile }
					}
				}
				10 = {
					create_country = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_xenophile }
					}
				}
			}
		}
		else = {
			random_list = {
				15 = {
					create_country = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_xenophile }
					}
				}
				5 = {
					create_country = {
						authority = auth_direct_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_xenophile
							ethic = ethic_egalitarian
						}
					}
				}
				25 = {
					create_country = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = {
							ethic = ethic_fanatic_xenophile
							ethic = ethic_authoritarian
						}
					}
				}
				30 = {
					create_country = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_xenophile }
					}
				}
				25 = {
					create_country = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_xenophile }
					}
				}
			}
		}
	}
	else = {
		random_list = {
			25 = {
				create_country = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_xenophile }
				}
			}
			30 = {
				create_country = {
					authority = auth_imperial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_xenophile }
				}
			}
			30 = {
				create_country = {
					authority = auth_dictatorial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_xenophile }
				}
			}
			15 = {
				create_country = {
					authority = auth_oligarchic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_xenophile }
				}
			}
		}
	}
}

create_phobe_fac_country = {
	if = {
		limit = { has_global_flag = cultural_overhaul_active }
		if = {
			limit = { has_global_flag = cultural_overhaul_funefork_active }
			random_list = {
				10 = {
					create_country = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_xenophobe }
					}
				}
				5 = {
					create_country = {
						authority = auth_strict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { 
							ethic = ethic_fanatic_xenophobe
							ethic = ethic_egalitarian
						}
					}
				}
				25 = {
					create_country = {
						authority = auth_dict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_xenophobe }
					}
				}
				25 = {
					create_country = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { 
							ethic = ethic_fanatic_xenophobe
							ethic = ethic_authoritarian
						}
					}
				}
				25 = {
					create_country = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_xenophobe }
					}
				}
				10 = {
					create_country = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_xenophobe }
					}
				}
			}
		}
		else = {
			random_list = {
				10 = {
					create_country = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_xenophobe }
					}
				}
				5 = {
					create_country = {
						authority = auth_direct_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { 
							ethic = ethic_fanatic_xenophobe
							ethic = ethic_egalitarian
						}
					}
				}
				30 = {
					create_country = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { 
							ethic = ethic_fanatic_xenophobe
							ethic = ethic_authoritarian
						}
					}
				}
				30 = {
					create_country = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_xenophobe }
					}
				}
				25 = {
					create_country = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
						ethos = { ethic = ethic_fanatic_xenophobe }
					}
				}
			}
		}
	}
	else = {
		random_list = {
			5 = {
				create_country = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_xenophobe }
				}
			}
			45 = {
				create_country = {
					authority = auth_imperial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_xenophobe }
				}
			}
			35 = {
				create_country = {
					authority = auth_dictatorial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_xenophobe }
				}
			}
			15 = {
				create_country = {
					authority = auth_oligarchic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_xenophobe }
				}
			}
		}
	}

	if = {
		limit = {
			event_target:civwar_party = { is_pop_faction_type = supremacist }
			event_target:civwar_originator = { has_valid_civic = civic_fanatic_purifiers }
		}
		last_created_country = { force_add_civic = civic_fanatic_purifiers }
	}
	else_if = {
		limit = {
			event_target:civwar_party = { is_pop_faction_type = supremacist }
			last_created_country = { num_species = 1 }
		}
		last_created_country = {
			random = { chance = 10 force_add_civic = civic_fanatic_purifiers }
		}
	}
}

create_soc_fac_country = {
	if = {
		limit = { has_global_flag = cultural_overhaul_funefork_active }
		random_list = {
			10 = {
				create_country = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_socialism }
				}
			}
			10 = {
				create_country = {
					authority = auth_strict_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { 
						ethic = ethic_fanatic_socialism
						ethic = ethic_egalitarian
					}
				}
			}
			20 = {
				create_country = {
					authority = auth_dict_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_socialism }
				}
			}
			15 = {
				create_country = {
					authority = auth_imperial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { 
						ethic = ethic_fanatic_socialism
						ethic = ethic_authoritarian
					}
				}
			}
			25 = {
				create_country = {
					authority = auth_dictatorial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_socialism }
				}
			}
			20 = {
				create_country = {
					authority = auth_oligarchic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_socialism }
				}
			}
		}
	}
	else = {
		random_list = {
			10 = {
				create_country = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_socialism }
				}
			}
			5 = {
				create_country = {
					authority = auth_direct_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { 
						ethic = ethic_fanatic_socialism
						ethic = ethic_egalitarian
					}
				}
			}
			35 = {
				create_country = {
					authority = auth_imperial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { 
						ethic = ethic_fanatic_socialism
						ethic = ethic_authoritarian
					}
				}
			}
			35 = {
				create_country = {
					authority = auth_dictatorial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_socialism }
				}
			}
			15 = {
				create_country = {
					authority = auth_oligarchic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_socialism }
				}
			}
		}
	}
}

create_cap_fac_country = {
	if = {
		limit = { has_global_flag = cultural_overhaul_funefork_active }
		random_list = {
			5 = {
				create_country = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_capitalism }
				}
			}
			5 = {
				create_country = {
					authority = auth_strict_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { 
						ethic = ethic_fanatic_capitalism
						ethic = ethic_egalitarian
					}
				}
			}
			10 = {
				create_country = {
					authority = auth_dict_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_capitalism }
				}
			}
			10 = {
				create_country = {
					authority = auth_imperial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = {
						ethic = ethic_fanatic_capitalism
						ethic = ethic_authoritarian
					}
				}
			}
			25 = {
				create_country = {
					authority = auth_corporate_imperial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = {
						ethic = ethic_fanatic_capitalism
						ethic = ethic_authoritarian
					}
				}
			}
			20 = {
				create_country = {
					authority = auth_corporate
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_capitalism }
				}
			}
			10 = {
				create_country = {
					authority = auth_dictatorial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_capitalism }
				}
			}
			15 = {
				create_country = {
					authority = auth_oligarchic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_capitalism }
				}
			}
		}
	}
	else = {
		random_list = {
			10 = {
				create_country = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_capitalism }
				}
			}
			5 = {
				create_country = {
					authority = auth_direct_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { 
						ethic = ethic_fanatic_capitalism
						ethic = ethic_egalitarian
					}
				}
			}
			15 = {
				create_country = {
					authority = auth_imperial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { 
						ethic = ethic_fanatic_capitalism
						ethic = ethic_authoritarian
					}
				}
			}
			45 = {
				create_country = {
					authority = auth_corporate
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_capitalism }
				}
			}
			10 = {
				create_country = {
					authority = auth_dictatorial
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_capitalism }
				}
			}
			15 = {
				create_country = {
					authority = auth_oligarchic
					inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
					ethos = { ethic = ethic_fanatic_capitalism }
				}
			}
		}
	}
}

create_indus_fac_country = {
	random_list = {
		10 = {
			create_country = {
				authority = auth_democratic
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = { ethic = ethic_fanatic_industrial }
			}
		}
		5 = {
			create_country = {
				authority = auth_direct_democratic
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = {
					ethic = ethic_fanatic_industrial
					ethic = ethic_egalitarian
				}
			}
		}
		35 = {
			create_country = {
				authority = auth_imperial
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = {
					ethic = ethic_fanatic_industrial
					ethic = ethic_authoritarian
				}
			}
		}
		35 = {
			create_country = {
				authority = auth_dictatorial
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = { ethic = ethic_fanatic_industrial }
			}
		}
		15 = {
			create_country = {
				authority = auth_oligarchic
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = { ethic = ethic_fanatic_industrial }
			}
		}
	}
}

create_eco_fac_country = {
	random_list = {
		10 = {
			create_country = {
				authority = auth_democratic
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = { ethic = ethic_fanatic_green }
			}
		}
		10 = {
			create_country = {
				authority = auth_direct_democratic
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = {
					ethic = ethic_fanatic_green
					ethic = ethic_egalitarian
				}
			}
		}
		20 = {
			create_country = {
				authority = auth_imperial
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = {
					ethic = ethic_fanatic_green
					ethic = ethic_authoritarian
				}
			}
		}
		35 = {
			create_country = {
				authority = auth_dictatorial
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = { ethic = ethic_fanatic_green }
			}
		}
		25 = {
			create_country = {
				authority = auth_oligarchic
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = { ethic = ethic_fanatic_green }
			}
		}
	}
}

create_elite_fac_country = {
	random_list = {
		10 = {
			create_country = {
				authority = auth_democratic
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = { ethic = ethic_fanatic_elitist }
			}
		}
		35 = {
			create_country = {
				authority = auth_imperial
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = {
					ethic = ethic_fanatic_elitist
					ethic = ethic_authoritarian
				}
			}
		}
		35 = {
			create_country = {
				authority = auth_dictatorial
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = { ethic = ethic_fanatic_elitist }
			}
		}
		20 = {
			create_country = {
				authority = auth_oligarchic
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = { ethic = ethic_fanatic_elitist }
			}
		}
	}
}

create_plur_fac_country = {
	random_list = {
		50 = {
			create_country = {
				authority = auth_democratic
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = { ethic = ethic_fanatic_pluralist }
			}
		}
		50 = {
			create_country = {
				authority = auth_direct_democratic
				inline_script = { script = civil_war_country_creation/gen_fac_civil_war }
				ethos = {
					ethic = ethic_fanatic_pluralist
					ethic = ethic_egalitarian
				}
			}
		}
	}
}

##########

created_civwar_country_effect = {
	establish_communications_no_message = root # If this isnt done here, a message will still pop up as of 3.5
	set_timed_country_flag = { flag = civwar_rebel_timer months = 3 }
	save_event_target_as = civwar_rebels
	country_event = { id = civwar.1000 }
}

created_civwar_rebel_country_effect = {
	set_timed_country_flag = { flag = civwar_rebel_timer months = 3 }
	save_event_target_as = civwar_rebels
	if = {
		limit = {
			exists = root.target
			root.target = {
				is_scope_type = pop_faction
				is_regular_faction = yes
			}
		}
		if = {
			limit = { root.target = { is_authoritarian_faction = yes } }
			if = {
				limit = { homeworld_ethic_leader_exists = { ETHIC = authoritarian } }
				get_homeworld_ethic_leader = { ETHIC = authoritarian }
			}
			else_if = {
				limit = { event_target:civil_war_planet.owner = { any_owned_leader = { has_ethic = ethic_authoritarian } } }
				event_target:civil_war_planet.owner = {
					random_owned_leader = {
						limit = { has_ethic = ethic_authoritarian }
						save_event_target_as = new_rebel_leader
					}
				}
			}
			else = { create_planetary_leader_with_ethic = { ETHIC = authoritarian } }
		}
		else_if = {
			limit = { root.target = { is_egalitarian_faction = yes } }
			if = {
				limit = { homeworld_ethic_leader_exists = { ETHIC = egalitarian } }
				get_homeworld_ethic_leader = { ETHIC = egalitarian }
			}
			else_if = {
				limit = { event_target:civil_war_planet.owner = { any_owned_leader = { has_ethic = ethic_egalitarian } } }
				event_target:civil_war_planet.owner = {
					random_owned_leader = {
						limit = { has_ethic = ethic_egalitarian }
						save_event_target_as = new_rebel_leader
					}
				}
			}
			else = { create_planetary_leader_with_ethic = { ETHIC = egalitarian } }
		}
		else_if = {
			limit = { root.target = { is_militarist_faction = yes } }
			if = {
				limit = { homeworld_ethic_leader_exists = { ETHIC = militarist } }
				get_homeworld_ethic_leader = { ETHIC = militarist }
			}
			else_if = {
				limit = { event_target:civil_war_planet.owner = { any_owned_leader = { has_ethic = ethic_militarist } } }
				event_target:civil_war_planet.owner = {
					random_owned_leader = {
						limit = { has_ethic = ethic_militarist }
						save_event_target_as = new_rebel_leader
					}
				}
			}
			else = { create_planetary_leader_with_ethic = { ETHIC = militarist } }
		}
		else_if = {
			limit = { root.target = { is_pacifist_faction = yes } }
			if = {
				limit = { homeworld_ethic_leader_exists = { ETHIC = pacifist } }
				get_homeworld_ethic_leader = { ETHIC = pacifist }
			}
			else_if = {
				limit = { event_target:civil_war_planet.owner = { any_owned_leader = { has_ethic = ethic_pacifist } } }
				event_target:civil_war_planet.owner = {
					random_owned_leader = {
						limit = { has_ethic = ethic_pacifist }
						save_event_target_as = new_rebel_leader
					}
				}
			}
			else = { create_planetary_leader_with_ethic = { ETHIC = pacifist } }
		}
		else_if = {
			limit = { root.target = { is_materialist_faction = yes } }
			if = {
				limit = { homeworld_ethic_leader_exists = { ETHIC = materialist } }
				get_homeworld_ethic_leader = { ETHIC = materialist }
			}
			else_if = {
				limit = { event_target:civil_war_planet.owner = { any_owned_leader = { has_ethic = ethic_materialist } } }
				event_target:civil_war_planet.owner = {
					random_owned_leader = {
						limit = { has_ethic = ethic_materialist }
						save_event_target_as = new_rebel_leader
					}
				}
			}
			else = { create_planetary_leader_with_ethic = { ETHIC = materialist } }
		}
		else_if = {
			limit = { root.target = { is_spiritualist_faction = yes } }
			if = {
				limit = { homeworld_ethic_leader_exists = { ETHIC = spiritualist } }
				get_homeworld_ethic_leader = { ETHIC = spiritualist }
			}
			else_if = {
				limit = { event_target:civil_war_planet.owner = { any_owned_leader = { has_ethic = ethic_spiritualist } } }
				event_target:civil_war_planet.owner = {
					random_owned_leader = {
						limit = { has_ethic = ethic_spiritualist }
						save_event_target_as = new_rebel_leader
					}
				}
			}
			else = { create_planetary_leader_with_ethic = { ETHIC = spiritualist } }
		}
		else_if = {
			limit = { root.target = { is_xenophile_faction = yes } }
			if = {
				limit = { homeworld_ethic_leader_exists = { ETHIC = xenophile } }
				get_homeworld_ethic_leader = { ETHIC = xenophile }
			}
			else_if = {
				limit = { event_target:civil_war_planet.owner = { any_owned_leader = { has_ethic = ethic_xenophile } } }
				event_target:civil_war_planet.owner = {
					random_owned_leader = {
						limit = { has_ethic = ethic_xenophile }
						save_event_target_as = new_rebel_leader
					}
				}
			}
			else = { create_planetary_leader_with_ethic = { ETHIC = xenophile } }
		}
		else_if = {
			limit = { root.target = { is_xenophobe_faction = yes } }
			if = {
				limit = { homeworld_ethic_leader_exists = { ETHIC = xenophobe } }
				get_homeworld_ethic_leader = { ETHIC = xenophobe }
			}
			else_if = {
				limit = { event_target:civil_war_planet.owner = { any_owned_leader = { has_ethic = ethic_xenophobe } } }
				event_target:civil_war_planet.owner = {
					random_owned_leader = {
						limit = { has_ethic = ethic_xenophobe }
						save_event_target_as = new_rebel_leader
					}
				}
			}
			else = { create_planetary_leader_with_ethic = { ETHIC = xenophobe } }
		}
		else_if = {
			limit = { root.target = { is_socialist_faction = yes } }
			if = {
				limit = { homeworld_ethic_leader_exists = { ETHIC = socialism } }
				get_homeworld_ethic_leader = { ETHIC = socialism }
			}
			else_if = {
				limit = { event_target:civil_war_planet.owner = { any_owned_leader = { has_ethic = ethic_socialism } } }
				event_target:civil_war_planet.owner = {
					random_owned_leader = {
						limit = { has_ethic = ethic_socialism }
						save_event_target_as = new_rebel_leader
					}
				}
			}
			else = { create_planetary_leader_with_ethic = { ETHIC = socialism } }
		}
		else_if = {
			limit = { root.target = { is_capitalism_faction = yes } }
			if = {
				limit = { homeworld_ethic_leader_exists = { ETHIC = capitalism } }
				get_homeworld_ethic_leader = { ETHIC = capitalism }
			}
			else_if = {
				limit = { event_target:civil_war_planet.owner = { any_owned_leader = { has_ethic = ethic_capitalism } } }
				event_target:civil_war_planet.owner = {
					random_owned_leader = {
						limit = { has_ethic = ethic_capitalism }
						save_event_target_as = new_rebel_leader
					}
				}
			}
			else = { create_planetary_leader_with_ethic = { ETHIC = capitalism } }
		}
		else_if = {
			limit = { root.target = { is_industrial_faction = yes } }
			if = {
				limit = { homeworld_ethic_leader_exists = { ETHIC = industrial } }
				get_homeworld_ethic_leader = { ETHIC = industrial }
			}
			else_if = {
				limit = { event_target:civil_war_planet.owner = { any_owned_leader = { has_ethic = ethic_industrial } } }
				event_target:civil_war_planet.owner = {
					random_owned_leader = {
						limit = { has_ethic = ethic_industrial }
						save_event_target_as = new_rebel_leader
					}
				}
			}
			else = { create_planetary_leader_with_ethic = { ETHIC = industrial } }
		}
		else_if = {
			limit = { root.target = { is_ecologist_faction = yes } }
			if = {
				limit = { homeworld_ethic_leader_exists = { ETHIC = green } }
				get_homeworld_ethic_leader = { ETHIC = green }
			}
			else_if = {
				limit = { event_target:civil_war_planet.owner = { any_owned_leader = { has_ethic = ethic_green } } }
				event_target:civil_war_planet.owner = {
					random_owned_leader = {
						limit = { has_ethic = ethic_green }
						save_event_target_as = new_rebel_leader
					}
				}
			}
			else = { create_planetary_leader_with_ethic = { ETHIC = green } }
		}
		else_if = {
			limit = { root.target = { is_elitist_faction = yes } }
			if = {
				limit = { homeworld_ethic_leader_exists = { ETHIC = elitist } }
				get_homeworld_ethic_leader = { ETHIC = elitist }
			}
			else_if = {
				limit = { event_target:civil_war_planet.owner = { any_owned_leader = { has_ethic = ethic_elitist } } }
				event_target:civil_war_planet.owner = {
					random_owned_leader = {
						limit = { has_ethic = ethic_elitist }
						save_event_target_as = new_rebel_leader
					}
				}
			}
			else = { create_planetary_leader_with_ethic = { ETHIC = elitist } }
		}
		else_if = {
			limit = { root.target = { is_pluralist_faction = yes } }
			if = {
				limit = { homeworld_ethic_leader_exists = { ETHIC = pluralist } }
				get_homeworld_ethic_leader = { ETHIC = pluralist }
			}
			else_if = {
				limit = { event_target:civil_war_planet.owner = { any_owned_leader = { has_ethic = ethic_pluralist } } }
				event_target:civil_war_planet.owner = {
					random_owned_leader = {
						limit = { has_ethic = ethic_pluralist }
						save_event_target_as = new_rebel_leader
					}
				}
			}
			else = { create_planetary_leader_with_ethic = { ETHIC = pluralist } }
		}

	}
	else_if = {
		limit = {
			NOT = { exists = event_target:new_rebel_leader }
			NOT = {
				has_origin = origin_nationalist_rebellion
				has_origin = origin_civstrife_slave_rebellion
			}
			event_target:civil_war_planet.owner = {
				any_owned_leader = {
					OR = {
						background_planet = { is_same_value = event_target:civil_war_planet }
						AND = {
							event_target:civil_war_planet = { has_planet_flag = sep_sector_rebellion }
							exists = background_planet.sector
							background_planet.sector = { is_same_value = event_target:civil_war_planet.sector }
						}
					}
				}
			}
		}
		while = {
			limit = {
				NOT = { exists = event_target:new_rebel_leader }
				any_owned_leader = {
					NOT = { has_leader_flag = homeworld_leader_checked }
					OR = {
						background_planet = { is_same_value = event_target:civil_war_planet }
						AND = {
							event_target:civil_war_planet = { has_planet_flag = sep_sector_rebellion }
							exists = background_planet.sector
							background_planet.sector = { is_same_value = event_target:civil_war_planet.sector }
						}
					}
				}
			}
			ordered_owned_leader = {
				limit = {
					NOT = { has_leader_flag = homeworld_leader_checked }
					OR = {
						background_planet = { is_same_value = event_target:civil_war_planet }
						AND = {
							event_target:civil_war_planet = { has_planet_flag = sep_sector_rebellion }
							exists = background_planet.sector
							background_planet.sector = { is_same_value = event_target:civil_war_planet.sector }
						}
					}
				}
				position = 0
				order_by = trigger:leader_age
				inverse = yes
				## ( 100 / (Age + Yrs Experience)) * 20 = Percentage Chance of Leader leading rebellion
				set_variable = { which = rebel_leader_chance value = 100 }
				set_variable = { which = rebel_leader_age_experience value = trigger:leader_age }
				change_variable = { which = rebel_leader_age_experience value = trigger:leader_years_of_service }
				divide_variable = { which = rebel_leader_chance value = rebel_leader_age_experience }
				multiply_variable = { which = rebel_leader_chance value = 20 }
				set_leader_flag = homeworld_leader_checked
				random = {
					chance = rebel_leader_chance
					save_event_target_as = new_rebel_leader
					species = { save_event_target_as = civwar_species }
				}
				clear_variable = rebel_leader_chance
				clear_variable = rebel_leader_age_experience
			}
		}
	}

	if = {
		limit = { NOT = { exists = event_target:new_rebel_leader } }
		create_leader = {
			class = random_ruler
			species = event_target:civwar_species
			name = random
			skill = 5
			background_planet = event_target:civil_war_planet
			effect = {
				set_leader_flag = new_civwar_ruler
				save_event_target_as = new_rebel_leader
				if = {
					limit = { leader_class = official }
					add_trait_no_notify = trait_ruler_deep_connections
				}
			}
		}
	}

	event_target:new_rebel_leader = {
		if = {
			limit = { NOT = { has_leader_flag = new_civwar_ruler } }
			set_leader_flag = leader_defected
		}
	}
	set_leader = event_target:new_rebel_leader # Needs to be after the above with the leader flags
	event_target:civil_war_planet = {
		planet_event = { id = civplan.2000 }
	}
}

created_slave_rebel_country_effect = {
	set_country_flag = slave_rebels
	save_event_target_as = rebelling_slaves
	establish_communications_no_message = root.owner
	set_relation_flag = {
		flag = rebelling_slaves_former_owner
		who = root.owner
	}
	create_leader = {
		class = random_ruler
		species = event_target:civwar_species
		name = random
		skill = 5
		background_planet = event_target:civil_war_slave_leader_planet
		traits = {
			trait = trait_ruler_charismatic_2
			trait = trait_ruler_champion_of_the_people_2
		}
		effect = {
			set_leader_flag = new_civwar_ruler
			save_event_target_as = new_rebel_leader
		}
	}
	created_civwar_rebel_country_effect = yes
}

#####################
# Civil War Type Effects

get_multi_sector_effect = {

	export_trigger_value_to_variable = {
		trigger = num_sectors
		variable = all_potential_sectors
	}

	set_variable = { which = maybe_rebel_sectors value = 0 }

	every_owned_sector = { # Calculate the rebel percentage of each sector
		limit = {
			NOT = {
				any_owned_planet = {
					num_pops >= 1
					OR = {
						is_capital = yes
						has_ground_combat = yes
						is_occupied_flag = yes
					}
				}
			}
		}
		set_sector_flag = potential_rebel
		export_trigger_value_to_variable = {
			trigger = num_pops
			variable = total_sector_pops
		}
		set_variable = { which = fac_sep_percentage value = 0 }
		every_owned_planet = {
			every_owned_pop = {
				limit = {
					exists = pop_faction
					pop_faction = { is_same_value = root.target }
					has_pop_flag = sep_pop
				}
				prevprev = { change_variable = { which = fac_sep_percentage value = 1 } }
			}
		}
		divide_variable = {
			which = fac_sep_percentage
			value = total_sector_pops
		}
		multiply_variable = { # Needs to be done to ensure accurate ordering
			which = fac_sep_percentage
			value = 100
		}
		prev = { change_variable = { which = maybe_rebel_sectors value = 1 } }
	}

	random_list = {
		21 = { multiply_variable = { which = all_potential_sectors value = 0.3 } }
		31 = { multiply_variable = { which = all_potential_sectors value = 0.4 } }
		46 = { multiply_variable = { which = all_potential_sectors value = 0.5 } }
		2 = { multiply_variable = { which = all_potential_sectors value = 0.67 } }
	}
	ceiling_variable = all_potential_sectors

	while = { # Pick the most separatist sectors to rebel
		count = all_potential_sectors
		ordered_owned_sector = {
			limit = {
				has_sector_flag = potential_rebel
				NOT = { has_sector_flag = rebel_sector }
			}
			position = 0
			order_by = fac_sep_percentage
			set_sector_flag = rebel_sector
		}
	}

	while = { # Associate bordering sectors with each other
		count = all_potential_sectors
		if = {
			limit = {
				any_owned_sector = {
					has_sector_flag = rebel_sector
					NOT = { has_sector_flag = counted_sector }
				}
			}
			ordered_owned_sector = {
				limit = {
					has_sector_flag = rebel_sector
					NOT = { has_sector_flag = counted_sector }
				}
				position = 0
				order_by = fac_sep_percentage
				save_event_target_as = rebel_sector_leader
				set_sector_flag = rebel_sector_@this
				set_sector_flag = leader_sector
				set_sector_flag = counted_sector
			}
			while = {
				count = all_potential_sectors
				if = { # Any Sector that borders a more rebellious sector will rebel under them
					limit = {
						any_owned_sector = {
							NOT = { has_sector_flag = counted_sector }
							has_sector_flag = rebel_sector
							any_system_within_border = {
								closest_system = {
									limit = {
										exists = sector
										sector = { has_sector_flag = rebel_sector_@event_target:rebel_sector_leader }
									}
									use_bypasses = yes
									max_steps = 1
								}
							}
						}
					}
					random_owned_sector = {
						limit = {
							NOT = { has_sector_flag = counted_sector }
							has_sector_flag = rebel_sector
							any_system_within_border = {
								closest_system = {
									limit = {
										exists = sector
										sector = { has_sector_flag = rebel_sector_@event_target:rebel_sector_leader }
									}
									use_bypasses = yes
									max_steps = 1
								}
							}
						}
						set_sector_flag = counted_sector
						set_sector_flag = rebel_sector_@event_target:rebel_sector_leader
						set_sector_flag = rebel_sector_follower_@event_target:rebel_sector_leader
					}
				}
			}
		}
	}

	if = {
		limit = { root.target = { is_regular_faction = yes } }
		set_recent_civwar_flag = yes
	}

	# I Imagine this should stay past the first loop
	root.target = {
		save_event_target_as = civwar_party
		random_owned_pop = { species = { save_event_target_as = civwar_species } }
	}

	create_party_name_leader = yes
	last_created_leader = { leader_event = { id = civleader.1000 days = 720 } }

	set_variable = { which = total_reb_countries value = 0 }
	every_owned_sector = {
		limit = { has_sector_flag = leader_sector }
		prev = { change_variable = { which = total_reb_countries value = 1 } }
	}

	if = {
		limit = { check_variable = { which = total_reb_countries value > 1 } }
		set_timed_country_flag = { flag = rebs_help_eachother months = 6 }
	}

	every_owned_sector = {
		limit = { has_sector_flag = leader_sector }
		set_variable = { which = fac_sep_percentage value = 0 }
		export_trigger_value_to_variable = {
			trigger = num_pops
			variable = total_new_country_pops
		}
		every_owned_planet = {
			every_owned_pop = {
				limit = {
					exists = pop_faction
					pop_faction = { is_same_value = root.target }
					has_pop_flag = sep_pop
				}
				prevprev = { change_variable = { which = fac_sep_percentage value = 1 } }
			}
		}
		owner = {
			every_owned_sector = {
				limit = { has_sector_flag = rebel_sector_follower_@event_target:rebel_sector_leader }
				prevprev = { change_variable = { which = total_new_country_pops value = trigger:num_pops } }
				every_owned_planet = {
					every_owned_pop = {
						limit = {
							exists = pop_faction
							pop_faction = { is_same_value = root.target }
							has_pop_flag = sep_pop
						}
						prevprevprevprev = { change_variable = { which = fac_sep_percentage value = 1 } }
					}
				}
			}
		}
		divide_variable = {
			which = fac_sep_percentage
			value = total_new_country_pops
		}
		multiply_variable = { # Needs to be done to ensure accurate ordering
			which = fac_sep_percentage
			value = 100
		}
	}

	while = {
		count = total_reb_countries
		ordered_owned_sector = {
			limit = { has_sector_flag = leader_sector }
			position = 0
			order_by = fac_sep_percentage
			if = {
				limit = { root.target = { is_regular_faction = yes } }
				make_civil_war_faction_country = yes
			}
			else = {
				make_nat_war_country = yes
			}
		}
	}
	
	every_owned_sector = {
		limit = { has_sector_flag = potential_rebel }
		remove_sector_flag = potential_rebel
	}

	if = {
		limit = { root.target = { is_nationalist_faction = yes } }
		root.target = {
			every_owned_pop = {
				limit = { has_pop_flag = sep_pop_nat }
				random = {
					chance = 80
					remove_pop_flag = sep_pop_nat
				}
			}
		}
	}
}

get_two_sector_effect = {
	log = "| 2 Sector Civwar"
	if = {
		limit = { root.target = { is_regular_faction = yes } }
		set_recent_civwar_flag = yes
	}

	root.target = {
		save_event_target_as = civwar_party
		random_owned_pop = { species = { save_event_target_as = civwar_species } }
	}

	create_party_name_leader = yes
	last_created_leader = { leader_event = { id = civleader.1000 days = 720 } }

	random_owned_sector = {
		limit = {
			NOT = {
				any_owned_planet = {
					OR = {
						is_capital = yes
						is_occupied_flag = yes
						has_ground_combat = yes
					}
				}
			}
		}
		set_sector_flag = leader_sector
		if = {
			limit = { root.target = { is_regular_faction = yes } }
			make_civil_war_faction_country = yes
		}
		else = {
			make_nat_war_country = yes
			root.target = {
				every_owned_pop = {
					limit = { has_pop_flag = sep_pop_nat }
					random = {
						chance = 80
						remove_pop_flag = sep_pop_nat
					}
				}
			}
		}
	}
}

get_small_civwar_effect = {
	root.target = {
		set_variable = { which = fac_mil_support value = 0 }
		save_event_target_as = civwar_party
	}
	if = { # If only 2 planets, get the other planet
		limit = { num_owned_planets = 2 }
		random_owned_planet = {
			limit = {
				num_pops >= 1
				is_capital = no
				has_ground_combat = no
				is_occupied_flag = no
			}
			save_event_target_as = civil_war_planet
			solar_system = { set_timed_star_flag = { flag = civwar_planet months = 3 } }
			every_owned_pop = {
				limit = {
					exists = pop_faction
					pop_faction = { is_same_value = root.target }
					has_pop_flag = sep_pop
				}
				root.target = { change_variable = { which = fac_mil_support value = 1 } }
			}
			random_owned_pop = {
				limit = {
					exists = pop_faction
					pop_faction = { is_same_value = root.target }
					has_pop_flag = sep_pop
				}
				species = { save_event_target_as = civwar_species }
			}
			set_planet_flag = small_civil_war
			if = {
				limit = { root.target = { is_regular_faction = yes } }
				get_ethic_plan_rebels = yes
			}
			else = {
				set_planet_flag = nat_planet_rebellion_@this # Such that Balkanization doesnt result in a bunch of wars numbered different civil wars at the same time
				get_nat_plan_rebels = yes
			}
		}
	}
	else = { # If more than 2, potentially Balkanize
		set_variable = { which = total_happiness_pops value = 0 }
		every_owned_pop = {
			limit = { pop_has_happiness = yes }
			prev = { change_variable = { which = total_happiness_pops value = 1 } }
		}
		set_variable = { which = maybe_rebel_planets value = 0 }
		every_owned_planet = {
			limit = {
				num_pops >= 1
				solar_system = { is_capital_system = no }
				has_ground_combat = no
				is_occupied_flag = no
				any_owned_pop = {
					exists = pop_faction
					pop_faction = { is_same_value = root.target }
					OR = {
						root = { is_ethic_situation = no }
						has_pop_flag = sep_pop_ethic
					}
				}
			}
			set_variable = { which = fac_sep_percentage value = 0 }
			every_owned_pop = {
				limit = {
					exists = pop_faction
					pop_faction = { is_same_value = root.target }
					has_pop_flag = sep_pop
				}
				prev = { change_variable = { which = fac_sep_percentage value = 1 } }
			}
			prev = { change_variable = { which = maybe_rebel_planets value = 1 } }
			divide_variable = {
				which = fac_sep_percentage
				value = prev.total_happiness_pops
			}
		}
		while = {
			count = maybe_rebel_planets
			ordered_owned_planet = {
				limit = {
					num_pops >= 1
					solar_system = { is_capital_system = no }
					has_ground_combat = no
					is_occupied_flag = no
					any_owned_pop = {
						exists = pop_faction
						pop_faction = { is_same_value = root.target }
						OR = {
							root = { is_ethic_situation = no }
							has_pop_flag = sep_pop_ethic
						}
					}
				}
				position = 0
				order_by = fac_sep_percentage
				save_event_target_as = civil_war_planet
				solar_system = { set_timed_star_flag = { flag = civwar_planet months = 3 } }
				every_owned_pop = {
					limit = {
						exists = pop_faction
						pop_faction = { is_same_value = root.target }
						has_pop_flag = sep_pop
					}
					root.target = { change_variable = { which = fac_mil_support value = 1 } }
				}
				random_owned_pop = {
					limit = {
						exists = pop_faction
						pop_faction = { is_same_value = root.target }
						has_pop_flag = sep_pop
					}
					species = { save_event_target_as = civwar_species }
				}
				set_planet_flag = balkan_war
				
				if = {
					limit = { root.target = { is_regular_faction = yes } }
					set_planet_flag = ethic_planet_rebellion_@this # Such that Balkanization doesnt result in a bunch of wars numbered different civil wars at the same time
					get_ethic_plan_rebels = yes
					set_recent_civwar_flag = yes
				}
				else = {
					set_planet_flag = nat_planet_rebellion_@this # Such that Balkanization doesnt result in a bunch of wars numbered different civil wars at the same time
					get_nat_plan_rebels = yes
				}
			}
		}
	}
	root = {
		if = {
			limit = { target = { is_regular_faction = yes } }
			situation_event = { id = civethic.9000 }
		}
		else = {
			situation_event = { id = civnat.9010 }
			target = {
				every_owned_pop = {
					limit = { has_pop_flag = sep_pop_nat }
					random = {
						chance = 80
						remove_pop_flag = sep_pop_nat
					}
				}
			}
		}
	}
}

get_sectoral_revolt_effect = {
	root.target = { save_event_target_as = civwar_party }
	last_created_leader = { leader_event = { id = civleader.1000 days = 720 } }
	random_owned_sector = {
		limit = {
			NOT = {
				any_owned_planet = {
					is_under_colonization = no
					OR = {
						is_capital = yes
						has_ground_combat = yes
						is_occupied_flag = yes
					}
				}
			}
			pop_percentage = {
				percentage >= @civwar_pop_percent_needed
				# percentage > 0
				limit = {
					exists = pop_faction
					pop_faction = { is_same_value = root.target }
					has_pop_flag = sep_pop
				}
				exclude = { can_think = no }
			}
		}
		save_event_target_as = saved_sector
		root.target = {
			set_variable = { which = fac_mil_support value = 0 }
			save_event_target_as = civwar_party
		}
		every_owned_planet = {
			every_owned_pop = {
				limit = {
					exists = pop_faction
					pop_faction = { is_same_value = root.target }
					has_pop_flag = sep_pop
				}
				root.target = { change_variable = { which = fac_mil_support value = 1 } }
			}
		}
		random_owned_planet = {
			random_owned_pop = {
				limit = {
					exists = pop_faction
					pop_faction = { is_same_value = root.target }
					has_pop_flag = sep_pop
				}
				species = { save_event_target_as = civwar_species }
			}
		}
		sector_capital = {
			save_event_target_as = civil_war_planet
			owner = { create_party_name_leader = yes }
			if = {
				limit = { root.target = { is_regular_faction = yes } }
				set_planet_flag = ethic_sector_rebellion
				get_ethic_plan_rebels = yes
				set_recent_civwar_flag = yes
				sector = { set_sector_flag = ethic_sector_rebellion_@event_target:civil_war_planet }
			}
			else = {
				set_planet_flag = nat_sector_rebellion
				get_nat_plan_rebels = yes
				sector = { set_sector_flag = nat_sector_rebellion_@event_target:civil_war_planet }
			}
		}
		
		save_event_target_as = sector_name_local
		
		create_sector_name_leader = yes # Create a dummy leader to save the sector name for localisation
		
		root = {
			if = {
				limit = { target = { is_regular_faction = yes } }
				situation_event = { id = civethic.9010 }
			}
			else = {
				situation_event = { id = civnat.9010 }
				target = {
					every_owned_pop = {
						limit = { has_pop_flag = sep_pop_nat }
						random = {
							chance = 80
							remove_pop_flag = sep_pop_nat
						}
					}
				}
			}
		}
	}
}

get_planetary_revolt_effect = {
	random_owned_planet = {
		limit = {
			is_under_colonization = no
			is_capital = no
			has_ground_combat = no
			is_occupied_flag = no
			sector = {
				NOR = {
					has_sector_flag = nat_sector_rebellion_@sector_capital
					has_sector_flag = ethic_sector_rebellion_@sector_capital
				}
			}
			pop_percentage = {
				percentage >= @civwar_pop_percent_needed
				# percentage > 0
				limit = {
					exists = pop_faction
					pop_faction = { is_same_value = root.target }
					has_pop_flag = sep_pop
				}
				exclude = { can_think = no }
			}
		}
		get_planetary_reb_number = yes
		root.target = {
			set_variable = { which = fac_mil_support value = 0 }
			save_event_target_as = civwar_party
		}
		every_owned_pop = {
			limit = {
				exists = pop_faction
				pop_faction = { is_same_value = root.target }
				has_pop_flag = sep_pop
			}
			root.target = { change_variable = { which = fac_mil_support value = 1 } }
		}
		random_owned_pop = {
			limit = {
				exists = pop_faction
				pop_faction = { is_same_value = root.target }
				has_pop_flag = sep_pop
			}
			species = { save_event_target_as = civwar_species }
		}
		save_event_target_as = civil_war_planet
		solar_system = { set_timed_star_flag = { flag = civwar_planet months = 3 } }
		if = {
			limit = { root.target = { is_regular_faction = yes } }
			set_planet_flag = ethic_planet_rebellion_@this
			owner = { create_party_name_leader = yes }
			get_ethic_plan_rebels = yes
			set_recent_civwar_flag = yes
			root = { situation_event = { id = civethic.9000 } }
		}
		else = {
			set_planet_flag = nat_planet_rebellion_@this
			owner = { create_party_name_leader = yes }
			get_nat_plan_rebels = yes
			root = {
				situation_event = { id = civnat.9010 }
				target = {
					every_owned_pop = {
						limit = { has_pop_flag = sep_pop_nat }
						random = {
							chance = 80
							remove_pop_flag = sep_pop_nat
						}
					}
				}
			}
		}
	}
}

get_heir_multi_sector_effect = {
	save_event_target_as = civwar_originator

	export_trigger_value_to_variable = {
		trigger = num_sectors
		variable = all_potential_sectors
	}

	export_trigger_value_to_variable = {
		trigger = num_sectors
		variable = all_potential_sectors
	}

	random_list = {
		45 = { multiply_variable = { which = all_potential_sectors value = 0.3 } }
		35 = { multiply_variable = { which = all_potential_sectors value = 0.4 } }
		15 = { multiply_variable = { which = all_potential_sectors value = 0.5 } }
		5 = { multiply_variable = { which = all_potential_sectors value = 0.6 } }
	}

	ceiling_variable = all_potential_sectors

	random_owned_sector = {
		limit = { NOT = { any_system_within_border = { is_capital_system = yes } } }
		save_event_target_as = rebel_sector_leader
		set_sector_flag = rebel_sector_@this
		set_sector_flag = counted_sector
		set_sector_flag = leader_sector
	}

	while = {
		count = all_potential_sectors
		random_owned_sector = {
			limit = {
				NOR = {
					any_system_within_border = { is_capital_system = yes }
					has_sector_flag = counted_sector
				}
				any_system_within_border = {
					closest_system = {
						limit = {
							exists = sector
							sector = { has_sector_flag = rebel_sector_@event_target:rebel_sector_leader }
						}
						use_bypasses = yes
						max_steps = 1
					}
				}
			}
			sector = { set_sector_flag = rebel_sector_follower_@event_target:rebel_sector_leader }
			set_sector_flag = counted_sector
		}
	}
	create_heir_country_effect = yes	
}

get_heir_one_sector_effect = {
	save_event_target_as = civwar_originator
	# find and flag systems
	random_owned_sector = {
		limit = { NOT = { any_system_within_border = { is_capital_system = yes } } }
	    set_sector_flag = leader_sector 
	}
	create_heir_country_effect = yes		
}

create_heir_country_effect = {
	set_country_flag = heir_mother_country
	if = {
		limit = { event_target:heir_civil_war_dummy_country = { is_imperial_authority = yes } }
		create_country = {
			authority = event_target:heir_civil_war_dummy_country
			inline_script = { script = civil_war_country_creation/heir_dummy_country }
		}
	}
	else = {
		create_country = {
			authority = auth_imperial
			inline_script = { script = civil_war_country_creation/heir_dummy_country }
		}
	}
}

get_heir_one_planet_effect = {
	save_event_target_as = civwar_originator

	if = {
		limit = {
			any_owned_planet = {
				is_capital = no
				any_owned_pop = { can_think = yes }
			}
		}
		random_owned_planet = {
			limit = {
				is_capital = no
				any_owned_pop = { can_think = yes }
			}
			
			save_event_target_as = civil_war_planet
			set_planet_flag = heir_planetary_rebellion

			if = { # Idk why, but noticed this being an issue.
				# Will investigate eventually.
				# Dont know if it effects sector and civil, but added just to be safe.
				limit = { event_target:heir_civil_war_dummy_country = { is_imperial_authority = yes } }
				create_rebels = {
					name = random
					species = event_target:heir_civil_war_dummy_country.ruler.species
					authority = event_target:heir_civil_war_dummy_country
					ethos = random
					origin = origin_heir_rebellion
					civics = random
					flag = random
					effect = {
						set_country_flag = heir_rebel_country
						set_leader = event_target:heir_civil_war_dummy_country.ruler
						owner_main_species = { save_event_target_as = civwar_species }
						event_target:heir_civil_war_dummy_country = { destroy_country = yes }
						created_civwar_rebel_country_effect = yes
					}
				}
			}
			else = {
				create_rebels = {
					name = random
					species = event_target:heir_civil_war_dummy_country.ruler.species
					authority = auth_imperial
					ethos = random
					origin = origin_heir_rebellion
					civics = random
					flag = random
					effect = {
						set_country_flag = heir_rebel_country
						set_leader = event_target:heir_civil_war_dummy_country.ruler
						owner_main_species = { save_event_target_as = civwar_species }
						event_target:heir_civil_war_dummy_country = { destroy_country = yes }
						created_civwar_rebel_country_effect = yes
					}
				}
			}

			planet_event = { id = civplan.9000 }
		}
	}
	else_if = {
		limit = { any_owned_planet = { is_capital = no } }
		random_owned_planet = {
			limit = {
				is_capital = no
			}
			
			save_event_target_as = civil_war_planet
			set_planet_flag = heir_planetary_rebellion

			if = { # Idk why, but noticed this being an issue.
				# Will investigate eventually.
				# Dont know if it effects sector and civil, but added just to be safe.
				limit = { event_target:heir_civil_war_dummy_country = { is_imperial_authority = yes } }
				create_rebels = {
					name = random
					species = event_target:heir_civil_war_dummy_country.ruler.species
					authority = event_target:heir_civil_war_dummy_country
					ethos = random
					origin = origin_heir_rebellion
					civics = random
					flag = random
					effect = {
						set_country_flag = heir_rebel_country
						set_leader = event_target:heir_civil_war_dummy_country.ruler
						owner_main_species = { save_event_target_as = civwar_species }
						event_target:heir_civil_war_dummy_country = { destroy_country = yes }
						created_civwar_rebel_country_effect = yes
					}
				}
			}
			else = {
				create_rebels = {
					name = random
					species = event_target:heir_civil_war_dummy_country.ruler.species
					authority = auth_imperial
					ethos = random
					origin = origin_heir_rebellion
					civics = random
					flag = random
					effect = {
						set_country_flag = heir_rebel_country
						set_leader = event_target:heir_civil_war_dummy_country.ruler
						owner_main_species = { save_event_target_as = civwar_species }
						event_target:heir_civil_war_dummy_country = { destroy_country = yes }
						created_civwar_rebel_country_effect = yes
					}
				}
			}

			planet_event = { id = civplan.9000 }
		}
	}
}

set_recent_civwar_flag = {
	root.target = {
		if = {
			limit = { is_pacifist_faction = yes }
			owner = {
				random_list = {
					40 = { set_timed_country_flag = { flag = civ_war_recent_PAC years = 5 } }
					25 = { set_timed_country_flag = { flag = civ_war_recent_PAC years = 10 } }
					20 = { set_timed_country_flag = { flag = civ_war_recent_PAC years = 15 } }
					15 = { set_timed_country_flag = { flag = civ_war_recent_PAC years = 20 } }
				}
			}
		}
		else_if = {
			limit = { is_militarist_faction = yes }
			owner = {
				random_list = {
					40 = { set_timed_country_flag = { flag = civ_war_recent_MIL years = 5 } }
					25 = { set_timed_country_flag = { flag = civ_war_recent_MIL years = 10 } }
					20 = { set_timed_country_flag = { flag = civ_war_recent_MIL years = 15 } }
					15 = { set_timed_country_flag = { flag = civ_war_recent_MIL years = 20 } }
				}
			}
		}
		else_if = {
			limit = { is_materialist_faction = yes }
			owner = {
				random_list = {
					40 = { set_timed_country_flag = { flag = civ_war_recent_MAT years = 5 } }
					25 = { set_timed_country_flag = { flag = civ_war_recent_MAT years = 10 } }
					20 = { set_timed_country_flag = { flag = civ_war_recent_MAT years = 15 } }
					15 = { set_timed_country_flag = { flag = civ_war_recent_MAT years = 20 } }
				}
			}
		}
		else_if = {
			limit = { is_spiritualist_faction = yes }
			owner = {
				random_list = {
					40 = { set_timed_country_flag = { flag = civ_war_recent_SPI years = 5 } }
					25 = { set_timed_country_flag = { flag = civ_war_recent_SPI years = 10 } }
					20 = { set_timed_country_flag = { flag = civ_war_recent_SPI years = 15 } }
					15 = { set_timed_country_flag = { flag = civ_war_recent_SPI years = 20 } }
				}
			}
		}
		else_if = {
			limit = { is_egalitarian_faction = yes }
			owner = {
				random_list = {
					40 = { set_timed_country_flag = { flag = civ_war_recent_EGAL years = 5 } }
					25 = { set_timed_country_flag = { flag = civ_war_recent_EGAL years = 10 } }
					20 = { set_timed_country_flag = { flag = civ_war_recent_EGAL years = 15 } }
					15 = { set_timed_country_flag = { flag = civ_war_recent_EGAL years = 20 } }
				}
			}
		}
		else_if = {
			limit = { is_authoritarian_faction = yes }
			owner = {
				random_list = {
					40 = { set_timed_country_flag = { flag = civ_war_recent_AUTH years = 5 } }
					25 = { set_timed_country_flag = { flag = civ_war_recent_AUTH years = 10 } }
					20 = { set_timed_country_flag = { flag = civ_war_recent_AUTH years = 15 } }
					15 = { set_timed_country_flag = { flag = civ_war_recent_AUTH years = 20 } }
				}
			}
		}
		else_if = {
			limit = { is_xenophile_faction = yes }
			owner = {
				random_list = {
					40 = { set_timed_country_flag = { flag = civ_war_recent_XENO years = 5 } }
					25 = { set_timed_country_flag = { flag = civ_war_recent_XENO years = 10 } }
					20 = { set_timed_country_flag = { flag = civ_war_recent_XENO years = 15 } }
					15 = { set_timed_country_flag = { flag = civ_war_recent_XENO years = 20 } }
				}
			}
		}
		else_if = {
			limit = { is_xenophobe_faction = yes }
			owner = {
				random_list = {
					40 = { set_timed_country_flag = { flag = civ_war_recent_PHOBE years = 5 } }
					25 = { set_timed_country_flag = { flag = civ_war_recent_PHOBE years = 10 } }
					20 = { set_timed_country_flag = { flag = civ_war_recent_PHOBE years = 15 } }
					15 = { set_timed_country_flag = { flag = civ_war_recent_PHOBE years = 20 } }
				}
			}
		}
		else_if = {
			limit = { is_ecologist_faction = yes }
			owner = {
				random_list = {
					40 = { set_timed_country_flag = { flag = civ_war_recent_ECO years = 5 } }
					25 = { set_timed_country_flag = { flag = civ_war_recent_ECO years = 10 } }
					20 = { set_timed_country_flag = { flag = civ_war_recent_ECO years = 15 } }
					15 = { set_timed_country_flag = { flag = civ_war_recent_ECO years = 20 } }
				}
			}
		}
		else_if = {
			limit = { is_industrial_faction = yes }
			owner = {
				random_list = {
					40 = { set_timed_country_flag = { flag = civ_war_recent_INDUS years = 5 } }
					25 = { set_timed_country_flag = { flag = civ_war_recent_INDUS years = 10 } }
					20 = { set_timed_country_flag = { flag = civ_war_recent_INDUS years = 15 } }
					15 = { set_timed_country_flag = { flag = civ_war_recent_INDUS years = 20 } }
				}
			}
		}
		else_if = {
			limit = { is_socialist_faction = yes }
			owner = {
				random_list = {
					40 = { set_timed_country_flag = { flag = civ_war_recent_SOC years = 5 } }
					25 = { set_timed_country_flag = { flag = civ_war_recent_SOC years = 10 } }
					20 = { set_timed_country_flag = { flag = civ_war_recent_SOC years = 15 } }
					15 = { set_timed_country_flag = { flag = civ_war_recent_SOC years = 20 } }
				}
			}
		}
		else_if = {
			limit = { is_capitalism_faction = yes }
			owner = {
				random_list = {
					40 = { set_timed_country_flag = { flag = civ_war_recent_CAP years = 5 } }
					25 = { set_timed_country_flag = { flag = civ_war_recent_CAP years = 10 } }
					20 = { set_timed_country_flag = { flag = civ_war_recent_CAP years = 15 } }
					15 = { set_timed_country_flag = { flag = civ_war_recent_CAP years = 20 } }
				}
			}
		}
		else_if = {
			limit = { is_pluralist_faction = yes }
			owner = {
				random_list = {
					40 = { set_timed_country_flag = { flag = civ_war_recent_PLUR years = 5 } }
					25 = { set_timed_country_flag = { flag = civ_war_recent_PLUR years = 10 } }
					20 = { set_timed_country_flag = { flag = civ_war_recent_PLUR years = 15 } }
					15 = { set_timed_country_flag = { flag = civ_war_recent_PLUR years = 20 } }
				}
			}
		}
		else_if = {
			limit = { is_elitist_faction = yes }
			owner = {
				random_list = {
					40 = { set_timed_country_flag = { flag = civ_war_recent_ELITE years = 5 } }
					25 = { set_timed_country_flag = { flag = civ_war_recent_ELITE years = 10 } }
					20 = { set_timed_country_flag = { flag = civ_war_recent_ELITE years = 15 } }
					15 = { set_timed_country_flag = { flag = civ_war_recent_ELITE years = 20 } }
				}
			}
		}
	}
}

#####################
# Get Rebels

get_ethic_plan_rebels = {

	if = {
		limit = { has_planet_flag = ethic_planet_rebellion_@this }
		get_planetary_reb_number = yes
	}

	if = { # Authoritarian
		limit = { root.target = { is_authoritarian_faction = yes } }
		if = {
			limit = { has_global_flag = cultural_overhaul_active }
			random_list = {
				50 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_authoritarian }
					}
				}
				50 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_authoritarian }
					}
				}
			}
		}
		else = {
			random_list = {
				50 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_authoritarian }
					}
				}
				50 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_authoritarian }
					}
				}
			}
		}
		last_created_country = { set_country_flag = civwar_auth }
	}
	else_if = { # Egalitarians
		limit = { root.target = { is_egalitarian_faction = yes } }
		if = {
			limit = { has_global_flag = cultural_overhaul_active }
			if = {
				limit = { has_global_flag = cultural_overhaul_funefork_active }
				random_list = {
					50 = {
						create_rebels = {
							authority = auth_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_egalitarian }
						}
					}
					60 = {
						create_rebels = {
							authority = auth_strict_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_egalitarian }
						}
					}
				}
			}
			else = {
				random_list = {
					50 = {
						create_rebels = {
							authority = auth_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_egalitarian }
						}
					}
					50 = {
						create_rebels = {
							authority = auth_direct_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_egalitarian }
						}
					}
				}
			}
		}
		else = {
			create_rebels = {
				authority = auth_democratic
				inline_script = { script = civil_war_country_creation/gen_fac_rebels }
				ethos = { ethic = ethic_fanatic_egalitarian }
			}
		}
		last_created_country = { set_country_flag = civwar_egal }
	}
	else_if = { # Militarists
		limit = { root.target = { is_militarist_faction = yes } }
		if = {
			limit = { has_global_flag = cultural_overhaul_active }
			if = {
				limit = { has_global_flag = cultural_overhaul_funefork_active }
				random_list = {
					10 = {
						create_rebels = {
							authority = auth_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_militarist }
						}
					}
					5 = {
						create_rebels = {
							authority = auth_strict_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_militarist
								ethic = ethic_egalitarian
							}
						}
					}
					25 = {
						create_rebels = {
							authority = auth_dict_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_militarist }
						}
					}
					25 = {
						create_rebels = {
							authority = auth_imperial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_militarist }
						}
					}
					25 = {
						create_rebels = {
							authority = auth_dictatorial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_militarist
								ethic = ethic_authoritarian
							}
						}
					}
					10 = {
						create_rebels = {
							authority = auth_oligarchic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_militarist }
						}
					}
				}
			}
			else = {
				random_list = {
					15 = {
						create_rebels = {
							authority = auth_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_militarist }
						}
					}
					5 = {
						create_rebels = {
							authority = auth_direct_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_militarist
								ethic = ethic_egalitarian
							}
						}
					}
					30 = {
						create_rebels = {
							authority = auth_imperial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_militarist
								ethic = ethic_authoritarian
							}
						}
					}
					30 = {
						create_rebels = {
							authority = auth_dictatorial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_militarist }
						}
					}
					20 = {
						create_rebels = {
							authority = auth_oligarchic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_militarist }
						}
					}
				}
			}
		}
		else = {
			random_list = {
				5 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_militarist }
					}
				}
				45 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_militarist }
					}
				}
				40 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_militarist }
					}
				}
				10 = {
					create_rebels = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_militarist }
					}
				}
			}
		}
		last_created_country = { set_country_flag = civwar_mil }
	}
	else_if = { # Pacifists
		limit = { root.target = { is_pacifist_faction = yes } }
		if = {
			limit = { has_global_flag = cultural_overhaul_active }
			if = {
				limit = { has_global_flag = cultural_overhaul_funefork_active }
				random_list = {
					10 = {
						create_rebels = {
							authority = auth_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_pacifist }
						}
					}
					5 = {
						create_rebels = {
							authority = auth_strict_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_pacifist
								ethic = ethic_egalitarian
							}
						}
					}
					25 = {
						create_rebels = {
							authority = auth_dict_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_pacifist }
						}
					}
					25 = {
						create_rebels = {
							authority = auth_imperial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_pacifist
								ethic = ethic_authoritarian
							}
						}
					}
					25 = {
						create_rebels = {
							authority = auth_dictatorial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_pacifist }
						}
					}
					10 = {
						create_rebels = {
							authority = auth_oligarchic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_pacifist
							}
						}
					}
				}
			}
			else = {
				random_list = {
					15 = {
						create_rebels = {
							authority = auth_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_pacifist }
						}
					}
					5 = {
						create_rebels = {
							authority = auth_direct_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_pacifist
								ethic = ethic_egalitarian
							}
						}
					}
					30 = {
						create_rebels = {
							authority = auth_imperial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_pacifist
								ethic = ethic_authoritarian
							}
						}
					}
					30 = {
						create_rebels = {
							authority = auth_dictatorial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_pacifist }
						}
					}
					20 = {
						create_rebels = {
							authority = auth_oligarchic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_pacifist }
						}
					}
				}
			}
		}
		else = {
			random_list = {
				15 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_pacifist }
					}
				}
				20 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_pacifist }
					}
				}
				50 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_pacifist }
					}
				}
				15 = {
					create_rebels = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_pacifist }
					}
				}
			}
		}
		last_created_country = { set_country_flag = civwar_pac }
	}
	else_if = { # Materialists
		limit = { root.target = { is_materialist_faction = yes } }
		if = {
			limit = { has_global_flag = cultural_overhaul_active }
			if = {
				limit = { has_global_flag = cultural_overhaul_funefork_active }
				random_list = {
					15 = {
						create_rebels = {
							authority = auth_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_materialist }
						}
					}
					10 = {
						create_rebels = {
							authority = auth_strict_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_materialist
								ethic = ethic_egalitarian
							}
						}
					}
					25 = {
						create_rebels = {
							authority = auth_dict_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_materialist }
						}
					}
					15 = {
						create_rebels = {
							authority = auth_imperial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_materialist
								ethic = ethic_authoritarian
							}
						}
					}
					25 = {
						create_rebels = {
							authority = auth_dictatorial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_materialist }
						}
					}
					10 = {
						create_rebels = {
							authority = auth_oligarchic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_materialist }
						}
					}
				}
			}
			else = {
				random_list = {
					15 = {
						create_rebels = {
							authority = auth_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_materialist }
						}
					}
					10 = {
						create_rebels = {
							authority = auth_direct_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_materialist
								ethic = ethic_egalitarian
							}
						}
					}
					15 = {
						create_rebels = {
							authority = auth_imperial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_materialist
								ethic = ethic_authoritarian
							}
						}
					}
					30 = {
						create_rebels = {
							authority = auth_dictatorial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_materialist }
						}
					}
					30 = {
						create_rebels = {
							authority = auth_oligarchic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_materialist }
						}
					}
				}
			}
		}
		else = {
			random_list = {
				20 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_materialist }
					}
				}
				30 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_materialist }
					}
				}
				30 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_materialist }
					}
				}
				20 = {
					create_rebels = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_materialist }
					}
				}
			}
		}
		last_created_country = { set_country_flag = civwar_mat }
	}
	else_if = { # Spiritualists
		limit = { root.target = { is_spiritualist_faction = yes } }
		if = {
			limit = { has_global_flag = cultural_overhaul_active }
			if = {
				limit = { has_global_flag = cultural_overhaul_funefork_active }
				random_list = {
					10 = {
						create_rebels = {
							authority = auth_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_spiritualist }
						}
					}
					5 = {
						create_rebels = {
							authority = auth_strict_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_spiritualist
								ethic = ethic_egalitarian
							}
						}
					}
					25 = {
						create_rebels = {
							authority = auth_dict_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_spiritualist }
						}
					}
					25 = {
						create_rebels = {
							authority = auth_imperial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_spiritualist
								ethic = ethic_authoritarian
							}
						}
					}
					25 = {
						create_rebels = {
							authority = auth_dictatorial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_spiritualist }
						}
					}
					10 = {
						create_rebels = {
							authority = auth_oligarchic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_spiritualist }
						}
					}
				}
			}
			else = {
				random_list = {
					15 = {
						create_rebels = {
							authority = auth_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_spiritualist }
						}
					}
					5 = {
						create_rebels = {
							authority = auth_direct_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_spiritualist
								ethic = ethic_egalitarian
							}
						}
					}
					25 = {
						create_rebels = {
							authority = auth_imperial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_spiritualist
								ethic = ethic_authoritarian
							}
						}
					}
					30 = {
						create_rebels = {
							authority = auth_dictatorial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_spiritualist }
						}
					}
					25 = {
						create_rebels = {
							authority = auth_oligarchic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_spiritualist }
						}
					}
				}
			}
		}
		else = {
			random_list = {
				5 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_spiritualist }
					}
				}
				45 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_spiritualist }
					}
				}
				35 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_spiritualist }
					}
				}
				15 = {
					create_rebels = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_spiritualist }
					}
				}
			}
		}
		last_created_country = { set_country_flag = civwar_spi }
	}
	else_if = { # Xenophobes
		limit = { root.target = { is_xenophobe_faction = yes } }
		if = {
			limit = { has_global_flag = cultural_overhaul_active }
			if = {
				limit = { has_global_flag = cultural_overhaul_funefork_active }
				random_list = {
					10 = {
						create_rebels = {
							authority = auth_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_xenophobe  }
						}
					}
					5 = {
						create_rebels = {
							authority = auth_strict_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_xenophobe
								ethic = ethic_egalitarian
							}
						}
					}
					25 = {
						create_rebels = {
							authority = auth_dict_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_xenophobe  }
						}
					}
					25 = {
						create_rebels = {
							authority = auth_imperial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_xenophobe
								ethic = ethic_authoritarian
							}
						}
					}
					25 = {
						create_rebels = {
							authority = auth_dictatorial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_xenophobe  }
						}
					}
					10 = {
						create_rebels = {
							authority = auth_oligarchic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_xenophobe  }
						}
					}
				}
			}
			else = {
				random_list = {
					10 = {
						create_rebels = {
							authority = auth_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_xenophobe  }
						}
					}
					5 = {
						create_rebels = {
							authority = auth_direct_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_xenophobe
								ethic = ethic_egalitarian
							}
						}
					}
					30 = {
						create_rebels = {
							authority = auth_imperial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_xenophobe
								ethic = ethic_authoritarian
							}
						}
					}
					30 = {
						create_rebels = {
							authority = auth_dictatorial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_xenophobe  }
						}
					}
					25 = {
						create_rebels = {
							authority = auth_oligarchic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_xenophobe  }
						}
					}
				}
			}
		}
		else = {
			random_list = {
				5 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_xenophobe  }
					}
				}
				45 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_xenophobe  }
					}
				}
				35 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_xenophobe  }
					}
				}
				15 = {
					create_rebels = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_xenophobe  }
					}
				}
			}
		}
		last_created_country = { set_country_flag = civwar_phobe }
	}
	else_if = { # Xenophiles
		limit = { root.target = { is_xenophile_faction = yes } }
		if = {
			limit = { has_global_flag = cultural_overhaul_active }
			if = {
				limit = { has_global_flag = cultural_overhaul_funefork_active }
				random_list = {
					5 = {
						create_rebels = {
							authority = auth_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_xenophile }
						}
					}
					5 = {
						create_rebels = {
							authority = auth_strict_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_xenophile
								ethic = ethic_egalitarian
							}
						}
					}
					25 = {
						create_rebels = {
							authority = auth_dict_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_xenophile }
						}
					}
					25 = {
						create_rebels = {
							authority = auth_imperial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_xenophile
								ethic = ethic_authoritarian
							}
						}
					}
					25 = {
						create_rebels = {
							authority = auth_dictatorial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_xenophile }
						}
					}
					10 = {
						create_rebels = {
							authority = auth_oligarchic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_xenophile }
						}
					}
				}
			}
			else = {
				random_list = {
					15 = {
						create_rebels = {
							authority = auth_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_xenophile }
						}
					}
					5 = {
						create_rebels = {
							authority = auth_direct_democratic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_xenophile
								ethic = ethic_egalitarian
							}
						}
					}
					25 = {
						create_rebels = {
							authority = auth_imperial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = {
								ethic = ethic_fanatic_xenophile
								ethic = ethic_authoritarian
							}
						}
					}
					30 = {
						create_rebels = {
							authority = auth_dictatorial
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_xenophile }
						}
					}
					25 = {
						create_rebels = {
							authority = auth_oligarchic
							inline_script = { script = civil_war_country_creation/gen_fac_rebels }
							ethos = { ethic = ethic_fanatic_xenophile }
						}
					}
				}
			}
		}
		else = {
			random_list = {
				25 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_xenophile }
					}
				}
				30 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_xenophile }
					}
				}
				30 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_xenophile }
					}
				}
				15 = {
					create_rebels = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_xenophile }
					}
				}
			}
		}
		last_created_country = { set_country_flag = civwar_phile }
	}
	else_if = { # Socialists
		limit = { root.target = { is_socialist_faction = yes } }
		if = {
			limit = { has_global_flag = cultural_overhaul_funefork_active }
			random_list = {
				10 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_socialism }
					}
				}
				10 = {
					create_rebels = {
						authority = auth_strict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = {
							ethic = ethic_fanatic_socialism
							ethic = ethic_egalitarian
						}
					}
				}
				20 = {
					create_rebels = {
						authority = auth_dict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_socialism }
					}
				}
				15 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = {
							ethic = ethic_fanatic_socialism
							ethic = ethic_authoritarian
						}
					}
				}
				25 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_socialism }
					}
				}
				20 = {
					create_rebels = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_socialism }
					}
				}
			}
		}
		else = {
			random_list = {
				10 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_socialism }
					}
				}
				5 = {
					create_rebels = {
						authority = auth_direct_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = {
							ethic = ethic_fanatic_socialism
							ethic = ethic_egalitarian
						}
					}
				}
				35 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = {
							ethic = ethic_fanatic_socialism
							ethic = ethic_authoritarian
						}
					}
				}
				35 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_socialism }
					}
				}
				15 = {
					create_rebels = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_socialism }
					}
				}
			}
		}
		last_created_country = { set_country_flag = civwar_soc }
	}
	else_if = { # Capitalists
		limit = { root.target = { is_capitalism_faction = yes } }
		if = {
			limit = { has_global_flag = cultural_overhaul_funefork_active }
			random_list = {
				5 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_capitalism }
					}
				}
				5 = {
					create_rebels = {
						authority = auth_strict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = {
							ethic = ethic_fanatic_capitalism
							ethic = ethic_egalitarian
						}
					}
				}
				10 = {
					create_rebels = {
						authority = auth_dict_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_capitalism }
					}
				}
				10 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = {
							ethic = ethic_fanatic_capitalism
							ethic = ethic_authoritarian
						}
					}
				}
				25 = {
					create_rebels = {
						authority = auth_corporate_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = {
							ethic = ethic_fanatic_capitalism
							ethic = ethic_authoritarian
						}
					}
				}
				20 = {
					create_rebels = {
						authority = auth_corporate
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_capitalism }
					}
				}
				10 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_capitalism }
					}
				}
				15 = {
					create_rebels = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_capitalism }
					}
				}
			}
		}
		else = {
			random_list = {
				5 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_capitalism }
					}
				}
				5 = {
					create_rebels = {
						authority = auth_direct_democratic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = {
							ethic = ethic_fanatic_capitalism
							ethic = ethic_egalitarian
						}
					}
				}
				10 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = {
							ethic = ethic_fanatic_capitalism
							ethic = ethic_authoritarian
						}
					}
				}
				40 = {
					create_rebels = {
						authority = auth_corporate
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_capitalism }
					}
				}
				15 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_capitalism }
					}
				}
				25 = {
					create_rebels = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_fac_rebels }
						ethos = { ethic = ethic_fanatic_capitalism }
					}
				}
			}
		}
		last_created_country = { set_country_flag = civwar_cap }
	}
	else_if = { # Industrialists
		limit = { root.target = { is_industrial_faction = yes } }
		random_list = {
			10 = {
				create_rebels = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = { ethic = ethic_fanatic_industrial }
				}
			}
			5 = {
				create_rebels = {
					authority = auth_direct_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = {
						ethic = ethic_fanatic_industrial
						ethic = ethic_egalitarian
					}
				}
			}
			35 = {
				create_rebels = {
					authority = auth_imperial
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = {
						ethic = ethic_fanatic_industrial
						ethic = ethic_authoritarian
					}
				}
			}
			35 = {
				create_rebels = {
					authority = auth_dictatorial
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = { ethic = ethic_fanatic_industrial }
				}
			}
			15 = {
				create_rebels = {
					authority = auth_oligarchic
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = { ethic = ethic_fanatic_industrial }
				}
			}
		}
		last_created_country = { set_country_flag = civwar_indus }
	}
	else_if = { # Ecologists
		limit = { root.target = { is_ecologist_faction = yes } }
		random_list = {
			10 = {
				create_rebels = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = { ethic = ethic_fanatic_green }
				}
			}
			10 = {
				create_rebels = {
					authority = auth_direct_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = {
						ethic = ethic_fanatic_green
						ethic = ethic_egalitarian
					}
				}
			}
			20 = {
				create_rebels = {
					authority = auth_imperial
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = {
						ethic = ethic_fanatic_green
						ethic = ethic_authoritarian
					}
				}
			}
			35 = {
				create_rebels = {
					authority = auth_dictatorial
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = { ethic = ethic_fanatic_green }
				}
			}
			25 = {
				create_rebels = {
					authority = auth_oligarchic
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = { ethic = ethic_fanatic_green }
				}
			}
		}
		last_created_country = { set_country_flag = civwar_eco }
	}
	else_if = { # Elitists
		limit = { root.target = { is_elitist_faction = yes } }
		random_list = {
			5 = {
				create_rebels = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = { ethic = ethic_fanatic_elitist }
				}
			}
			5 = {
				create_rebels = {
					authority = auth_direct_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = {
						ethic = ethic_fanatic_elitist
						ethic = ethic_egalitarian
					}
				}
			}
			35 = {
				create_rebels = {
					authority = auth_imperial
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = {
						ethic = ethic_fanatic_elitist
						ethic = ethic_authoritarian
					}
				}
			}
			35 = {
				create_rebels = {
					authority = auth_dictatorial
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = { ethic = ethic_fanatic_elitist }
				}
			}
			20 = {
				create_rebels = {
					authority = auth_oligarchic
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = { ethic = ethic_fanatic_elitist }
				}
			}
		}
		last_created_country = { set_country_flag = civwar_elite }
	}
	else_if = { # Pluralists
		limit = { root.target = { is_pluralist_faction = yes } }
		random_list = {
			50 = {
				create_rebels = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = { ethic = ethic_fanatic_pluralist }
				}
			}
			50 = {
				create_rebels = {
					authority = auth_direct_democratic
					inline_script = { script = civil_war_country_creation/gen_fac_rebels }
					ethos = {
						ethic = ethic_fanatic_pluralist
						ethic = ethic_egalitarian
					}
				}
			}
		}
		last_created_country = { set_country_flag = civwar_plur }
	}
}

get_gen_plan_rebels = {

	get_planetary_reb_number = yes

	if = {
		limit = { has_global_flag = cultural_overhaul_active }
		if = {
			limit = { has_global_flag = cultural_overhaul_funefork_active }
			random_list = {
				15 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_plan_rebels }
					}
				}
				5 = {
					create_rebels = {
						authority = auth_strict_democratic
						inline_script = { script = civil_war_country_creation/gen_plan_rebels }
						ethos = { ethic = ethic_egalitarian }
					}
				}
				25 = {
					create_rebels = {
						authority = auth_dict_democratic
						inline_script = { script = civil_war_country_creation/gen_plan_rebels }
					}
				}
				30 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_plan_rebels }
					}
				}
				10 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_plan_rebels }
						ethos = { ethic = ethic_authoritarian }
					}
				}
				15 = {
					create_rebels = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_plan_rebels }
					}
				}
			}
		}
		else = {
			random_list = {
				15 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_plan_rebels }
						ethos = { ethic = ethic_egalitarian }

					}
				}
				5 = {
					create_rebels = {
						authority = auth_direct_democratic
						inline_script = { script = civil_war_country_creation/gen_plan_rebels }
						ethos = { ethic = ethic_fanatic_egalitarian }
					}
				}
				35 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_plan_rebels }
					}
				}
				20 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_plan_rebels }
						ethos = { ethic = ethic_authoritarian }
					}
				}
				25 = {
					create_rebels = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_plan_rebels }
					}
				}
			}
		}
	}
	else = {
		random_list = {
			30 = {
				create_rebels = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_plan_rebels }
				}
			}
			25 = {
				create_rebels = {
					authority = auth_oligarchic
					inline_script = { script = civil_war_country_creation/gen_plan_rebels }
					ethos = random
				}
			}
			30 = {
				create_rebels = {
					authority = auth_dictatorial
					inline_script = { script = civil_war_country_creation/gen_plan_rebels }
				}
			}
			15 = {
				create_rebels = {
					authority = auth_imperial
					inline_script = { script = civil_war_country_creation/gen_plan_rebels }
					ethos = { ethic = ethic_authoritarian }
				}
			}
		}
	}
}

get_gen_sec_rebels = {

	if = {
		limit = { has_global_flag = cultural_overhaul_active }
		if = {
			limit = { has_global_flag = cultural_overhaul_funefork_active }
			random_list = {
				15 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_sec_rebels }
					}
				}
				5 = {
					create_rebels = {
						authority = auth_strict_democratic
						inline_script = { script = civil_war_country_creation/gen_sec_rebels }
						ethos = { ethic = ethic_egalitarian }
					}
				}
				25 = {
					create_rebels = {
						authority = auth_dict_democratic
						inline_script = { script = civil_war_country_creation/gen_sec_rebels }
					}
				}
				30 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_sec_rebels }
					}
				}
				10 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_sec_rebels }
						ethos = { ethic = ethic_authoritarian }
					}
				}
				15 = {
					create_rebels = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_sec_rebels }
					}
				}
			}
		}
		else = {
			random_list = {

				15 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/gen_sec_rebels }
					}
				}
				5 = {
					create_rebels = {
						authority = auth_direct_democratic
						inline_script = { script = civil_war_country_creation/gen_sec_rebels }
						ethos = { ethic = ethic_egalitarian }
					}
				}
				35 = {
					create_rebels = {
						authority = auth_dictatorial
						inline_script = { script = civil_war_country_creation/gen_sec_rebels }
					}
				}
				20 = {
					create_rebels = {
						authority = auth_imperial
						inline_script = { script = civil_war_country_creation/gen_sec_rebels }
						ethos = { ethic = ethic_authoritarian }
					}
				}
				25 = {
					create_rebels = {
						authority = auth_oligarchic
						inline_script = { script = civil_war_country_creation/gen_sec_rebels }
					}
				}
			}
		}
	}
	else = {
		random_list = {
			30 = {
				create_rebels = {
					authority = auth_democratic
					inline_script = { script = civil_war_country_creation/gen_sec_rebels }
				}
			}
			25 = {
				create_rebels = {
					authority = auth_oligarchic
					inline_script = { script = civil_war_country_creation/gen_sec_rebels }
				}
			}
			30 = {
				create_rebels = {
					authority = auth_dictatorial
					inline_script = { script = civil_war_country_creation/gen_sec_rebels }
				}
			}
			15 = {
				create_rebels = {
					authority = auth_imperial
					inline_script = { script = civil_war_country_creation/gen_sec_rebels }
					ethos = { ethic = ethic_authoritarian }
				}
			}
		}
	}
}

get_nat_plan_rebels = {

	get_planetary_reb_number = yes

	random_country = {
		limit = {
			has_country_flag = nat_motherland_sit_@root
			has_country_flag = nat_motherland_sit_@root.owner
		}
		save_event_target_as = nat_motherland_model
		set_country_flag = nat_planet_@prev
		if = {
			limit = { is_exile_country = yes }
			prev.owner = { set_country_flag = motherland_is_exile }
		}
	}

	if = { # New country has the same flag and name if it is a restoration
		limit = {
			event_target:nat_motherland_model = { is_exile_country = yes }
			NOT = {
				any_playable_country = {
					has_country_flag = exile_link_@event_target:nat_motherland_model
				}
			}
		}
		create_rebels = {
			name = event_target:nat_motherland_model
			species = event_target:nat_motherland_model
			authority = event_target:nat_motherland_model
			ethos = event_target:nat_motherland_model
			origin = origin_nationalist_rebellion
			civics = event_target:nat_motherland_model
			# flag = event_target:nat_motherland_model # Was causing things to break weirdly, try again in future
			flag = random
			effect = {
				set_country_flag = nat_country
				set_country_flag = exile_restored_country
				set_country_flag = exile_link_@event_target:nat_motherland_model
				created_civwar_rebel_country_effect = yes
			}
		}
		event_target:nat_motherland_model = { set_country_flag = exile_link_@event_target:civwar_rebels }
	}
	else = {
		create_rebels = {
			name = random
			species = event_target:nat_motherland_model
			authority = event_target:nat_motherland_model
			ethos = event_target:nat_motherland_model
			origin = origin_nationalist_rebellion
			civics = event_target:nat_motherland_model
			flag = random
			effect = {
				set_country_flag = nat_country
				created_civwar_rebel_country_effect = yes
			}
		}
	}

	last_created_country = { set_country_flag = nat_civwar }
}

get_plan_slave_rebels = {

	save_event_target_as = civil_war_planet
	save_event_target_as = civil_war_slave_leader_planet
	set_planet_flag = plan_slave_revolt
	set_timed_planet_flag = { flag = recent_slave_rebellion years = 5 }

	get_planetary_slave_reb_number = yes

	every_owned_species = {
		limit = {
			any_species_pop = {
				is_enslaved = yes
				planet = { is_same_value = event_target:civil_war_planet }
			}
		}
		set_variable = { which = species_pop_count value = 0 }
		every_species_pop = {
			limit = {
				is_enslaved = yes
				planet = { is_same_value = event_target:civil_war_planet }
			}
			prev = { change_variable = { which = species_pop_count value = 1 } }
		}
	}

	ordered_owned_species = {
		limit = { is_variable_set = species_pop_count }
		position = 0
		order_by = species_pop_count
		save_event_target_as = civwar_species
	}

	if = {
		limit = { has_global_flag = cultural_overhaul_active }
		if = {
			limit = { has_global_flag = cultural_overhaul_funefork_active }
			random_list = {
				50 = {
					create_rebels = {
						authority = auth_strict_democratic
						inline_script = { script = civil_war_country_creation/slave_rebels }
						ethos = { 
							ethic = ethic_fanatic_militarist
							ethic = ethic_fanatic_egalitarian
						}
					}
				}
				45 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/slave_rebels }
						ethos = { 
							ethic = ethic_fanatic_militarist
							ethic = ethic_fanatic_egalitarian
						}
					}
				}
				5 = {
					create_rebels = {
						authority = auth_dict_democratic
						inline_script = { script = civil_war_country_creation/slave_rebels }
						ethos = { 
							ethic = ethic_fanatic_militarist
							ethic = ethic_egalitarian
						}
					}
				}
			}
		}
		else = {
			random_list = {
				50 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/slave_rebels }
						ethos = { 
							ethic = ethic_militarist
							ethic = ethic_fanatic_egalitarian
						}
					}
				}
				50 = {
					create_rebels = {
						authority = auth_direct_democratic
						inline_script = { script = civil_war_country_creation/slave_rebels }
						ethos = {
							ethic = ethic_militarist
							ethic = ethic_fanatic_egalitarian
						}
					}
				}
			}
		}
	}
	else = {
		create_rebels = {
			authority = auth_democratic
			inline_script = { script = civil_war_country_creation/slave_rebels }
			ethos = {
				ethic = ethic_militarist
				ethic = ethic_fanatic_egalitarian
			}
		}
	}

	every_owned_species = {
		limit = { is_variable_set = species_pop_count }
		clear_variable = species_pop_count
	}
}

get_sec_slave_rebels = {

	save_event_target_as = civil_war_planet
	set_planet_flag = sec_slave_revolt
	set_timed_planet_flag = { flag = recent_sector_slave_rebellion years = 5 }

	sector = {
		save_event_target_as = sector_name_local
		set_sector_flag = sec_slave_revolt_@prev
		every_owned_planet = {
			every_owned_species = {
				limit = {
					any_species_pop = {
						is_enslaved = yes
						planet = { is_same_value = prevprevprev }
					}
				}
				set_variable = { which = species_pop_count value = 0 }
				every_species_pop = {
					limit = {
						is_enslaved = yes
						planet = { is_same_value = prevprevprev }
					}
					prev = { change_variable = { which = species_pop_count value = 1 } }
				}
			}
		}

		owner = {
			ordered_owned_species = {
				limit = { is_variable_set = species_pop_count }
				position = 0
				order_by = species_pop_count
				save_event_target_as = civwar_species
			}
			random_owned_planet = {
				limit = { any_owned_species = { is_same_species = event_target:civwar_species } }
				save_event_target_as = civil_war_slave_leader_planet
			}
		}
	}

	create_sector_name_leader = yes

	get_sectoral_slave_reb_number = yes

	if = {
		limit = { has_global_flag = cultural_overhaul_active }
		if = {
			limit = { has_global_flag = cultural_overhaul_funefork_active }
			random_list = {
				50 = {
					create_rebels = {
						authority = auth_strict_democratic
						inline_script = { script = civil_war_country_creation/slave_rebels }
						ethos = { 
							ethic = ethic_fanatic_militarist
							ethic = ethic_fanatic_egalitarian
						}
					}
				}
				40 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/slave_rebels }
						ethos = { 
							ethic = ethic_fanatic_militarist
							ethic = ethic_fanatic_egalitarian
						}
					}
				}
				5 = {
					create_rebels = {
						authority = auth_dict_democratic
						inline_script = { script = civil_war_country_creation/slave_rebels }
						ethos = { 
							ethic = ethic_fanatic_militarist
							ethic = ethic_egalitarian
						}
					}
				}
			}
		}
		else = {
			random_list = {
				50 = {
					create_rebels = {
						authority = auth_democratic
						inline_script = { script = civil_war_country_creation/slave_rebels }
						ethos = { 
							ethic = ethic_militarist
							ethic = ethic_fanatic_egalitarian
						}
					}
				}
				50 = {
					create_rebels = {
						authority = auth_direct_democratic
						inline_script = { script = civil_war_country_creation/slave_rebels }
						ethos = {
							ethic = ethic_fanatic_militarist
							ethic = ethic_fanatic_egalitarian
						}
					}
				}
			}
		}
	}
	else = {
		create_rebels = {
			authority = auth_democratic
			inline_script = { script = civil_war_country_creation/slave_rebels }
			ethos = {
				ethic = ethic_militarist
				ethic = ethic_fanatic_egalitarian
			}
		}
	}

	every_owned_species = {
		limit = { is_variable_set = species_pop_count }
		clear_variable = species_pop_count
	}
}

#####################
# Leader Effects

setup_rebel_leader_effect = {
	if = {
		limit = { leader_class = official }
		set_leader_flag = civil_war_leader_official
	}
	else_if = {
		limit = { leader_class = scientist }
		set_leader_flag = civil_war_leader_scientist
	}
	else_if = {
		limit = { leader_class = commander }
		set_leader_flag = civil_war_leader_commander
		if = { # Fleet Commander revolts
			limit = {
				owner = {
					any_owned_fleet = {
						exists = leader
						leader = { is_same_value = prevprevprev }
					}
				}
			}
			fleet = { set_fleet_flag = civil_war_fleet }
		}
	}
	species = { save_event_target_as = civwar_species }
	save_event_target_as = rebel_leader
}

get_civil_war_leader = {

	if = {
		limit = { is_standard_faction_country = yes }
		if = {
			limit = { event_target:civwar_rebels = { has_country_flag = civwar_auth } }
			event_target:civwar_originator = {
				if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_authoritarian
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_authoritarian
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_authoritarian
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_authoritarian
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_authoritarian
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_authoritarian
						}
						setup_rebel_leader_effect = yes
					}
				}
				else = {
					event_target:civwar_rebels = {
						random_owned_pop = { species = { save_event_target_as = civwar_species } }
						create_civil_war_leader_with_ethic = { ETHIC = authoritarian }
					}
				}
			}
		}
		else_if = {
			limit = { event_target:civwar_rebels = { has_country_flag = civwar_egal } }
			event_target:civwar_originator = {
				if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_egalitarian
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_egalitarian
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_egalitarian
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_egalitarian
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_egalitarian
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_egalitarian
						}
						setup_rebel_leader_effect = yes
					}
				}
				else = {
					event_target:civwar_rebels = {
						random_owned_pop = { species = { save_event_target_as = civwar_species } }
						create_civil_war_leader_with_ethic = { ETHIC = egalitarian }
					}
				}
			}
		}
		else_if = {
			limit = { event_target:civwar_rebels = { has_country_flag = civwar_mil } }
			event_target:civwar_originator = {
				if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_militarist
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_militarist
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_militarist
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_militarist
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_militarist
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_militarist
						}
						setup_rebel_leader_effect = yes
					}
				}
				else = {
					event_target:civwar_rebels = {
						random_owned_pop = { species = { save_event_target_as = civwar_species } }
						create_civil_war_leader_with_ethic = { ETHIC = militarist }
					}
				}
			}
		}
		else_if = {
			limit = { event_target:civwar_rebels = { has_country_flag = civwar_pac } }
			event_target:civwar_originator = {
				if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_pacifist
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_pacifist
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_pacifist
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_pacifist
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_pacifist
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_pacifist
						}
						setup_rebel_leader_effect = yes
					}
				}
				else = {
					event_target:civwar_rebels = {
						random_owned_pop = { species = { save_event_target_as = civwar_species } }
						create_civil_war_leader_with_ethic = { ETHIC = pacifist }
					}
				}
			}
		}
		else_if = {
			limit = { event_target:civwar_rebels = { has_country_flag = civwar_mat } }
			event_target:civwar_originator = {
				if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_materialist
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_materialist
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_materialist
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_materialist
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_materialist
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_materialist
						}
						setup_rebel_leader_effect = yes
					}
				}
				else = {
					event_target:civwar_rebels = {
						random_owned_pop = { species = { save_event_target_as = civwar_species } }
						create_civil_war_leader_with_ethic = { ETHIC = materialist }
					}
				}
			}
		}
		else_if = {
			limit = { event_target:civwar_rebels = { has_country_flag = civwar_spi } }
			event_target:civwar_originator = {
				if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_spiritualist
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_spiritualist
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_spiritualist
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_spiritualist
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_spiritualist
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_spiritualist
						}
						setup_rebel_leader_effect = yes
					}
				}
				else = {
					event_target:civwar_rebels = {
						random_owned_pop = { species = { save_event_target_as = civwar_species } }
						create_civil_war_leader_with_ethic = { ETHIC = spiritualist }
					}
				}
			}
		}
		else_if = {
			limit = { event_target:civwar_rebels = { has_country_flag = civwar_phobe } }
			event_target:civwar_originator = {
				if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_xenophobe
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_xenophobe
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_xenophobe
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_xenophobe
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_xenophobe
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_xenophobe
						}
						setup_rebel_leader_effect = yes
					}
				}
				else = {
					event_target:civwar_rebels = {
						random_owned_pop = { species = { save_event_target_as = civwar_species } }
						create_civil_war_leader_with_ethic = { ETHIC = xenophobe }
					}
				}
			}
		}
		else_if = {
			limit = { event_target:civwar_rebels = { has_country_flag = civwar_phile } }
			event_target:civwar_originator = {
				if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_xenophile
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_xenophile
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_xenophile
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_xenophile
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_xenophile
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_xenophile
						}
						setup_rebel_leader_effect = yes
					}
				}
				else = {
					event_target:civwar_rebels = {
						random_owned_pop = { species = { save_event_target_as = civwar_species } }
						create_civil_war_leader_with_ethic = { ETHIC = xenophile }
					}
				}
			}
		}
		else_if = {
			limit = { event_target:civwar_rebels = { has_country_flag = civwar_soc } }
			event_target:civwar_originator = {
				if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_socialism
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_socialism
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_socialism
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_socialism
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_socialism
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_socialism
						}
						setup_rebel_leader_effect = yes
					}
				}
				else = {
					event_target:civwar_rebels = {
						random_owned_pop = { species = { save_event_target_as = civwar_species } }
						create_civil_war_leader_with_ethic = { ETHIC = socialism }
					}
				}
			}
		}
		else_if = {
			limit = { event_target:civwar_rebels = { has_country_flag = civwar_cap } }
			event_target:civwar_originator = {
				if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_capitalism
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_capitalism
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_capitalism
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_capitalism
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_capitalism
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_capitalism
						}
						setup_rebel_leader_effect = yes
					}
				}
				else = {
					event_target:civwar_rebels = {
						random_owned_pop = { species = { save_event_target_as = civwar_species } }
						create_civil_war_leader_with_ethic = { ETHIC = capitalism }
					}
				}
			}
		}
		else_if = {
			limit = { event_target:civwar_rebels = { has_country_flag = civwar_indus } }
			event_target:civwar_originator = {
				if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_industrial
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_industrial
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_industrial
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_socialism
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_industrial
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_industrial
						}
						setup_rebel_leader_effect = yes
					}
				}
				else = {
					event_target:civwar_rebels = {
						random_owned_pop = { species = { save_event_target_as = civwar_species } }
						create_civil_war_leader_with_ethic = { ETHIC = industrial }
					}
				}
			}
		}
		else_if = {
			limit = { event_target:civwar_rebels = { has_country_flag = civwar_eco } }
			event_target:civwar_originator = {
				if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_green
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_green
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_green
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_green
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_green
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_green
						}
						setup_rebel_leader_effect = yes
					}
				}
				else = {
					event_target:civwar_rebels = {
						random_owned_pop = { species = { save_event_target_as = civwar_species } }
						create_civil_war_leader_with_ethic = { ETHIC = green }
					}
				}
			}
		}
		else_if = {
			limit = { event_target:civwar_rebels = { has_country_flag = civwar_elite } }
			event_target:civwar_originator = {
				if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_elitist
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_elitist
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_elitist
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_elitist
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_elitist
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_elitist
						}
						setup_rebel_leader_effect = yes
					}
				}
				else = {
					event_target:civwar_rebels = {
						random_owned_pop = { species = { save_event_target_as = civwar_species } }
						create_civil_war_leader_with_ethic = { ETHIC = elitist }
					}
				}
			}
		}
		else_if = {
			limit = { event_target:civwar_rebels = { has_country_flag = civwar_plur } }
			event_target:civwar_originator = {
				if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_pluralist
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_pluralist
							background_planet = {
								is_capital = yes
								is_owned_by = event_target:civwar_rebels
							}
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_pluralist
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_pluralist
							background_planet = { is_owned_by = event_target:civwar_rebels }
						}
						setup_rebel_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						any_owned_leader = {
							can_be_traitor = yes
							has_ethic = ethic_pluralist
						}
					}
					random_owned_leader = {
						limit = {
							can_be_traitor = yes
							has_ethic = ethic_pluralist
						}
						setup_rebel_leader_effect = yes
					}
				}
				else = {
					event_target:civwar_rebels = {
						random_owned_pop = { species = { save_event_target_as = civwar_species } }
						create_civil_war_leader_with_ethic = { ETHIC = pluralist }
					}
				}
			}
		}
		event_target:rebel_leader = {
			if = {
				limit = { NOT = { is_owned_by = event_target:civwar_rebels } }
				set_owner = event_target:civwar_rebels
			}
			if = {
				limit = { NOT = { has_leader_flag = new_civwar_ruler } }
				set_leader_flag = leader_defected
			}
		}
		set_leader = event_target:rebel_leader # Needs to be after the above with the leader flags
	}
	else_if = {
		limit = { has_origin = origin_nationalist_rebellion }
		random_owned_planet = {
			limit = { num_pops > 0 }
			save_event_target_as = leader_homeworld
		}
		create_leader = {
			class = random_ruler
			species = root.species
			name = random
			skill = 5
			background_planet = event_target:leader_homeworld
			effect = {
				species = { save_event_target_as = civwar_species }
				set_leader_flag = new_civwar_ruler
				if = {
					limit = { leader_class = official }
					add_trait_no_notify = trait_ruler_deep_connections
				}
			}
		}
	}
	else_if = {
		limit = { event_target:civwar_originator = { has_country_flag = heir_mother_country } }
		set_leader = event_target:heir_civil_war_dummy_country.ruler
		event_target:heir_civil_war_dummy_country.ruler = {
			set_leader_flag = leader_defected
			if = {
				limit = { NOT = { is_owned_by = event_target:civwar_rebels } }
				set_owner = event_target:civwar_rebels
			}
		}
		event_target:heir_civil_war_dummy_country = { destroy_country = yes }
	}
	else_if = {
		limit = { event_target:civwar_originator.ruler = { has_leader_flag = sep_won_election } }
		#clone_leader = {
		#	target = event_target:civwar_originator.ruler
		#	effect = {
		#		set_leader_flag = civil_war_ruler_secession
		#		save_event_target_as = secession_leader
		#	}
		#}
		#set_leader = event_target:secession_leader
		#event_target:civwar_originator.ruler = {
		#	set_leader_flag = dead_ruler
		#	kill_leader = { show_notification = no }
		#}
		set_leader = event_target:civwar_originator.ruler
		event_target:civwar_originator.ruler = {
			set_owner = event_target:civwar_rebels
		}

	}
	else_if = {
		limit = { exists = event_target:crisis_sector_leader }
		set_leader = event_target:crisis_sector_leader
		event_target:crisis_sector_leader = {
			if = {
				limit = { NOT = { is_owned_by = event_target:civwar_rebels } }
				set_owner = event_target:civwar_rebels
			}
		}
	}
	else = {
		random_owned_pop = {
			limit = { has_pop_flag = sep_leader_species }
			species = { save_event_target_as = civwar_species }
			planet = { save_event_target_as = leader_homeworld }
		}
		create_leader = {
			class = random_ruler
			species = event_target:civwar_species
			name = random
			skill = 5
			background_planet = event_target:leader_homeworld
			effect = {
				save_event_target_as = new_rebel_leader
				set_leader_flag = new_civwar_ruler
				if = {
					limit = { leader_class = official }
					add_trait_no_notify = trait_ruler_deep_connections
				}
			}
		}
		set_leader = event_target:new_rebel_leader
	}
}

get_civil_war_leader_dispute = {
	if = { # Fleet Commander revolts
		limit = {
			event_target:dispute_party = { exists = leader }
			owner = {
				any_owned_fleet = {
					exists = leader
					leader = { is_same_value = event_target:dispute_party.leader }
				}
			}
		}
		event_target:dispute_party.leader = {
			species = { save_event_target_as = civwar_species }
			fleet = { set_fleet_flag = civil_war_fleet }
		}
	}
}

get_homeworld_ethic_leader = {
	random_owned_leader = {
		limit = {
			has_ethic = ethic_$ETHIC$
			OR = {
				background_planet = { is_same_value = event_target:civil_war_planet }
				AND = {
					event_target:civil_war_planet = { has_planet_flag = sep_sector_rebellion }
					exists = background_planet.sector
					background_planet.sector = { is_same_value = event_target:civil_war_planet.sector }
				}
			}
		}
		save_event_target_as = new_rebel_leader
	}
}

get_leader_homeworld = {
	if = {
		limit = { any_owned_planet = { colony_age >= 10 } }
		random_owned_planet = {
			limit = { colony_age >= 10 }
			save_event_target_as = leader_homeworld
		}
	}
	else_if = {
		limit = { exists = event_target:civwar_originator }
		event_target:civwar_originator = {
			random_owned_planet = {
				limit = { colony_age >= 10 }
				save_event_target_as = leader_homeworld
			}
		}
	}
}

create_planetary_leader_with_ethic = {
	create_leader = {
		class = random_ruler
		species = event_target:civwar_species
		name = random
		skill = 5
		background_ethic = ethic_$ETHIC$
		background_planet = event_target:civil_war_planet
		effect = {
			set_leader_flag = new_civwar_ruler
			save_event_target_as = new_rebel_leader
			if = {
				limit = { leader_class = official }
				add_trait_no_notify = trait_ruler_deep_connections
			}
		}
	}
}

create_civil_war_leader_with_ethic = {

	get_leader_homeworld = yes

	create_leader = {
		class = random_ruler
		species = event_target:civwar_species
		name = random
		skill = 5
		background_ethic = ethic_$ETHIC$
		background_planet = event_target:leader_homeworld
		effect = {
			set_leader_flag = new_civwar_ruler
			setup_rebel_leader_effect = yes
			if = {
				limit = { leader_class = official }
				add_trait_no_notify = trait_ruler_deep_connections
			}
		}
	}
}

# Create dummy party name leader
create_party_name_leader = {
	create_leader = {
		class = random_ruler
		event_leader = yes
		hide_leader = yes
		species = owner_main_species
		name = random
		effect = {
			set_name = {
				key = dummy_party_leader
				variable_string = "\\[event_target:civwar_party.GetName]"
			}
			set_leader_flag = dummy_party_leader_@event_target:civwar_party
			if = {
				limit = { exists = event_target:civil_war_planet }
				set_leader_flag = dummy_party_leader_@event_target:civil_war_planet
			}
			set_leader_flag = dummy_leader
			save_event_target_as = civwar_party_name_leader
		}
	}
}

# Create dummy sector name leader
create_sector_name_leader = {
	owner = {
		create_leader = {
			class = random_ruler
			event_leader = yes
			hide_leader = yes
			species = owner_main_species
			name = random
			effect = {
				set_name = {
					key = dummy_sector_leader
					variable_string = "\\[event_target:sector_name_local.GetName]"
				}
				set_leader_flag = dummy_leader
				set_leader_flag = dummy_sector_leader
				set_leader_flag = dummy_sector_leader_@event_target:civil_war_planet
				save_event_target_as = test_dummy_leader
			}
		}
		last_created_leader = { leader_event = { id = civleader.1000 days = 180 } }
	}
}

# Get dummy party name leader
get_sector_name_leader = {
	random_owned_leader = {
		limit = { has_leader_flag = dummy_sector_leader_@event_target:civwar_rebels.capital_scope }
		save_event_target_as = sector_name_leader
	}
}

# Create dummy party name leader
kill_sector_name_leader = {
	if = {
		limit = { any_owned_leader = { has_leader_flag = dummy_sector_leader_@FromFrom } }
		random_owned_leader = {
			limit = { has_leader_flag = dummy_sector_leader_@FromFrom }
			kill_leader = { show_notification = no }
		}
	}
}

kill_party_name_leader = {
	if = {
		limit = { any_owned_leader = { has_leader_flag = dummy_party_leader_@FromFrom } }
		random_owned_leader = {
			limit = { has_leader_flag = dummy_party_leader_@FromFrom }
			kill_leader = { show_notification = no }
		}
	}
}

#####################
# Get War Numbers

get_civil_war_number = {
	if = {
		limit = {  NOT = { is_variable_set = civwar_number } }
		set_variable = { which = civwar_number value = 1 }
	}
	else = {
		change_variable = { which = civwar_number value = 1 }
	}
}

get_planetary_reb_number = {
	if = {
		limit = {  NOT = { is_variable_set = reb_number } }
		set_variable = { which = reb_number value = 1 }
	}
	else = {
		change_variable = { which = reb_number value = 1 }
	}
}

get_sectoral_reb_number = {
	if = {
		limit = { NOT = { is_variable_set = sec_reb_number } }
		set_variable = { which = sec_reb_number value = 1 }
	}
	else = {
		change_variable = { which = sec_reb_number value = 1 }
	}
}

get_planetary_slave_reb_number = {
	if = {
		limit = {  NOT = { is_variable_set = slave_reb_number } }
		set_variable = { which = slave_reb_number value = 1 }
	}
	else = {
		change_variable = { which = slave_reb_number value = 1 }
	}
}

get_sectoral_slave_reb_number = {
	if = {
		limit = { NOT = { is_variable_set = sec_slave_reb_number } }
		set_variable = { which = sec_slave_reb_number value = 1 }
	}
	else = {
		change_variable = { which = sec_slave_reb_number value = 1 }
	}
}

get_secession_country_info = {
	if = {
		limit = { event_target:civwar_originator = { has_secession_country_flag = no } }
		event_target:global_event_country = {
			if = {
				limit = { NOT = { is_variable_set = secession_country_count } }
				set_variable = { which = secession_country_count value = 1 }
			}
			else = {
				change_variable = { which = secession_country_count value = 1 }
			}
		}
		set_secession_country_flags = yes
	}
	else = {
		event_target:civwar_originator = { find_secession_number_flag = yes }
	}
	event_target:civwar_originator = {

		set_country_flag = secession_@event_target:civwar_rebels
	}
}

set_secession_country_flags = {
	if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 1 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_1_flag
			save_global_event_target_as = secession_country_1
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_1_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_1_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 2 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_2_flag
			save_global_event_target_as = secession_country_2
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_2_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_2_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 3 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_3_flag
			save_global_event_target_as = secession_country_3
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_3_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_3_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 4 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_4_flag
			save_global_event_target_as = secession_country_4
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_4_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_4_traitor }
			}
		}
	}
	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 5 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_5_flag
			save_global_event_target_as = secession_country_5
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_5_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_5_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 6 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_6_flag
			save_global_event_target_as = secession_country_6
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_6_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_6_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 7 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_7_flag
			save_global_event_target_as = secession_country_7
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_7_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_7_traitor }
			}
		}
	}
	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 8 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_8_flag
			save_global_event_target_as = secession_country_8
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_8_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_8_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 9 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_9_flag
			save_global_event_target_as = secession_country_9
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_9_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_9_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 10 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_10_flag
			save_global_event_target_as = secession_country_10
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_10_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_10_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 11 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_11_flag
			save_global_event_target_as = secession_country_11
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_11_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_11_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 12 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_12_flag
			save_global_event_target_as = secession_country_12
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_12_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_12_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 13 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_13_flag
			save_global_event_target_as = secession_country_13
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_13_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_13_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 14 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_14_flag
			save_global_event_target_as = secession_country_14
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_14_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_14_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 15 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_15_flag
			save_global_event_target_as = secession_country_15
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_15_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_15_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 16 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_16_flag
			save_global_event_target_as = secession_country_16
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_16_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_16_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 17 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_17_flag
			save_global_event_target_as = secession_country_17
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_17_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_17_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 18 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_18_flag
			save_global_event_target_as = secession_country_18
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_18_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_18_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 19 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_19_flag
			save_global_event_target_as = secession_country_19
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_19_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_19_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 20 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_20_flag
			save_global_event_target_as = secession_country_20
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_20_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_20_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 21 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_21_flag
			save_global_event_target_as = secession_country_21
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_21_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_21_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 22 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_22_flag
			save_global_event_target_as = secession_country_22
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_22_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_22_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 23 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_23_flag
			save_global_event_target_as = secession_country_23
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_23_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_23_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 24 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_24_flag
			save_global_event_target_as = secession_country_24
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_24_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_24_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 25 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_25_flag
			save_global_event_target_as = secession_country_25
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_25_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_25_traitor }
			}
		}
	}
	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 26 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_26_flag
			save_global_event_target_as = secession_country_26
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_26_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_26_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 27 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_27_flag
			save_global_event_target_as = secession_country_27
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_27_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_27_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 28 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_28_flag
			save_global_event_target_as = secession_country_28
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_28_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_28_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 29 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_29_flag
			save_global_event_target_as = secession_country_29
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_29_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_29_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 30 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_30_flag
			save_global_event_target_as = secession_country_30
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_30_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_30_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 31 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_31_flag
			save_global_event_target_as = secession_country_31
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_31_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_31_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 32 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_32_flag
			save_global_event_target_as = secession_country_32
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_32_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_32_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 33 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_33_flag
			save_global_event_target_as = secession_country_33
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_33_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_33_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 34 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_34_flag
			save_global_event_target_as = secession_country_34
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_34_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_34_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 35 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_35_flag
			save_global_event_target_as = secession_country_35
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_35_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_35_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 36 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_36_flag
			save_global_event_target_as = secession_country_36
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_36_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_36_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 37 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_37_flag
			save_global_event_target_as = secession_country_37
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_37_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_37_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 38 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_38_flag
			save_global_event_target_as = secession_country_38
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_38_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_38_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 39 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_39_flag
			save_global_event_target_as = secession_country_39
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_39_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_39_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 40 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_40_flag
			save_global_event_target_as = secession_country_40
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_40_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_40_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 41 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_41_flag
			save_global_event_target_as = secession_country_41
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_41_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_41_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 42 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_42_flag
			save_global_event_target_as = secession_country_42
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_42_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_42_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 43 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_43_flag
			save_global_event_target_as = secession_country_43
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_43_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_43_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 44 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_44_flag
			save_global_event_target_as = secession_country_44
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_44_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_44_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 45 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_45_flag
			save_global_event_target_as = secession_country_45
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_45_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_45_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 46 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_46_flag
			save_global_event_target_as = secession_country_46
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_46_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_46_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 47 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_47_flag
			save_global_event_target_as = secession_country_47
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_47_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_47_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 48 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_48_flag
			save_global_event_target_as = secession_country_48
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_48_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_48_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 49 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_49_flag
			save_global_event_target_as = secession_country_49
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_49_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_49_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 50 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_50_flag
			save_global_event_target_as = secession_country_50
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_50_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_50_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 51 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_51_flag
			save_global_event_target_as = secession_country_51
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_51_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_51_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 52 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_52_flag
			save_global_event_target_as = secession_country_52
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_52_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_52_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 53 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_53_flag
			save_global_event_target_as = secession_country_53
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_53_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_53_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 54 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_54_flag
			save_global_event_target_as = secession_country_54
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_54_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_54_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 55 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_55_flag
			save_global_event_target_as = secession_country_55
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_55_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_55_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 56 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_56_flag
			save_global_event_target_as = secession_country_56
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_56_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_56_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 57 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_57_flag
			save_global_event_target_as = secession_country_57
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_57_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_57_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 58 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_58_flag
			save_global_event_target_as = secession_country_58
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_58_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_58_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 59 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_59_flag
			save_global_event_target_as = secession_country_59
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_59_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_59_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 60 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_60_flag
			save_global_event_target_as = secession_country_60
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_60_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_60_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 61 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_61_flag
			save_global_event_target_as = secession_country_61
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_61_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_61_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 62 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_62_flag
			save_global_event_target_as = secession_country_62
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_62_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_62_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 63 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_63_flag
			save_global_event_target_as = secession_country_63
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_63_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_63_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 64 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_64_flag
			save_global_event_target_as = secession_country_64
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_64_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_64_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 65 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_65_flag
			save_global_event_target_as = secession_country_65
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_65_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_65_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 66 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_66_flag
			save_global_event_target_as = secession_country_66
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_66_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_66_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 67 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_67_flag
			save_global_event_target_as = secession_country_67
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_67_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_67_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 68 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_68_flag
			save_global_event_target_as = secession_country_68
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_68_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_68_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 69 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_69_flag
			save_global_event_target_as = secession_country_69
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_69_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_69_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 70 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_70_flag
			save_global_event_target_as = secession_country_70
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_70_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_70_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 71 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_71_flag
			save_global_event_target_as = secession_country_71
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_71_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_71_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 72 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_72_flag
			save_global_event_target_as = secession_country_72
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_72_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_72_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 73 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_73_flag
			save_global_event_target_as = secession_country_73
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_73_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_73_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 74 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_74_flag
			save_global_event_target_as = secession_country_74
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_74_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_74_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 75 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_75_flag
			save_global_event_target_as = secession_country_75
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_75_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_75_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 76 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_76_flag
			save_global_event_target_as = secession_country_76
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_76_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_76_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 77 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_77_flag
			save_global_event_target_as = secession_country_77
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_77_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_77_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 78 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_78_flag
			save_global_event_target_as = secession_country_78
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_78_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_78_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 79 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_79_flag
			save_global_event_target_as = secession_country_79
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_79_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_79_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 80 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_80_flag
			save_global_event_target_as = secession_country_80
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_80_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_80_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 81 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_81_flag
			save_global_event_target_as = secession_country_81
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_81_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_81_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 82 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_82_flag
			save_global_event_target_as = secession_country_82
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_82_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_82_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 83 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_83_flag
			save_global_event_target_as = secession_country_83
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_83_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_83_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 84 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_84_flag
			save_global_event_target_as = secession_country_84
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_84_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_84_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 85 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_85_flag
			save_global_event_target_as = secession_country_85
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_85_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_85_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 86 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_86_flag
			save_global_event_target_as = secession_country_86
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_86_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_86_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 87 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_87_flag
			save_global_event_target_as = secession_country_87
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_87_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_87_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 88 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_88_flag
			save_global_event_target_as = secession_country_88
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_88_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_88_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 89 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_89_flag
			save_global_event_target_as = secession_country_89
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_89_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_89_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 90 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_90_flag
			save_global_event_target_as = secession_country_90
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_90_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_90_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 91 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_91_flag
			save_global_event_target_as = secession_country_91
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_91_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_91_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 92 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_92_flag
			save_global_event_target_as = secession_country_92
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_92_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_92_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 93 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_93_flag
			save_global_event_target_as = secession_country_93
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_93_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_93_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 94 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_94_flag
			save_global_event_target_as = secession_country_94
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_94_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_94_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 95 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_95_flag
			save_global_event_target_as = secession_country_95
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_95_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_95_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 96 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_96_flag
			save_global_event_target_as = secession_country_96
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_96_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_96_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 97 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_97_flag
			save_global_event_target_as = secession_country_97
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_97_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_97_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 98 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_98_flag
			save_global_event_target_as = secession_country_98
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_98_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_98_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 99 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_99_flag
			save_global_event_target_as = secession_country_99
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_99_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_99_traitor }
			}
		}
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = secession_country_count value = 100 } } }
		event_target:civwar_originator = {
			set_country_flag = secession_country_100_flag
			save_global_event_target_as = secession_country_100
		}
		event_target:civwar_rebels = {
			set_country_flag = secession_country_100_seceder
			if = {
				limit = { exists = ruler }
				ruler = { set_leader_flag = secession_country_100_traitor }
			}
		}
	}
}

find_secession_number_flag = {
	if = {
		limit = { has_country_flag = secession_country_1_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_1_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_1_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_1
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_1_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_2_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_2_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_2_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_2
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_2_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_3_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_3_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_3_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_3
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_3_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_4_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_4_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_4_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_4
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_4_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_5_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_5_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_5_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_5
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_5_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_6_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_6_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_6_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_6
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_6_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_7_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_7_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_7_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_7
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_7_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_8_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_8_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_8_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_8
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_8_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_9_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_9_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_9_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_9
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_9_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_10_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_10_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_10_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_10
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_10_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_11_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_11_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_11_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_11
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_11_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_12_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_12_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_12_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_12
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_12_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_13_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_13_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_13_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_13
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_13_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_14_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_14_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_14_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_14
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_14_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_15_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_15_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_15_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_15
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_15_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_16_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_16_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_16_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_16
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_16_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_17_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_17_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_17_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_17
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_17_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_18_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_18_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_18_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_18
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_18_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_19_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_19_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_19_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_19
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_19_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_20_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_20_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_20_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_20
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_20_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_21_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_21_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_21_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_21
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_21_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_22_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_22_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_22_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_22
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_22_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_23_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_23_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_23_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_23
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_23_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_24_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_24_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_24_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_24
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_24_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_25_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_25_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_25_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_25
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_25_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_26_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_26_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_26_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_26
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_26_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_27_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_27_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_27_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_27
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_27_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_28_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_28_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_28_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_28
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_28_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_29_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_29_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_29_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_29
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_29_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_30_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_30_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_30_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_30
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_30_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_31_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_31_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_31_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_31
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_31_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_32_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_32_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_32_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_32
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_32_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_33_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_33_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_33_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_33
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_33_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_34_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_34_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_34_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_34
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_34_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_35_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_35_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_35_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_35
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_35_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_36_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_36_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_36_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_36
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_36_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_37_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_37_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_37_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_37
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_37_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_38_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_38_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_38_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_38
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_38_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_39_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_39_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_39_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_39
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_39_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_40_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_40_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_40_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_40
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_40_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_41_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_41_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_41_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_41
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_41_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_42_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_42_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_42_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_42
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_42_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_43_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_43_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_43_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_43
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_43_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_44_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_44_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_44_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_44
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_44_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_45_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_45_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_45_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_45
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_45_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_46_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_46_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_46_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_46
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_46_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_47_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_47_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_47_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_47
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_47_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_48_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_48_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_48_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_48
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_48_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_49_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_49_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_49_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_49
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_49_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_50_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_50_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_50_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_50
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_50_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_51_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_51_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_51_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_51
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_51_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_52_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_52_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_52_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_52
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_52_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_53_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_53_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_53_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_53
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_53_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_54_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_54_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_54_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_54
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_54_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_55_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_55_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_55_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_55
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_55_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_56_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_56_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_56_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_56
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_56_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_57_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_57_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_57_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_57
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_57_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_58_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_58_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_58_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_58
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_58_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_59_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_59_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_59_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_59
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_59_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_60_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_60_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_60_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_60
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_60_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_61_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_61_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_61_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_61
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_61_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_62_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_62_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_62_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_62
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_62_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_63_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_63_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_63_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_63
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_63_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_64_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_64_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_64_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_64
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_64_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_65_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_65_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_65_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_65
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_65_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_66_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_66_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_66_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_66
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_66_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_67_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_67_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_67_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_67
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_67_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_68_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_68_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_68_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_68
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_68_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_69_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_69_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_69_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_69
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_69_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_70_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_70_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_70_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_70
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_70_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_71_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_71_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_71_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_71
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_71_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_72_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_72_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_72_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_72
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_72_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_73_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_73_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_73_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_73
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_73_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_74_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_74_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_74_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_74
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_74_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_75_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_75_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_75_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_75
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_75_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_76_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_76_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_76_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_76
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_76_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_77_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_77_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_77_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_77
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_77_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_78_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_78_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_78_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_78
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_78_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_79_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_79_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_79_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_79
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_79_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_80_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_80_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_80_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_80
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_80_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_81_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_81_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_81_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_81
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_81_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_82_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_82_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_82_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_82
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_82_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_83_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_83_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_83_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_83
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_83_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_84_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_84_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_84_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_84
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_84_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_85_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_85_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_85_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_85
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_85_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_86_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_86_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_86_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_86
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_86_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_87_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_87_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_87_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_87
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_87_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_88_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_88_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_88_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_88
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_88_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_89_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_89_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_89_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_89
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_89_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_90_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_90_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_90_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_90
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_90_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_91_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_91_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_91_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_91
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_91_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_92_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_92_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_92_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_92
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_92_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_93_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_93_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_93_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_93
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_93_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_94_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_94_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_94_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_94
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_94_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_95_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_95_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_95_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_95
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_95_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_96_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_96_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_96_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_96
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_96_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_97_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_97_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_97_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_97
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_97_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_98_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_98_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_98_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_98
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_98_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_99_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_99_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_99_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_99
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_99_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}

	else_if = {
		limit = { has_country_flag = secession_country_100_flag }
		if = {
			limit = { exists = event_target:civwar_rebels }
			event_target:civwar_rebels = {
				set_country_flag = secession_country_100_seceder
				if = {
					limit = { exists = ruler }
					ruler = { set_leader_flag = secession_country_100_traitor }
				}
			}
		}
		else_if = {
			limit = { has_origin = origin_exile_government }
			save_global_event_target_as = secession_country_100
		}
		else_if = {
			limit = { any_country = { has_country_flag = secession_country_100_seceder } }
			set_country_flag = country_needed_for_loc
		}
	}
}

get_heir_country_info = {
	if = {
		limit = { event_target:traitor_home_country = { has_heir_country_flag = no } }
		event_target:global_event_country = {
			if = {
				limit = { NOT = { is_variable_set = heir_country_count } }
				set_variable = { which = heir_country_count value = 1 }
			}
			else = {
				change_variable = { which = heir_country_count value = 1 }
			}
		}
		set_heir_country_flags = yes
	}
	else = {
		event_target:traitor_home_country = { find_heir_number_flag = yes }
	}
}

set_heir_country_flags = {
	if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 1 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_1_flag
			save_global_event_target_as = heir_country_1
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_1_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 2 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_2_flag
			save_global_event_target_as = heir_country_2
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_2_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 3 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_3_flag
			save_global_event_target_as = heir_country_3
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_3_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 4 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_4_flag
			save_global_event_target_as = heir_country_4
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_4_traitor }
	}
	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 5 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_5_flag
			save_global_event_target_as = heir_country_5
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_5_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 6 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_6_flag
			save_global_event_target_as = heir_country_6
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_6_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 7 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_7_flag
			save_global_event_target_as = heir_country_7
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_7_traitor }
	}
	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 8 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_8_flag
			save_global_event_target_as = heir_country_8
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_8_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 9 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_9_flag
			save_global_event_target_as = heir_country_9
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_9_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 10 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_10_flag
			save_global_event_target_as = heir_country_10
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_10_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 11 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_11_flag
			save_global_event_target_as = heir_country_11
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_11_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 12 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_12_flag
			save_global_event_target_as = heir_country_12
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_12_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 13 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_13_flag
			save_global_event_target_as = heir_country_13
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_13_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 14 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_14_flag
			save_global_event_target_as = heir_country_14
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_14_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 15 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_15_flag
			save_global_event_target_as = heir_country_15
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_15_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 16 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_16_flag
			save_global_event_target_as = heir_country_16
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_16_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 17 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_17_flag
			save_global_event_target_as = heir_country_17
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_17_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 18 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_18_flag
			save_global_event_target_as = heir_country_18
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_18_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 19 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_19_flag
			save_global_event_target_as = heir_country_19
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_19_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 20 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_20_flag
			save_global_event_target_as = heir_country_20
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_20_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 21 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_21_flag
			save_global_event_target_as = heir_country_21
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_21_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 22 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_22_flag
			save_global_event_target_as = heir_country_22
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_22_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 23 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_23_flag
			save_global_event_target_as = heir_country_23
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_23_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 24 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_24_flag
			save_global_event_target_as = heir_country_24
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_24_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 25 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_25_flag
			save_global_event_target_as = heir_country_25
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_25_traitor }
	}
	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 26 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_26_flag
			save_global_event_target_as = heir_country_26
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_26_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 27 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_27_flag
			save_global_event_target_as = heir_country_27
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_27_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 28 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_28_flag
			save_global_event_target_as = heir_country_28
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_28_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 29 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_29_flag
			save_global_event_target_as = heir_country_29
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_29_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 30 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_30_flag
			save_global_event_target_as = heir_country_30
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_30_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 31 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_31_flag
			save_global_event_target_as = heir_country_31
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_31_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 32 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_32_flag
			save_global_event_target_as = heir_country_32
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_32_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 33 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_33_flag
			save_global_event_target_as = heir_country_33
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_33_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 34 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_34_flag
			save_global_event_target_as = heir_country_34
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_34_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 35 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_35_flag
			save_global_event_target_as = heir_country_35
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_35_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 36 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_36_flag
			save_global_event_target_as = heir_country_36
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_36_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 37 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_37_flag
			save_global_event_target_as = heir_country_37
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_37_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 38 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_38_flag
			save_global_event_target_as = heir_country_38
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_38_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 39 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_39_flag
			save_global_event_target_as = heir_country_39
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_39_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 40 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_40_flag
			save_global_event_target_as = heir_country_40
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_40_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 41 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_41_flag
			save_global_event_target_as = heir_country_41
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_41_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 42 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_42_flag
			save_global_event_target_as = heir_country_42
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_42_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 43 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_43_flag
			save_global_event_target_as = heir_country_43
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_43_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 44 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_44_flag
			save_global_event_target_as = heir_country_44
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_44_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 45 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_45_flag
			save_global_event_target_as = heir_country_45
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_45_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 46 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_46_flag
			save_global_event_target_as = heir_country_46
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_46_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 47 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_47_flag
			save_global_event_target_as = heir_country_47
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_47_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 48 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_48_flag
			save_global_event_target_as = heir_country_48
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_48_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 49 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_49_flag
			save_global_event_target_as = heir_country_49
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_49_traitor }
	}

	else_if = {
		limit = { event_target:global_event_country = { check_variable = { which = heir_country_count value = 50 } } }
		event_target:traitor_home_country = {
			set_country_flag = heir_country_50_flag
			save_global_event_target_as = heir_country_50
		}
		event_target:disinherited_heir = { set_leader_flag = heir_country_50_traitor }
	}
}

find_heir_number_flag = {
	if = {
		limit = { has_country_flag = heir_country_1_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_1_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_2_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_2_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_3_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_3_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_4_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_4_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_5_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_5_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_6_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_6_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_7_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_7_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_8_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_8_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_9_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_9_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_10_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_10_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_11_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_11_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_12_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_12_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_13_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_13_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_14_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_14_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_15_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_15_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_16_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_16_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_17_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_17_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_18_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_18_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_19_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_19_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_20_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_20_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_21_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_21_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_22_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_22_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_23_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_23_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_24_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_24_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_25_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_25_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_26_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_26_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_27_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_27_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_28_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_28_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_29_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_29_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_30_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_30_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_31_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_31_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_32_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_32_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_33_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_33_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_34_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_34_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_35_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_35_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_36_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_36_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_37_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_37_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_38_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_38_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_39_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_39_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_40_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_40_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_41_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_41_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_42_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_42_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_43_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_43_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_44_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_44_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_45_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_45_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_46_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_46_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_47_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_47_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_48_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_48_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_49_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_49_traitor }
	}

	else_if = {
		limit = { has_country_flag = heir_country_50_flag }
		event_target:disinherited_heir = { set_leader_flag = heir_country_50_traitor }
	}
}

#####################
# Civwar Event stuff

create_civwar_armies = {

	every_owned_planet = {

		set_variable = { which = num_sep_pops value = 0 }

		if = {
			limit = { owner = { has_country_flag = heir_rebel_country } }
			every_owned_pop = {
				limit = { can_think = yes }
				random = {
					chance = 35
					prev = { change_variable = { which = num_sep_pops value = 1 } }
				}
			}
		}
		else_if = {
			limit = { root = { has_origin = origin_nationalist_rebellion } }
			every_owned_pop = {
				limit = { has_pop_flag = sep_pop_nat_@event_target:nat_motherland_model }
				prev = { change_variable = { which = num_sep_pops value = 1 } }
			}
		}
		else = {
			every_owned_pop = {
				limit = { has_pop_flag = sep_pop }
				prev = { change_variable = { which = num_sep_pops value = 1 } }
			}
		}


		while = {
			count = num_sep_pops
			random_list = {
				75 = {
					while = {
						count = 1
						create_army = {
							name = random
							owner = event_target:civwar_rebels
							species = event_target:civwar_species
							type = "civwar_defense_army"
						}
					}
				}
				20 = {
					while = {
						count = 1
						create_army = {
							name = random
							owner = event_target:civwar_rebels
							species = event_target:civwar_species
							type = "civwar_assault_army"
						}
					}
					while = {
						count = 1
						create_army = {
							name = random
							owner = event_target:civwar_rebels
							species = event_target:civwar_species
							type = "civwar_defense_army"
						}
					}
				}
				5 = {
					while = {
						count = 1
						create_army = {
							name = random
							owner = event_target:civwar_rebels
							species = event_target:civwar_species
							type = "civwar_assault_army"
						}
					}
					while = {
						count = 2
						create_army = {
							name = random
							owner = event_target:civwar_rebels
							species = event_target:civwar_species
							type = "civwar_defense_army"
						}
					}
				}
			}
		}

		clear_variable = num_sep_pops
	}
}

get_country_immediate_setup = {

	set_variable = { which = total_empire_size value = trigger:empire_size }

	# setting graphical culture
	set_graphical_culture = event_target:civwar_originator

	# establish comms
	every_country = {
		limit = {
			OR = {
				has_communications = event_target:civwar_originator
				intel_level = {
					level > low
					system = event_target:civwar_rebels.capital_scope.solar_system
				}
			}
		}
		establish_communications_no_message = root
		# establish_contact = { who = root location = from }
	}
	# clear new contact opinion modifier
	if = {
		limit = {
			has_opinion_modifier = {
				who = event_target:civwar_originator
				modifier = opinion_new_contact
			}
		}
		remove_opinion_modifier = {
			who = event_target:civwar_originator
			modifier = opinion_new_contact
		}
	}
	# Set Relation Flags
	set_relation_flag = {
		who = event_target:civwar_originator
		flag = civwar_to_host_flag
	}
	# Remove from Federation, if applicable
	if = {
		limit = { has_federation = yes }
		leave_alliance = { override_requirements = yes }
	}
	# get host's technologies
	copy_techs_from = {
		target = event_target:civwar_originator
		except = {
			# Horizon Signal
			tech_akx_worm_1
			tech_akx_worm_2
			tech_akx_worm_3
		}
	}

	# survey host's surveyed planets
	every_galaxy_planet = {
		limit = {
			is_surveyed = {
				who = event_target:civwar_originator
				status = yes
			}
		}
		set_surveyed = {
			surveyed = yes
			surveyor = root
		}
	}

	# create fleets and give resources, destroy home country fleets
	country_event = { id = civwar.3000 }
	# Transfer Commander Fleet
	# Switching the order with the create fleets above would make the situation harsher.
	event_target:civwar_originator = {
		if = { 
			limit = { any_owned_fleet = { has_fleet_flag = civil_war_fleet } }
			random_owned_fleet = {
				limit = { has_fleet_flag = civil_war_fleet }
				set_owner = root
				if = { # If they are not in their seized territory, they stay as leader of their fleet
					limit = { solar_system.starbase = { is_owned_by = event_target:civwar_originator } }
					set_leader = root.ruler
				}
				remove_fleet_flag = civil_war_fleet
			}
			root = { force_add_civic = civic_distinguished_admiralty }
		}
	}
	# Maybe the rebels get an Attack Moon/Planet/Systemcraft if it was in their borders
	if = {
		limit = { NOT = { has_country_flag = plan_rebel_country } }
		every_system_within_border = {
			random_ship_in_system = {
				limit = {
					is_owned_by = event_target:civwar_originator
					OR = {
						# Gigastructures
						is_ship_size = giga_massive_planet
		    			is_ship_size = giga_planet_behemoth
		    			is_ship_size = giga_systemcraft
		    			# Engineers of Life
		    			# is_ship_size = eng_imp_stellar_devourer
		    			# is_ship_size = eng_imp_dimensional_horror
		    			# is_ship_size = eng_imp_space_dragon
		    			# is_ship_size = eng_imp_space_dragon_baby
		    			# is_ship_size = eng_imp_leviathan_01_voidspawn
		    			# is_ship_size = eng_imp_void_cloud_lesser
		    			# is_ship_size = eng_imp_void_cloud
		    			# is_ship_size = eng_imp_corrupted_avatar
		    			# is_ship_size = eng_imp_shardlings
		    			# is_ship_size = eng_imp_shards
		    			# is_ship_size = eng_imp_quintessence
		    			# is_ship_size = eng_imp_crystal_station_large
		    			# is_ship_size = eng_imp_space_whale_calf
		    			# is_ship_size = eng_imp_space_whale_cow
		    			# is_ship_size = eng_imp_space_whale_bull
		    			# is_ship_size = eng_imp_leviathan_01_elder_tiyanki
		    			# is_ship_size = eng_imp_amoeba
		    			# is_ship_size = eng_imp_mother
		    			# is_ship_size = eng_imp_cente
					}
				}
				fleet = {
					random = {
						chance = 45
						set_owner = event_target:civwar_rebels
					}
				}
			}
		}
	}
	
	# Science
	create_fleet = {
		effect = {
			set_owner = root
			create_ship = {
				name = random
				random_existing_design = science
			}
			set_fleet_stance = evasive				
			set_location = root.capital_scope
			owner = {
				get_leader_homeworld = yes
				create_leader = {
					name = random
					class = scientist
					sub_type = survey
					species = owner_main_species
					background_planet = event_target:leader_homeworld
				}
			}
			set_leader = last_created_leader
		}			
	}

	# Construction Ship
	create_fleet = {
		effect = {
			set_owner = root
			create_ship = {
				name = random
				random_existing_design = constructor
			}
			set_fleet_stance = evasive
			set_location = root.capital_scope
		}
	}

	# Create Leaders
	get_leader_homeworld = yes
	create_leader = {
		class = official
		species = owner_main_species
		name = random
		skill = 5
		background_planet = event_target:leader_homeworld
	}
	while = {
		count = 2
		get_leader_homeworld = yes
		create_leader = {
			class = commander
			species = owner_main_species
			name = random
			skill = 5
			background_planet = event_target:leader_homeworld
		}
	}
	while = {
		count = 3
		get_leader_homeworld = yes
		create_leader = {
			class = scientist
			species = owner_main_species
			name = random
			skill = 5
			background_planet = event_target:leader_homeworld
		}
	}

	if = {
		limit = { exists = event_target:switched_dynast_loyalty }
		event_target:switched_dynast_loyalty = { set_owner = root }
	}

	# If civil war country was Khan, set title.
	if = {
		limit = {
			event_target:civwar_originator = {
				has_country_flag = ethic_civwar
				OR = {
					has_civic = civic_diadochi
					has_civic = civic_great_khans_legacy
				}
			}
		}
		set_male_ruler_title = RT_KHAN
		set_female_ruler_title = RT_KHAN
	}

	# if = {
	# 	limit {
	# 		event_target:civwar_originator = { has_country_flag = succession_mother_country }
	# 		has_country_flag = crisis_independent_@event_target:civwar_originator
	# 	}
	# 	set_male_ruler_title = "Viceroy"
	# 	set_female_ruler_title = "Viceroy"
	# }
}

get_country_after_setup = {

	## Fix ethics (sometimes needed if country is created too fast, like with multiple sectors
	if = {
		limit = {
			OR = {
				AND = {
					has_country_flag = civwar_mil
					NOT = { has_ethic = ethic_fanatic_militarist }
				}
				AND = {
					has_country_flag = civwar_pac
					NOT = { has_ethic = ethic_fanatic_pacifist }
				}
				AND = {
					has_country_flag = civwar_mat
					NOT = { has_ethic = ethic_fanatic_materialist }
				}
				AND = {
					has_country_flag = civwar_spi
					NOT = { has_ethic = ethic_fanatic_spiritualist }
				}
				AND = {
					has_country_flag = civwar_auth
					NOT = { has_ethic = ethic_fanatic_authoritarian }
				}
				AND = {
					has_country_flag = civwar_egal
					NOT = { has_ethic = ethic_fanatic_egalitarian }
				}
				AND = {
					has_country_flag = civwar_phobe
					NOT = { has_ethic = ethic_fanatic_xenophobe }
				}
				AND = {
					has_country_flag = civwar_phile
					NOT = { has_ethic = ethic_fanatic_xenophile }
				}
				AND = {
					has_country_flag = civwar_soc
					NOT = { has_ethic = ethic_fanatic_socialism }
				}
				AND = {
					has_country_flag = civwar_cap
					NOT = { has_ethic = ethic_fanatic_capitalism }
				}
			}
		}
		if = {
			limit = {
				has_country_flag = civwar_mil
				NOT = { has_ethic = ethic_fanatic_militarist }
			}
			while = {
				limit = { NOT = { has_ethic = ethic_fanatic_militarist } }
				shift_ethic = ethic_militarist
			}
		}
		else_if = {
			limit = {
				has_country_flag = civwar_pac
				NOT = { has_ethic = ethic_fanatic_pacifist }
			}
			while = {
				limit = { NOT = { has_ethic = ethic_fanatic_pacifist } }
				shift_ethic = ethic_pacifist
			}
		}
		else_if = {
			limit = {
				has_country_flag = civwar_mat
				NOT = { has_ethic = ethic_fanatic_materialist }
			}
			while = {
				limit = { NOT = { has_ethic = ethic_fanatic_materialist } }
				shift_ethic = ethic_materialist
			}
		}
		else_if = {
			limit = {
				has_country_flag = civwar_spi
				NOT = { has_ethic = ethic_fanatic_spiritualist }
			}
			while = {
				limit = { NOT = { has_ethic = ethic_fanatic_spiritualist } }
				shift_ethic = ethic_spiritualist
			}
		}
		else_if = {
			limit = {
				has_country_flag = civwar_auth
				NOT = { has_ethic = ethic_fanatic_authoritarian }
			}
			while = {
				limit = { NOT = { has_ethic = ethic_fanatic_authoritarian } }
				shift_ethic = ethic_authoritarian
			}
		}
		else_if = {
			limit = {
				has_country_flag = civwar_egal
				NOT = { has_ethic = ethic_fanatic_egalitarian }
			}
			while = {
				limit = { NOT = { has_ethic = ethic_fanatic_egalitarian } }
				shift_ethic = ethic_egalitarian
			}
		}
		else_if = {
			limit = {
				has_country_flag = civwar_phobe
				NOT = { has_ethic = ethic_fanatic_xenophobe }
			}
			while = {
				limit = { NOT = { has_ethic = ethic_fanatic_xenophobe } }
				shift_ethic = ethic_xenophobe
			}
		}
		else_if = {
			limit = {
				has_country_flag = civwar_phile
				NOT = { has_ethic = ethic_fanatic_xenophile }
			}
			while = {
				limit = { NOT = { has_ethic = ethic_fanatic_xenophile } }
				shift_ethic = ethic_xenophile
			}
		}
		else_if = {
			limit = {
				has_country_flag = civwar_soc
				NOT = { has_ethic = ethic_fanatic_socialism }
			}
			while = {
				limit = { NOT = { has_ethic = ethic_fanatic_socialism } }
				shift_ethic = ethic_socialism
			}
		}
		else_if = {
			limit = {
				has_country_flag = civwar_cap
				NOT = { has_ethic = ethic_fanatic_capitalism }
			}
			while = {
				limit = { NOT = { has_ethic = ethic_fanatic_capitalism } }
				shift_ethic = ethic_capitalism
			}
		}

		change_government = {
			authority = random
			cooldown = no
			remove_invalid_civics = yes
			civics = random
		}
	}

	country_event = { id = civwar.3200 days = 8 } # Border cleanup 2, needs delay because sometimes the core sector is deleted for no reason.

	get_secession_country_info = yes

	ruler = {
		if = {
			limit = { has_leader_flag = leader_defected }
			set_variable = { which = year_rebelled value = 2200 }
			export_trigger_value_to_variable = {
				trigger = years_passed
				variable = years_passed_leader_rebellion
			}
			change_variable = { which = year_rebelled value = this.years_passed_leader_rebellion }
			clear_variable = years_passed_leader_rebellion
		}
	}

	if = {
		limit = { NOT = { is_variable_set = birth_year } }
		country_event = { id = civmisc.3001 }
	}

	# To fix names like "Empire of Sirius VII" to be like "Empire of Earth"
	# I think this has been resolved.
	#if = {
	#	limit = {
	#		NOT = { has_country_flag = exile_restored_country }
	#		exists = capital_scope
	#		capital_scope = { NOT = { has_planet_flag = civwar_name_changed } }
	#		event_target:civwar_originator = { is_ai = yes }
	#		#event_target:civwar_rebels = {
	#		#	OR = {
	#		#		has_origin = origin_coup_independent
	#		#		has_origin = origin_nationalist_rebellion
	#		#		has_origin = origin_civstrife_slave_rebellion
	#		#	}
	#		#}
	#	}
	#	capital_scope = {
	#		set_name = random
	#		set_planet_flag = civwar_name_changed
	#	}
	#}

	# Renaming Stuff
	if = {
		limit = { has_country_flag = exile_restored_country }
		random_country = {
			limit = { has_country_flag = exile_link_@root }
			save_event_target_as = nat_motherland_model
		}
		if = {
			limit = { any_owned_planet = { has_planet_flag = capital_planet_@event_target:nat_motherland_model } }
			random_owned_planet = {
				limit = { has_planet_flag = capital_planet_@event_target:nat_motherland_model }
				remove_planet_flag = capital_planet_@event_target:nat_motherland_model
				set_planet_flag = capital_planet_@root
				set_capital = yes
			}
			# I'm only setting their name to the original if they have their original capital, to
			# avoid situations where ex. the United Nations of Earth is restored without actually owning Earth.
			# I think in the case they lose their capital, the people restoring the government would realize
			# that their new govenrment is essentially a new entity, not a simple continuation.
			# I may have to find a way to restore them to their original name if they ever take back their
			# original capital in a war, but whew that'll be annoying
			set_name = {
				key = exile_country_restored_name
				variable_string = "\\[event_target:nat_motherland_model.GetName]"
			}
		}
		else = {
			set_name = random
			set_country_flag = nat_country_new_name
		}
	}
	else_if = {
		limit = { has_country_flag = crisis_successor_@event_target:civwar_originator }
		set_name = event_target:civwar_originator
	}
	else = {
		set_name = random
	}

	if = { # Dynastic Succession Crisis
		limit = { event_target:civwar_originator = { has_country_flag = crisis_subject } }
		set_subject_of = {
			who = event_target:civwar_originator
			preset = preset_tributary
		}
	}

	event_target:civwar_originator = {
		if = {
			limit = { has_country_flag = heir_mother_country }
			remove_country_flag = heir_mother_country
		}
		if = {
			limit = {
				event_target:civwar_rebels = {
					OR = {
						has_origin = origin_civwar
						has_origin = origin_sec_rebellion
						has_origin = origin_nationalist_rebellion
						has_origin = origin_coup_successor
						has_origin = origin_coup_independent
						has_origin = origin_heir_rebellion
						has_origin = origin_isolated_rebellion
					}
				}
			}
			get_civil_war_number = yes
		}
	}

	# Change size of Capital Starbase
	capital_scope.solar_system.starbase = {
		if = {
			limit = { NOT = { has_starbase_size >= starbase_starport } }
			set_starbase_size = starbase_starport
		}
	}

	# Flavor Civics
	if = {
		limit = {
			NOT = { has_civic = civic_warrior_culture }
			ruler = { has_trait = leader_trait_army_veteran }
		}
		force_add_civic = civic_warrior_culture
	}
	if = {
		limit = {
			NOT = { has_civic = civic_distinguished_admiralty }
			ruler = { has_trait = leader_trait_retired_fleet_officer }
		}
		force_add_civic = civic_distinguished_admiralty
	}
	if = {
		limit = {
			NOT = { has_civic = civic_slaver_guilds }
			ruler = { has_trait = leader_trait_iron_fist }
		}
		force_add_civic = civic_slaver_guilds
	}
	if = {
		limit = {
			exists = event_target:civwar_party
			event_target:civwar_party = { is_pop_faction_type = supremacist }
			num_species = 1
		}
		random = { chance = 10 force_add_civic = civic_fanatic_purifiers }
	}

	add_intel = {
		who = event_target:civwar_originator
		amount = 70
	}

	# Please let this work
	every_owned_fleet = { set_event_locked = no }
}

get_remove_seps_after = {
	# Remove Sep Flags
	if = {
		limit = { any_owned_pop = { has_pop_flag = sep_pop } }
		every_owned_pop = {
			limit = { has_pop_flag = sep_pop }
			remove_pop_flag = sep_pop
		}
	}
	if = {
		limit = { any_owned_pop = { has_pop_flag = sep_pop_ethic } }
		every_owned_pop = {
			limit = { has_pop_flag = sep_pop_ethic }
			remove_pop_flag = sep_pop_ethic
		}
	}
}

get_war_type_flag = {
	if = {
		limit = { root = { is_situation_type = situation_civstrife_faction_sep_nat } }
		set_timed_country_flag = { flag = nat_mother_civwar years = 1 }
	}
	else_if = {
		limit = { root.target = { is_regular_faction = yes } }
		set_timed_country_flag = { flag = ethic_civwar years = 1 }
	}
}

get_fleet_effect = {


	# # Count how many fleets there are
	set_variable = { which = civwar_total_fleets value = 0 }
	every_owned_fleet = {
		limit = {
			any_owned_ship = { is_ship_class = shipclass_military }
			NOR = { # Refresh Protection
				is_same_value = event_target:military_fleet_1
				is_same_value = event_target:military_fleet_2
				is_same_value = event_target:military_fleet_3
				is_same_value = event_target:military_fleet_4
				is_same_value = event_target:military_fleet_5
				is_same_value = event_target:military_fleet_6
				is_same_value = event_target:military_fleet_7
				is_same_value = event_target:military_fleet_8
				is_same_value = event_target:military_fleet_9
				is_same_value = event_target:military_fleet_10
				is_same_value = event_target:military_fleet_11
				is_same_value = event_target:military_fleet_12
				is_same_value = event_target:military_fleet_13
				is_same_value = event_target:military_fleet_14
				is_same_value = event_target:military_fleet_15
				is_same_value = event_target:military_fleet_16
				is_same_value = event_target:military_fleet_17
				is_same_value = event_target:military_fleet_18
				is_same_value = event_target:military_fleet_19
				is_same_value = event_target:military_fleet_20
			}
		}
		set_fleet_flag = military_fleet
		prev = { change_variable = { which = civwar_total_fleets value = 1 } }
	}

	while = {
		count = 20
		ordered_owned_fleet = {
			limit = { has_fleet_flag = military_fleet }
			position = 0
			order_by = trigger:fleet_power
			inverse = yes
			if = {
				limit = {
					NOT = { exists = event_target:military_fleet_1 }
					owner = { check_variable = { which = civwar_total_fleets value >= 1 } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_1
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_2 }
					owner = { check_variable = { which = civwar_total_fleets value >= 2 } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_2
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_3 }
					owner = { check_variable = { which = civwar_total_fleets value >= 3 } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_3
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_4 }
					owner = { check_variable = { which = civwar_total_fleets value >= 4 } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_4
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_5 }
					owner = { check_variable = { which = civwar_total_fleets value >= 5 } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_5
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_6 }
					owner = { check_variable = { which = civwar_total_fleets value >= 6 } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_6
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_7 }
					owner = { check_variable = { which = civwar_total_fleets value >= 7 } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_7
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_8 }
					owner = { check_variable = { which = civwar_total_fleets value >= 8 } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_8
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_9 }
					owner = { check_variable = { which = civwar_total_fleets value >= 9 } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_9
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_10 }
					owner = { check_variable = { which = civwar_total_fleets value >= 1  } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_10
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_11 }
					owner = { check_variable = { which = civwar_total_fleets value >= 1  } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_11
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_12 }
					owner = { check_variable = { which = civwar_total_fleets value >= 1  } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_12
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_13 }
					owner = { check_variable = { which = civwar_total_fleets value >= 1  } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_13
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_14 }
					owner = { check_variable = { which = civwar_total_fleets value >= 1  } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_14
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_15 }
					owner = { check_variable = { which = civwar_total_fleets value >= 1  } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_15
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_16 }
					owner = { check_variable = { which = civwar_total_fleets value >= 1  } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_16
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_17 }
					owner = { check_variable = { which = civwar_total_fleets value >= 1  } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_17
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_18 }
					owner = { check_variable = { which = civwar_total_fleets value >= 1  } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_18
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_19 }
					owner = { check_variable = { which = civwar_total_fleets value >= 1  } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_19
			}
			else_if = {
				limit = {
					NOT = { exists = event_target:military_fleet_20 }
					owner = { check_variable = { which = civwar_total_fleets value >= 2  } }
				}
				remove_fleet_flag = military_fleet
				save_event_target_as = military_fleet_20
			}
		}
	}

	every_owned_fleet = {
		limit = { any_owned_fleet = { has_fleet_flag = military_fleet } }
		remove_fleet_flag = military_fleet
	}
}

#####################
# Declare War Effects

get_declare_war_civwar = {
	declare_war = {
		target = event_target:civwar_rebels
		name = "Civil War"
		attacker_war_goal = "wg_civwar"
		effect = {

			if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 1 } } }
				set_name = {
					key = NAME_civwar_war
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 2 } } }
				set_name = {
					key = NAME_civwar_war_2
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 3 } } }
				set_name = {
					key = NAME_civwar_war_3
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 4 } } }
				set_name = {
					key = NAME_civwar_war_4
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 5 } } }
				set_name = {
					key = NAME_civwar_war_5
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 6 } } }
				set_name = {
					key = NAME_civwar_war_6
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 7 } } }
				set_name = {
					key = NAME_civwar_war_7
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 8 } } }
				set_name = {
					key = NAME_civwar_war_8
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 9 } } }
				set_name = {
					key = NAME_civwar_war_9
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 10 } } }
				set_name = {
					key = NAME_civwar_war_10
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 11 } } }
				set_name = {
					key = NAME_civwar_war_11
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 12 } } }
				set_name = {
					key = NAME_civwar_war_12
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 13 } } }
				set_name = {
					key = NAME_civwar_war_13
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 14 } } }
				set_name = {
					key = NAME_civwar_war_14
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 15 } } }
				set_name = {
					key = NAME_civwar_war_15
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 16 } } }
				set_name = {
					key = NAME_civwar_war_16
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 17 } } }
				set_name = {
					key = NAME_civwar_war_17
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 18 } } }
				set_name = {
					key = NAME_civwar_war_18
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 19 } } }
				set_name = {
					key = NAME_civwar_war_19
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_originator = { check_variable = { which = civwar_number value = 20 } } }
				set_name = {
					key = NAME_civwar_war_20
					variable_string = "\\[event_target:civwar_originator.GetAdj]"
				}
			}

		}
	}

	remove_country_flag = entered_war_as_attacker
}

get_declare_war_plan_rebellion = {

	declare_war = {
		target = event_target:civwar_rebels
		name = "Planetary Rebellion"
		attacker_war_goal = "wg_planet_rebellion"
		effect = {
			if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 1 } } }
				set_name = {
					key = NAME_plan_rebellion_war
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 2 } } }
				set_name = {
					key = NAME_plan_rebellion_war_2
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}
			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 3 } } }
				set_name = {
					key = NAME_plan_rebellion_war_3
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 4 } } }
				set_name = {
					key = NAME_plan_rebellion_war_4
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 5 } } }
				set_name = {
					key = NAME_plan_rebellion_war_5
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 6 } } }
				set_name = {
					key = NAME_plan_rebellion_war_6
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 7 } } }
				set_name = {
					key = NAME_plan_rebellion_war_7
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 8 } } }
				set_name = {
					key = NAME_plan_rebellion_war_8
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 9 } } }
				set_name = {
					key = NAME_plan_rebellion_war_9
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 10 } } }
				set_name = {
					key = NAME_plan_rebellion_war_10
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 11 } } }
				set_name = {
					key = NAME_plan_rebellion_war_11
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 12 } } }
				set_name = {
					key = NAME_plan_rebellion_war_12
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 13 } } }
				set_name = {
					key = NAME_plan_rebellion_war_13
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 14 } } }
				set_name = {
					key = NAME_plan_rebellion_war_14
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 15 } } }
				set_name = {
					key = NAME_plan_rebellion_war_15
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 16 } } }
				set_name = {
					key = NAME_plan_rebellion_war_16
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 17 } } }
				set_name = {
					key = NAME_plan_rebellion_war_17
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 18 } } }
				set_name = {
					key = NAME_plan_rebellion_war_18
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 19 } } }
				set_name = {
					key = NAME_plan_rebellion_war_19
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = reb_number value = 20 } } }
				set_name = {
					key = NAME_plan_rebellion_war_20
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}


		}
	}

	remove_country_flag = entered_war_as_attacker
}

get_declare_war_sec_rebellion = {

	random_owned_leader = {
		limit = { has_leader_flag = dummy_sector_leader_@event_target:civwar_rebels.capital_scope }
		save_event_target_as = sector_name
	}

	declare_war = {
		target = event_target:civwar_rebels
		name = "Sectoral Rebellion"
		attacker_war_goal = "wg_civwar"
		effect = {

			if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 1 } } }
				set_name = {
					key = NAME_sec_rebellion_war
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 2 } } }
				set_name = {
					key = NAME_sec_rebellion_war_2
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 3 } } }
				set_name = {
					key = NAME_sec_rebellion_war_3
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 4 } } }
				set_name = {
					key = NAME_sec_rebellion_war_4
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 5 } } }
				set_name = {
					key = NAME_sec_rebellion_war_5
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 6 } } }
				set_name = {
					key = NAME_sec_rebellion_war_6
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 7 } } }
				set_name = {
					key = NAME_sec_rebellion_war_7
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 8 } } }
				set_name = {
					key = NAME_sec_rebellion_war_8
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 9 } } }
				set_name = {
					key = NAME_sec_rebellion_war_9
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 10 } } }
				set_name = {
					key = NAME_sec_rebellion_war_10
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 11 } } }
				set_name = {
					key = NAME_sec_rebellion_war_11
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 12 } } }
				set_name = {
					key = NAME_sec_rebellion_war_12
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 13 } } }
				set_name = {
					key = NAME_sec_rebellion_war_13
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 14 } } }
				set_name = {
					key = NAME_sec_rebellion_war_14
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 15 } } }
				set_name = {
					key = NAME_sec_rebellion_war_15
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 16 } } }
				set_name = {
					key = NAME_sec_rebellion_war_16
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 17 } } }
				set_name = {
					key = NAME_sec_rebellion_war_17
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 18 } } }
				set_name = {
					key = NAME_sec_rebellion_war_18
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 19 } } }
				set_name = {
					key = NAME_sec_rebellion_war_19
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = sec_reb_number value = 20 } } }
				set_name = {
					key = NAME_sec_rebellion_war_20
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

		}
	}

	remove_country_flag = entered_war_as_attacker
}

get_declare_war_plan_slave_rebellion = {

	declare_war = {
		target = event_target:civwar_rebels
		name = "Slave Uprising"
		attacker_war_goal = "wg_slave_uprising"
		effect = {
			if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 1 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 1 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_2
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 2 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_2
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 3 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_3
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 4 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_4
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 5 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_5
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 6 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_6
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 7 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_7
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 8 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_8
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 9 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_9
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 10 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_10
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 11 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_11
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 12 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_12
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 13 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_13
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 14 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_14
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 15 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_15
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 16 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_16
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 17 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_17
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 18 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_18
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 19 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_19
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 20 } } }
				set_name = {
					key = NAME_plan_slave_rebellion_war_20
					variable_string = "\\[This.MainDefender.Capital.GetAdj]"
				}
			}
		}
	}

	remove_country_flag = entered_war_as_attacker
}

get_declare_war_sec_slave_rebellion = {

	random_owned_leader = {
		limit = { has_leader_flag = dummy_sector_leader_@event_target:civwar_rebels.capital_scope }
		save_event_target_as = sector_name
	}

	declare_war = {
		target = event_target:civwar_rebels
		name = "Sectoral Slave Uprising"
		attacker_war_goal = "wg_slave_uprising"
		effect = {

			if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 1 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 1 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_2
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 2 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_2
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 3 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_3
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 4 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_4
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 5 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_5
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 6 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_6
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 7 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_7
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 8 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_8
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 9 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_9
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 10 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_10
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 11 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_11
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 12 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_12
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 13 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_13
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 14 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_14
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 15 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_15
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 16 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_16
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 17 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_17
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 18 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_18
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 19 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_19
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}

			else_if = {
				limit = { event_target:civwar_rebels.capital_scope = { check_variable = { which = slave_reb_number value = 20 } } }
				set_name = {
					key = NAME_sec_slave_rebellion_war_20
					variable_string = "\\[event_target:sector_name.GetName]"
				}
			}
		}
	}

	remove_country_flag = entered_war_as_attacker
}

get_declare_war_natwar = {

	if = {
		limit = { event_target:nat_motherland_model = { is_exile_country = yes } }
		declare_war = {
			target = event_target:civwar_rebels
			name = "Nationalist Civil War"
			attacker_war_goal = "wg_natwar"
			effect = {
				set_name = {
					key = NAME_civwar_war_nat_2
					variable_string = "\\[This.MainDefender.GetName]"
				}
			}
		}
	}
	else = {
		declare_war = {
			target = event_target:civwar_rebels
			name = "Nationalist Civil War"
			attacker_war_goal = "wg_natwar"
			effect = {
				set_name = {
					key = NAME_civwar_war_nat
					variable_string = "\\[event_target:nat_motherland_model.GetAdj]"
				}
			}
		}
	}

	remove_country_flag = entered_war_as_attacker
}

get_declare_war_heirwar = {

	declare_war = {
		target = event_target:civwar_rebels
		name = "Heir War"
		attacker_war_goal = "wg_civwar_heir"
		effect = {
			set_name = {
				key = NAME_heir_war
				variable_string = "\\[event_target:civwar_rebels.Leader.GetName]"
			}
		}
	}

	remove_country_flag = entered_war_as_attacker
}

get_declare_war_subject = {

	if = {
		limit = { event_target:civwar_rebels = { has_country_flag = nat_civwar } }
		set_timed_country_flag = { flag = subject_natwar_timed_flag days = 7 }
		get_declare_war_natwar = yes
	}
	else_if = {
		limit = { event_target:civwar_rebels = { has_country_flag = heir_rebel_country } }
		set_timed_country_flag = { flag = subject_heirwar_timed_flag days = 7 }
		get_declare_war_heirwar = yes
	}
	else_if = {
		limit = { event_target:civwar_rebels = { has_country_flag = plan_rebel_country } }
		set_timed_country_flag = { flag = subject_planwar_timed_flag days = 7 }
		get_declare_war_plan_rebellion = yes
	}
	else_if = {
		limit = { event_target:civwar_rebels = { has_country_flag = sec_rebel_country } }
		set_timed_country_flag = { flag = subject_civwar_timed_flag days = 7 }
		get_declare_war_sec_rebellion = yes
	}
	else_if = {
		limit = { event_target:civwar_rebels = { has_country_flag = plan_slave_rebel_country } }
		set_timed_country_flag = { flag = subject_slavewar_timed_flag days = 7 }
		get_declare_war_plan_slave_rebellion = yes
	}
	else_if = {
		limit = { event_target:civwar_rebels = { has_country_flag = sec_slave_rebel_country } }
		set_timed_country_flag = { flag = subject_slavewar_timed_flag days = 7 }
		get_declare_war_sec_slave_rebellion = yes
	}
	else = {
		set_timed_country_flag = { flag = subject_civwar_timed_flag days = 7 }
		get_declare_war_civwar = yes
	}

	remove_country_flag = entered_war_as_attacker
}

#####################

get_subject_choice_list = {
	random_list = {
		15 = { # Does Nothing
			modifier = {
				factor = 0
				OR = {
					# Subjects this strong should always make a play
					check_variable = { which = subject_power_ratio value >= 0.85 }
					NOT = { # Subjects have to do something if they no dont border the original overlord
						any_system_within_border = {
							closest_system = {
								limit = {
									exists = space_owner
									space_owner = { is_same_value = event_target:civwar_originator }
								}
								use_bypasses = yes
								max_steps = 1
							}
						}
					}
				}
			}
			modifier = {
				factor = 0.5
				check_variable = { which = subject_power_ratio value >= 0.75 }
				check_variable = { which = subject_power_ratio value < 0.85 }
			}
			modifier = {
				factor = 0.8
				check_variable = { which = subject_power_ratio value >= 0.6 }
				check_variable = { which = subject_power_ratio value < 0.75 }
			}
		}
		50 = { # Declares Independence
			set_timed_country_flag = { flag = subject_free_from_@root days = 90 }
			if = {
				limit = { root = { any_war = { using_war_goal = { type = wg_assert_overlordship owner = root } } } }
				root = {
					random_war = {
						limit = { using_war_goal = { type = wg_assert_overlordship owner = root } }
						save_event_target_as = indy_join_war
					}
				}
				join_war_on_side = {
					war = event_target:indy_join_war
					side = attackers
				}
			}
			else = {
				declare_war = {
					target = root
					attacker_war_goal = "wg_independence"
					effect = {
						every_war_participant = {
							limit = {
								has_overlord = root
								is_war_leader = no
							}
							prev = { remove_war_participant = prev }
						}
					}
				}
			}
			modifier = {
				factor = 0.1
				check_variable = { which = subject_power_ratio value < 0.4 }
			}
			modifier = {
				factor = 0.5
				check_variable = { which = subject_power_ratio value >= 0.4 }
				check_variable = { which = subject_power_ratio value < 0.6 }
			}
			modifier = {
				factor = 5 # Subjects this strong should try it
				check_variable = { which = subject_power_ratio value >= 0.85 }
			}
		}
		18 = { # Help Overlord in exchange for independence
			set_timed_country_flag = { flag = subject_helps_overlord_@root years = 1 }
			set_country_flag = helped_overlord_sub
			modifier = {
				factor = 0
				OR = {
					NAND = { # Can only happen if the subjects dont have much power, but combined with the overlord they do
						check_variable = { which = subject_power_ratio value <= 0.3 }
						check_variable = { which = subject_with_mother_power_ratio value >= 0.7 }
					}
					NOR = { # Subjects cant help overlord if they dont border them or the rebels (wont ever happen with WRB, but could in Vanilla)
						has_country_flag = vas_borders_rebs_of_@root
						any_system_within_border = {
							closest_system = {
								limit = {
									exists = space_owner
									space_owner = { is_same_value = event_target:civwar_originator }
								}
								use_bypasses = yes
								max_steps = 1
							}
						}
					}
				}
			}
		}
		2 = { # Help Rebels in exchange for independence
			# For succession conflicts, this is slightly broken in that
			# they may join in a war against a target that is not bordering
			# them. I will work on it eventually.
			set_timed_country_flag = { flag = subject_helps_rebels_@root years = 1 }
			set_country_flag = helped_rebels_sub
			if = { # If there is a VERU war going on over claiming this subject, invalidate it
				limit = { has_country_flag = chosen_border_subject_@root }
				remove_country_flag = chosen_border_subject_@root
				root = {
					random_war = {
						limit = { using_war_goal = { type = wg_claim_subject owner = root } }
						every_war_participant = { prev = { remove_war_participant = prev } }
					}
				}
			}
			modifier = {  # Should be likely if subjects dont have much power, but combined with the rebels they do
				factor = 20
				check_variable = { which = subject_power_ratio value <= 0.4 }
				check_variable = { which = combined_power_ratio value >= 0.7 }
			}
			modifier = {
				factor = 0
				NOR = { # Subjects cant help rebels if they no dont border them or the overlord (wont ever happen with WRB, but could in Vanilla)
					has_country_flag = vas_borders_rebs_of_@root
					any_system_within_border = {
						closest_system = {
							limit = {
								exists = space_owner
								space_owner = { is_same_value = event_target:civwar_originator }
							}
							use_bypasses = yes
							max_steps = 1
						}
					}
				}
			}
		}
		10 = { # Pledge Fealty to Rebels
			set_timed_country_flag = { flag = subject_joins_rebels_@root years = 1 }
			every_war = {
				random_war_participant = {
					limit = { is_same_empire = prevprev }
					prev = { remove_war_participant = prev }
				}
			}
			if = { # If there is a VERU war going on over claiming this subject, invalidate it
				limit = { has_country_flag = chosen_border_subject_@root }
				remove_country_flag = chosen_border_subject_@root
				root = {
					random_war = {
						limit = { using_war_goal = { type = wg_claim_subject owner = root } }
						every_war_participant = { prev = { remove_war_participant = prev } }
					}
				}
			}
			set_subject_of = {
				who = event_target:rebel_borders_subject
				preset = preset_tributary
			}
			modifier = {
				factor = 0.1
				check_variable = { which = combined_power_ratio value < 0.5 } 	# If they are this weak combined, the subject should be smart and stay out
			}
			modifier = {
				factor = 0
				OR = {
					NOT = { has_country_flag = vas_borders_rebs_of_@root }  		# If they dont border the rebels, they cant join them
					opinion = { who = root value >= 300 } 							# If they have Positive (game Positive not literal positive) relations with their overlord, they shouldn't join the rebels
				}
			}
			modifier = {
				factor = 1.5
				opinion = { who = root value <= -300 }
				opinion = { who = root value > -750 }
			}
			modifier = {
				factor = 2
				opinion = { who = root value <= -750 }
			}
		}
		5 = { # Joins Overlord
			set_timed_country_flag = { flag = subject_joins_overlord_@root years = 1 }
			modifier = {
				factor = 0
				OR = {
					check_variable = { which = subject_with_mother_power_ratio value <= 0.9 } # If victory is not almost assured in helping the motherland, the subject wont
					opinion = { who = root value < 750 } 		# If they don't have Excellent relations with their overlord, they shouldn't help
					NOT = { 									# Subjects cant help overlord if they dont border them
						any_system_within_border = {
							closest_system = {
								limit = {
									exists = space_owner
									space_owner = { is_same_value = event_target:civwar_originator }
								}
								use_bypasses = yes
								max_steps = 1
							}
						}
					}
				}
			}
			modifier = {
				factor = 2
				opinion = { who = root value >= 1500 }
			}
		}
	}
}

get_traitor_outcome = {
	if = {
		limit = {
			any_country = {
				is_country_type_with_subjects = yes
				has_communications = root
				OR = {
					is_homicidal = no
					is_organic_zealots = yes
				}
				NOR = {
					is_loyal_to = root
					is_overlord_to = root
					is_custodial_to = root
					has_country_flag = traitor_already_asked_@event_target:defeated_traitor
				}
			}
		}
		random_list = {
			40 = { # Death
				random_list = { # Suicide
					25 = { set_country_flag = death_by_hanging }
					15 = { set_country_flag = death_by_jumping }
					15 = { set_country_flag = death_by_spacing }
					30 = { set_country_flag = death_by_gun }
					10 = { set_country_flag = death_by_poison }
					# Those around them saw the end, killed the leader to gain lesser punishment
					5 = { set_country_flag = death_by_coup }
				}
				country_event = { id = civend.1001 }
			}
			45 = { # Flees to work for foreign empire
				country_event = { id = civend.1003 }
				log = "FLEEING: \\[event_target:defeated_traitor.GetName]"
				log = "FROM: \\[event_target:traitor_home_country.GetName]"

			}
			15 = { # Captured
				random_list = {
					# Those around them saw the end, killed the leader to gain lesser punishment
					15 = { set_country_flag = captured_by_coup }
					# Captured by special forces
					85 = { set_country_flag = captured_normally }
				}
				country_event = { id = civend.1004 days = 5 }
			}
		}
	}
	else = {
		random_list = {
			65 = { # Death
				random_list = {
					25 = { set_country_flag = death_by_hanging }
					15 = { set_country_flag = death_by_jumping }
					15 = { set_country_flag = death_by_spacing }
					30 = { set_country_flag = death_by_gun }
					10 = { set_country_flag = death_by_poison }
					# Those around them saw the end, killed the leader to gain lesser punishment
					5 = { set_country_flag = death_by_coup }
				}
				country_event = { id = civend.1001 }
			}
			35 = { # Captured
				random_list = {
					# Those around them saw the end, killed the leader to gain lesser punishment
					15 = { set_country_flag = captured_by_coup }
					# Captured by special forces
					85 = { set_country_flag = captured_normally }
				}
				country_event = { id = civend.1004 }
			}
		}
	}
}

######################
# Separatist Factions

# Defeated/Extinct Nations
get_separatist_faction_nat = {
	set_country_flag = has_nats
		 if = { limit = { NOT = { exists = event_target:nat_separatist_1 } } save_global_event_target_as = nat_separatist_1 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_2 } } save_global_event_target_as = nat_separatist_2 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_3 } } save_global_event_target_as = nat_separatist_3 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_4 } } save_global_event_target_as = nat_separatist_4 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_5 } } save_global_event_target_as = nat_separatist_5 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_6 } } save_global_event_target_as = nat_separatist_6 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_7 } } save_global_event_target_as = nat_separatist_7 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_8 } } save_global_event_target_as = nat_separatist_8 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_9 } } save_global_event_target_as = nat_separatist_9 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_10 } } save_global_event_target_as = nat_separatist_10 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_11 } } save_global_event_target_as = nat_separatist_11 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_12 } } save_global_event_target_as = nat_separatist_12 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_13 } } save_global_event_target_as = nat_separatist_13 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_14 } } save_global_event_target_as = nat_separatist_14 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_15 } } save_global_event_target_as = nat_separatist_15 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_16 } } save_global_event_target_as = nat_separatist_16 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_17 } } save_global_event_target_as = nat_separatist_17 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_18 } } save_global_event_target_as = nat_separatist_18 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_19 } } save_global_event_target_as = nat_separatist_19 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_20 } } save_global_event_target_as = nat_separatist_20 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_21 } } save_global_event_target_as = nat_separatist_21 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_22 } } save_global_event_target_as = nat_separatist_22 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_23 } } save_global_event_target_as = nat_separatist_23 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_24 } } save_global_event_target_as = nat_separatist_24 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_25 } } save_global_event_target_as = nat_separatist_25 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_26 } } save_global_event_target_as = nat_separatist_26 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_27 } } save_global_event_target_as = nat_separatist_27 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_28 } } save_global_event_target_as = nat_separatist_28 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_29 } } save_global_event_target_as = nat_separatist_29 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_30 } } save_global_event_target_as = nat_separatist_30 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_31 } } save_global_event_target_as = nat_separatist_31 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_32 } } save_global_event_target_as = nat_separatist_32 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_33 } } save_global_event_target_as = nat_separatist_33 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_34 } } save_global_event_target_as = nat_separatist_34 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_35 } } save_global_event_target_as = nat_separatist_35 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_36 } } save_global_event_target_as = nat_separatist_36 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_37 } } save_global_event_target_as = nat_separatist_37 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_38 } } save_global_event_target_as = nat_separatist_38 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_39 } } save_global_event_target_as = nat_separatist_39 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_40 } } save_global_event_target_as = nat_separatist_40 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_41 } } save_global_event_target_as = nat_separatist_41 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_42 } } save_global_event_target_as = nat_separatist_42 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_43 } } save_global_event_target_as = nat_separatist_43 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_44 } } save_global_event_target_as = nat_separatist_44 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_45 } } save_global_event_target_as = nat_separatist_45 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_46 } } save_global_event_target_as = nat_separatist_46 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_47 } } save_global_event_target_as = nat_separatist_47 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_48 } } save_global_event_target_as = nat_separatist_48 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_49 } } save_global_event_target_as = nat_separatist_49 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_50 } } save_global_event_target_as = nat_separatist_50 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_51 } } save_global_event_target_as = nat_separatist_51 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_52 } } save_global_event_target_as = nat_separatist_52 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_53 } } save_global_event_target_as = nat_separatist_53 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_54 } } save_global_event_target_as = nat_separatist_54 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_55 } } save_global_event_target_as = nat_separatist_55 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_56 } } save_global_event_target_as = nat_separatist_56 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_57 } } save_global_event_target_as = nat_separatist_57 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_58 } } save_global_event_target_as = nat_separatist_58 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_59 } } save_global_event_target_as = nat_separatist_59 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_60 } } save_global_event_target_as = nat_separatist_60 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_61 } } save_global_event_target_as = nat_separatist_61 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_62 } } save_global_event_target_as = nat_separatist_62 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_63 } } save_global_event_target_as = nat_separatist_63 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_64 } } save_global_event_target_as = nat_separatist_64 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_65 } } save_global_event_target_as = nat_separatist_65 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_66 } } save_global_event_target_as = nat_separatist_66 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_67 } } save_global_event_target_as = nat_separatist_67 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_68 } } save_global_event_target_as = nat_separatist_68 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_69 } } save_global_event_target_as = nat_separatist_69 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_70 } } save_global_event_target_as = nat_separatist_70 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_71 } } save_global_event_target_as = nat_separatist_71 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_72 } } save_global_event_target_as = nat_separatist_72 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_73 } } save_global_event_target_as = nat_separatist_73 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_74 } } save_global_event_target_as = nat_separatist_74 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_75 } } save_global_event_target_as = nat_separatist_75 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_76 } } save_global_event_target_as = nat_separatist_76 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_77 } } save_global_event_target_as = nat_separatist_77 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_78 } } save_global_event_target_as = nat_separatist_78 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_79 } } save_global_event_target_as = nat_separatist_79 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_80 } } save_global_event_target_as = nat_separatist_80 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_81 } } save_global_event_target_as = nat_separatist_81 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_82 } } save_global_event_target_as = nat_separatist_82 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_83 } } save_global_event_target_as = nat_separatist_83 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_84 } } save_global_event_target_as = nat_separatist_84 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_85 } } save_global_event_target_as = nat_separatist_85 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_86 } } save_global_event_target_as = nat_separatist_86 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_87 } } save_global_event_target_as = nat_separatist_87 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_88 } } save_global_event_target_as = nat_separatist_88 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_89 } } save_global_event_target_as = nat_separatist_89 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_90 } } save_global_event_target_as = nat_separatist_90 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_91 } } save_global_event_target_as = nat_separatist_91 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_92 } } save_global_event_target_as = nat_separatist_92 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_93 } } save_global_event_target_as = nat_separatist_93 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_94 } } save_global_event_target_as = nat_separatist_94 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_95 } } save_global_event_target_as = nat_separatist_95 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_96 } } save_global_event_target_as = nat_separatist_96 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_97 } } save_global_event_target_as = nat_separatist_97 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_98 } } save_global_event_target_as = nat_separatist_98 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_99 } } save_global_event_target_as = nat_separatist_99 }
	else_if = { limit = { NOT = { exists = event_target:nat_separatist_100 } } save_global_event_target_as = nat_separatist_100 }
}

# Get Separatist Faction for Sectors
get_separatist_faction_sector = {
	every_owned_planet = {
		limit = { any_targeting_situation = { is_situation_type = situation_civstrife_sep_plan } }
		clear_variable = revolt_tick
		if = {
			limit = { is_variable_set = calm_tick }
			clear_variable = calm_tick
		}
	}
	set_sector_flag = sector_sep_active
		 if = { limit = { NOT = { exists = event_target:sec_separatist_1 } } save_global_event_target_as = sec_separatist_1 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_2 } } save_global_event_target_as = sec_separatist_2 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_3 } } save_global_event_target_as = sec_separatist_3 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_4 } } save_global_event_target_as = sec_separatist_4 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_5 } } save_global_event_target_as = sec_separatist_5 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_6 } } save_global_event_target_as = sec_separatist_6 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_7 } } save_global_event_target_as = sec_separatist_7 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_8 } } save_global_event_target_as = sec_separatist_8 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_9 } } save_global_event_target_as = sec_separatist_9 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_10 } } save_global_event_target_as = sec_separatist_10 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_11 } } save_global_event_target_as = sec_separatist_11 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_12 } } save_global_event_target_as = sec_separatist_12 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_13 } } save_global_event_target_as = sec_separatist_13 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_14 } } save_global_event_target_as = sec_separatist_14 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_15 } } save_global_event_target_as = sec_separatist_15 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_16 } } save_global_event_target_as = sec_separatist_16 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_17 } } save_global_event_target_as = sec_separatist_17 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_18 } } save_global_event_target_as = sec_separatist_18 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_19 } } save_global_event_target_as = sec_separatist_19 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_20 } } save_global_event_target_as = sec_separatist_20 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_21 } } save_global_event_target_as = sec_separatist_21 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_22 } } save_global_event_target_as = sec_separatist_22 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_23 } } save_global_event_target_as = sec_separatist_23 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_24 } } save_global_event_target_as = sec_separatist_24 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_25 } } save_global_event_target_as = sec_separatist_25 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_26 } } save_global_event_target_as = sec_separatist_26 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_27 } } save_global_event_target_as = sec_separatist_27 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_28 } } save_global_event_target_as = sec_separatist_28 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_29 } } save_global_event_target_as = sec_separatist_29 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_30 } } save_global_event_target_as = sec_separatist_30 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_31 } } save_global_event_target_as = sec_separatist_31 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_32 } } save_global_event_target_as = sec_separatist_32 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_33 } } save_global_event_target_as = sec_separatist_33 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_34 } } save_global_event_target_as = sec_separatist_34 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_35 } } save_global_event_target_as = sec_separatist_35 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_36 } } save_global_event_target_as = sec_separatist_36 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_37 } } save_global_event_target_as = sec_separatist_37 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_38 } } save_global_event_target_as = sec_separatist_38 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_39 } } save_global_event_target_as = sec_separatist_39 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_40 } } save_global_event_target_as = sec_separatist_40 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_41 } } save_global_event_target_as = sec_separatist_41 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_42 } } save_global_event_target_as = sec_separatist_42 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_43 } } save_global_event_target_as = sec_separatist_43 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_44 } } save_global_event_target_as = sec_separatist_44 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_45 } } save_global_event_target_as = sec_separatist_45 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_46 } } save_global_event_target_as = sec_separatist_46 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_47 } } save_global_event_target_as = sec_separatist_47 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_48 } } save_global_event_target_as = sec_separatist_48 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_49 } } save_global_event_target_as = sec_separatist_49 }
	else_if = { limit = { NOT = { exists = event_target:sec_separatist_50 } } save_global_event_target_as = sec_separatist_50 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_51 } } save_global_event_target_as = sec_separatist_51 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_52 } } save_global_event_target_as = sec_separatist_52 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_53 } } save_global_event_target_as = sec_separatist_53 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_54 } } save_global_event_target_as = sec_separatist_54 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_55 } } save_global_event_target_as = sec_separatist_55 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_56 } } save_global_event_target_as = sec_separatist_56 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_57 } } save_global_event_target_as = sec_separatist_57 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_58 } } save_global_event_target_as = sec_separatist_58 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_59 } } save_global_event_target_as = sec_separatist_59 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_60 } } save_global_event_target_as = sec_separatist_60 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_61 } } save_global_event_target_as = sec_separatist_61 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_62 } } save_global_event_target_as = sec_separatist_62 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_63 } } save_global_event_target_as = sec_separatist_63 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_64 } } save_global_event_target_as = sec_separatist_64 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_65 } } save_global_event_target_as = sec_separatist_65 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_66 } } save_global_event_target_as = sec_separatist_66 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_67 } } save_global_event_target_as = sec_separatist_67 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_68 } } save_global_event_target_as = sec_separatist_68 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_69 } } save_global_event_target_as = sec_separatist_69 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_70 } } save_global_event_target_as = sec_separatist_70 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_71 } } save_global_event_target_as = sec_separatist_71 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_72 } } save_global_event_target_as = sec_separatist_72 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_73 } } save_global_event_target_as = sec_separatist_73 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_74 } } save_global_event_target_as = sec_separatist_74 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_75 } } save_global_event_target_as = sec_separatist_75 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_76 } } save_global_event_target_as = sec_separatist_76 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_77 } } save_global_event_target_as = sec_separatist_77 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_78 } } save_global_event_target_as = sec_separatist_78 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_79 } } save_global_event_target_as = sec_separatist_79 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_80 } } save_global_event_target_as = sec_separatist_80 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_81 } } save_global_event_target_as = sec_separatist_81 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_82 } } save_global_event_target_as = sec_separatist_82 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_83 } } save_global_event_target_as = sec_separatist_83 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_84 } } save_global_event_target_as = sec_separatist_84 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_85 } } save_global_event_target_as = sec_separatist_85 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_86 } } save_global_event_target_as = sec_separatist_86 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_87 } } save_global_event_target_as = sec_separatist_87 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_88 } } save_global_event_target_as = sec_separatist_88 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_89 } } save_global_event_target_as = sec_separatist_89 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_90 } } save_global_event_target_as = sec_separatist_90 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_91 } } save_global_event_target_as = sec_separatist_91 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_92 } } save_global_event_target_as = sec_separatist_92 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_93 } } save_global_event_target_as = sec_separatist_93 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_94 } } save_global_event_target_as = sec_separatist_94 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_95 } } save_global_event_target_as = sec_separatist_95 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_96 } } save_global_event_target_as = sec_separatist_96 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_97 } } save_global_event_target_as = sec_separatist_97 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_98 } } save_global_event_target_as = sec_separatist_98 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_99 } } save_global_event_target_as = sec_separatist_99 }
	# else_if = { limit = { NOT = { exists = event_target:sec_separatist_100 } } save_global_event_target_as = sec_separatist_100 }
}

# Get Isolationist Separatist Faction for Sectors
get_iso_separatist_faction_sector = {
	every_owned_planet = {
		limit = { any_targeting_situation = { is_situation_type = situation_civstrife_sep_plan } }
		clear_variable = revolt_tick
		if = {
			limit = { is_variable_set = calm_tick }
			clear_variable = calm_tick
		}
	}
	set_sector_flag = sector_sep_active
		 if = { limit = { NOT = { exists = event_target:sec_iso_separatist_1 } } save_global_event_target_as = sec_iso_separatist_1 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_2 } } save_global_event_target_as = sec_iso_separatist_2 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_3 } } save_global_event_target_as = sec_iso_separatist_3 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_4 } } save_global_event_target_as = sec_iso_separatist_4 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_5 } } save_global_event_target_as = sec_iso_separatist_5 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_6 } } save_global_event_target_as = sec_iso_separatist_6 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_7 } } save_global_event_target_as = sec_iso_separatist_7 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_8 } } save_global_event_target_as = sec_iso_separatist_8 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_9 } } save_global_event_target_as = sec_iso_separatist_9 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_10 } } save_global_event_target_as = sec_iso_separatist_10 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_11 } } save_global_event_target_as = sec_iso_separatist_11 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_12 } } save_global_event_target_as = sec_iso_separatist_12 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_13 } } save_global_event_target_as = sec_iso_separatist_13 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_14 } } save_global_event_target_as = sec_iso_separatist_14 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_15 } } save_global_event_target_as = sec_iso_separatist_15 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_16 } } save_global_event_target_as = sec_iso_separatist_16 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_17 } } save_global_event_target_as = sec_iso_separatist_17 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_18 } } save_global_event_target_as = sec_iso_separatist_18 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_19 } } save_global_event_target_as = sec_iso_separatist_19 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_20 } } save_global_event_target_as = sec_iso_separatist_20 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_21 } } save_global_event_target_as = sec_iso_separatist_21 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_22 } } save_global_event_target_as = sec_iso_separatist_22 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_23 } } save_global_event_target_as = sec_iso_separatist_23 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_24 } } save_global_event_target_as = sec_iso_separatist_24 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_25 } } save_global_event_target_as = sec_iso_separatist_25 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_26 } } save_global_event_target_as = sec_iso_separatist_26 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_27 } } save_global_event_target_as = sec_iso_separatist_27 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_28 } } save_global_event_target_as = sec_iso_separatist_28 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_29 } } save_global_event_target_as = sec_iso_separatist_29 }
	else_if = { limit = { NOT = { exists = event_target:sec_iso_separatist_30 } } save_global_event_target_as = sec_iso_separatist_30 }
}

###########

# Defeated/Extinct Nations
remove_nat_event_target = {
	if = { limit = { exists = event_target:nat_separatist_1 is_same_value = event_target:nat_separatist_1 } clear_global_event_target = nat_separatist_1 }
	else_if = { limit = { exists = event_target:nat_separatist_2 is_same_value = event_target:nat_separatist_2 } clear_global_event_target = nat_separatist_2 }
	else_if = { limit = { exists = event_target:nat_separatist_3 is_same_value = event_target:nat_separatist_3 } clear_global_event_target = nat_separatist_3 }
	else_if = { limit = { exists = event_target:nat_separatist_4 is_same_value = event_target:nat_separatist_4 } clear_global_event_target = nat_separatist_4 }
	else_if = { limit = { exists = event_target:nat_separatist_5 is_same_value = event_target:nat_separatist_5 } clear_global_event_target = nat_separatist_5 }
	else_if = { limit = { exists = event_target:nat_separatist_6 is_same_value = event_target:nat_separatist_6 } clear_global_event_target = nat_separatist_6 }
	else_if = { limit = { exists = event_target:nat_separatist_7 is_same_value = event_target:nat_separatist_7 } clear_global_event_target = nat_separatist_7 }
	else_if = { limit = { exists = event_target:nat_separatist_8 is_same_value = event_target:nat_separatist_8 } clear_global_event_target = nat_separatist_8 }
	else_if = { limit = { exists = event_target:nat_separatist_9 is_same_value = event_target:nat_separatist_9 } clear_global_event_target = nat_separatist_9 }
	else_if = { limit = { exists = event_target:nat_separatist_10 is_same_value = event_target:nat_separatist_10 } clear_global_event_target = nat_separatist_10 }
	else_if = { limit = { exists = event_target:nat_separatist_11 is_same_value = event_target:nat_separatist_11 } clear_global_event_target = nat_separatist_11 }
	else_if = { limit = { exists = event_target:nat_separatist_12 is_same_value = event_target:nat_separatist_12 } clear_global_event_target = nat_separatist_12 }
	else_if = { limit = { exists = event_target:nat_separatist_13 is_same_value = event_target:nat_separatist_13 } clear_global_event_target = nat_separatist_13 }
	else_if = { limit = { exists = event_target:nat_separatist_14 is_same_value = event_target:nat_separatist_14 } clear_global_event_target = nat_separatist_14 }
	else_if = { limit = { exists = event_target:nat_separatist_15 is_same_value = event_target:nat_separatist_15 } clear_global_event_target = nat_separatist_15 }
	else_if = { limit = { exists = event_target:nat_separatist_16 is_same_value = event_target:nat_separatist_16 } clear_global_event_target = nat_separatist_16 }
	else_if = { limit = { exists = event_target:nat_separatist_17 is_same_value = event_target:nat_separatist_17 } clear_global_event_target = nat_separatist_17 }
	else_if = { limit = { exists = event_target:nat_separatist_18 is_same_value = event_target:nat_separatist_18 } clear_global_event_target = nat_separatist_18 }
	else_if = { limit = { exists = event_target:nat_separatist_19 is_same_value = event_target:nat_separatist_19 } clear_global_event_target = nat_separatist_19 }
	else_if = { limit = { exists = event_target:nat_separatist_20 is_same_value = event_target:nat_separatist_20 } clear_global_event_target = nat_separatist_20 }
	else_if = { limit = { exists = event_target:nat_separatist_21 is_same_value = event_target:nat_separatist_21 } clear_global_event_target = nat_separatist_21 }
	else_if = { limit = { exists = event_target:nat_separatist_22 is_same_value = event_target:nat_separatist_22 } clear_global_event_target = nat_separatist_22 }
	else_if = { limit = { exists = event_target:nat_separatist_23 is_same_value = event_target:nat_separatist_23 } clear_global_event_target = nat_separatist_23 }
	else_if = { limit = { exists = event_target:nat_separatist_24 is_same_value = event_target:nat_separatist_24 } clear_global_event_target = nat_separatist_24 }
	else_if = { limit = { exists = event_target:nat_separatist_25 is_same_value = event_target:nat_separatist_25 } clear_global_event_target = nat_separatist_25 }
	else_if = { limit = { exists = event_target:nat_separatist_26 is_same_value = event_target:nat_separatist_26 } clear_global_event_target = nat_separatist_26 }
	else_if = { limit = { exists = event_target:nat_separatist_27 is_same_value = event_target:nat_separatist_27 } clear_global_event_target = nat_separatist_27 }
	else_if = { limit = { exists = event_target:nat_separatist_28 is_same_value = event_target:nat_separatist_28 } clear_global_event_target = nat_separatist_28 }
	else_if = { limit = { exists = event_target:nat_separatist_29 is_same_value = event_target:nat_separatist_29 } clear_global_event_target = nat_separatist_29 }
	else_if = { limit = { exists = event_target:nat_separatist_30 is_same_value = event_target:nat_separatist_30 } clear_global_event_target = nat_separatist_30 }
	else_if = { limit = { exists = event_target:nat_separatist_31 is_same_value = event_target:nat_separatist_31 } clear_global_event_target = nat_separatist_31 }
	else_if = { limit = { exists = event_target:nat_separatist_32 is_same_value = event_target:nat_separatist_32 } clear_global_event_target = nat_separatist_32 }
	else_if = { limit = { exists = event_target:nat_separatist_33 is_same_value = event_target:nat_separatist_33 } clear_global_event_target = nat_separatist_33 }
	else_if = { limit = { exists = event_target:nat_separatist_34 is_same_value = event_target:nat_separatist_34 } clear_global_event_target = nat_separatist_34 }
	else_if = { limit = { exists = event_target:nat_separatist_35 is_same_value = event_target:nat_separatist_35 } clear_global_event_target = nat_separatist_35 }
	else_if = { limit = { exists = event_target:nat_separatist_36 is_same_value = event_target:nat_separatist_36 } clear_global_event_target = nat_separatist_36 }
	else_if = { limit = { exists = event_target:nat_separatist_37 is_same_value = event_target:nat_separatist_37 } clear_global_event_target = nat_separatist_37 }
	else_if = { limit = { exists = event_target:nat_separatist_38 is_same_value = event_target:nat_separatist_38 } clear_global_event_target = nat_separatist_38 }
	else_if = { limit = { exists = event_target:nat_separatist_39 is_same_value = event_target:nat_separatist_39 } clear_global_event_target = nat_separatist_39 }
	else_if = { limit = { exists = event_target:nat_separatist_40 is_same_value = event_target:nat_separatist_40 } clear_global_event_target = nat_separatist_40 }
	else_if = { limit = { exists = event_target:nat_separatist_41 is_same_value = event_target:nat_separatist_41 } clear_global_event_target = nat_separatist_41 }
	else_if = { limit = { exists = event_target:nat_separatist_42 is_same_value = event_target:nat_separatist_42 } clear_global_event_target = nat_separatist_42 }
	else_if = { limit = { exists = event_target:nat_separatist_43 is_same_value = event_target:nat_separatist_43 } clear_global_event_target = nat_separatist_43 }
	else_if = { limit = { exists = event_target:nat_separatist_44 is_same_value = event_target:nat_separatist_44 } clear_global_event_target = nat_separatist_44 }
	else_if = { limit = { exists = event_target:nat_separatist_45 is_same_value = event_target:nat_separatist_45 } clear_global_event_target = nat_separatist_45 }
	else_if = { limit = { exists = event_target:nat_separatist_46 is_same_value = event_target:nat_separatist_46 } clear_global_event_target = nat_separatist_46 }
	else_if = { limit = { exists = event_target:nat_separatist_47 is_same_value = event_target:nat_separatist_47 } clear_global_event_target = nat_separatist_47 }
	else_if = { limit = { exists = event_target:nat_separatist_48 is_same_value = event_target:nat_separatist_48 } clear_global_event_target = nat_separatist_48 }
	else_if = { limit = { exists = event_target:nat_separatist_49 is_same_value = event_target:nat_separatist_49 } clear_global_event_target = nat_separatist_49 }
	else_if = { limit = { exists = event_target:nat_separatist_50 is_same_value = event_target:nat_separatist_50 } clear_global_event_target = nat_separatist_50 }
	else_if = { limit = { exists = event_target:nat_separatist_51 is_same_value = event_target:nat_separatist_51 } clear_global_event_target = nat_separatist_51 }
	else_if = { limit = { exists = event_target:nat_separatist_52 is_same_value = event_target:nat_separatist_52 } clear_global_event_target = nat_separatist_52 }
	else_if = { limit = { exists = event_target:nat_separatist_53 is_same_value = event_target:nat_separatist_53 } clear_global_event_target = nat_separatist_53 }
	else_if = { limit = { exists = event_target:nat_separatist_54 is_same_value = event_target:nat_separatist_54 } clear_global_event_target = nat_separatist_54 }
	else_if = { limit = { exists = event_target:nat_separatist_55 is_same_value = event_target:nat_separatist_55 } clear_global_event_target = nat_separatist_55 }
	else_if = { limit = { exists = event_target:nat_separatist_56 is_same_value = event_target:nat_separatist_56 } clear_global_event_target = nat_separatist_56 }
	else_if = { limit = { exists = event_target:nat_separatist_57 is_same_value = event_target:nat_separatist_57 } clear_global_event_target = nat_separatist_57 }
	else_if = { limit = { exists = event_target:nat_separatist_58 is_same_value = event_target:nat_separatist_58 } clear_global_event_target = nat_separatist_58 }
	else_if = { limit = { exists = event_target:nat_separatist_59 is_same_value = event_target:nat_separatist_59 } clear_global_event_target = nat_separatist_59 }
	else_if = { limit = { exists = event_target:nat_separatist_60 is_same_value = event_target:nat_separatist_60 } clear_global_event_target = nat_separatist_60 }
	else_if = { limit = { exists = event_target:nat_separatist_61 is_same_value = event_target:nat_separatist_61 } clear_global_event_target = nat_separatist_61 }
	else_if = { limit = { exists = event_target:nat_separatist_62 is_same_value = event_target:nat_separatist_62 } clear_global_event_target = nat_separatist_62 }
	else_if = { limit = { exists = event_target:nat_separatist_63 is_same_value = event_target:nat_separatist_63 } clear_global_event_target = nat_separatist_63 }
	else_if = { limit = { exists = event_target:nat_separatist_64 is_same_value = event_target:nat_separatist_64 } clear_global_event_target = nat_separatist_64 }
	else_if = { limit = { exists = event_target:nat_separatist_65 is_same_value = event_target:nat_separatist_65 } clear_global_event_target = nat_separatist_65 }
	else_if = { limit = { exists = event_target:nat_separatist_66 is_same_value = event_target:nat_separatist_66 } clear_global_event_target = nat_separatist_66 }
	else_if = { limit = { exists = event_target:nat_separatist_67 is_same_value = event_target:nat_separatist_67 } clear_global_event_target = nat_separatist_67 }
	else_if = { limit = { exists = event_target:nat_separatist_68 is_same_value = event_target:nat_separatist_68 } clear_global_event_target = nat_separatist_68 }
	else_if = { limit = { exists = event_target:nat_separatist_69 is_same_value = event_target:nat_separatist_69 } clear_global_event_target = nat_separatist_69 }
	else_if = { limit = { exists = event_target:nat_separatist_70 is_same_value = event_target:nat_separatist_70 } clear_global_event_target = nat_separatist_70 }
	else_if = { limit = { exists = event_target:nat_separatist_71 is_same_value = event_target:nat_separatist_71 } clear_global_event_target = nat_separatist_71 }
	else_if = { limit = { exists = event_target:nat_separatist_72 is_same_value = event_target:nat_separatist_72 } clear_global_event_target = nat_separatist_72 }
	else_if = { limit = { exists = event_target:nat_separatist_73 is_same_value = event_target:nat_separatist_73 } clear_global_event_target = nat_separatist_73 }
	else_if = { limit = { exists = event_target:nat_separatist_74 is_same_value = event_target:nat_separatist_74 } clear_global_event_target = nat_separatist_74 }
	else_if = { limit = { exists = event_target:nat_separatist_75 is_same_value = event_target:nat_separatist_75 } clear_global_event_target = nat_separatist_75 }
	else_if = { limit = { exists = event_target:nat_separatist_76 is_same_value = event_target:nat_separatist_76 } clear_global_event_target = nat_separatist_76 }
	else_if = { limit = { exists = event_target:nat_separatist_77 is_same_value = event_target:nat_separatist_77 } clear_global_event_target = nat_separatist_77 }
	else_if = { limit = { exists = event_target:nat_separatist_78 is_same_value = event_target:nat_separatist_78 } clear_global_event_target = nat_separatist_78 }
	else_if = { limit = { exists = event_target:nat_separatist_79 is_same_value = event_target:nat_separatist_79 } clear_global_event_target = nat_separatist_79 }
	else_if = { limit = { exists = event_target:nat_separatist_80 is_same_value = event_target:nat_separatist_80 } clear_global_event_target = nat_separatist_80 }
	else_if = { limit = { exists = event_target:nat_separatist_81 is_same_value = event_target:nat_separatist_81 } clear_global_event_target = nat_separatist_81 }
	else_if = { limit = { exists = event_target:nat_separatist_82 is_same_value = event_target:nat_separatist_82 } clear_global_event_target = nat_separatist_82 }
	else_if = { limit = { exists = event_target:nat_separatist_83 is_same_value = event_target:nat_separatist_83 } clear_global_event_target = nat_separatist_83 }
	else_if = { limit = { exists = event_target:nat_separatist_84 is_same_value = event_target:nat_separatist_84 } clear_global_event_target = nat_separatist_84 }
	else_if = { limit = { exists = event_target:nat_separatist_85 is_same_value = event_target:nat_separatist_85 } clear_global_event_target = nat_separatist_85 }
	else_if = { limit = { exists = event_target:nat_separatist_86 is_same_value = event_target:nat_separatist_86 } clear_global_event_target = nat_separatist_86 }
	else_if = { limit = { exists = event_target:nat_separatist_87 is_same_value = event_target:nat_separatist_87 } clear_global_event_target = nat_separatist_87 }
	else_if = { limit = { exists = event_target:nat_separatist_88 is_same_value = event_target:nat_separatist_88 } clear_global_event_target = nat_separatist_88 }
	else_if = { limit = { exists = event_target:nat_separatist_89 is_same_value = event_target:nat_separatist_89 } clear_global_event_target = nat_separatist_89 }
	else_if = { limit = { exists = event_target:nat_separatist_90 is_same_value = event_target:nat_separatist_90 } clear_global_event_target = nat_separatist_90 }
	else_if = { limit = { exists = event_target:nat_separatist_91 is_same_value = event_target:nat_separatist_91 } clear_global_event_target = nat_separatist_91 }
	else_if = { limit = { exists = event_target:nat_separatist_92 is_same_value = event_target:nat_separatist_92 } clear_global_event_target = nat_separatist_92 }
	else_if = { limit = { exists = event_target:nat_separatist_93 is_same_value = event_target:nat_separatist_93 } clear_global_event_target = nat_separatist_93 }
	else_if = { limit = { exists = event_target:nat_separatist_94 is_same_value = event_target:nat_separatist_94 } clear_global_event_target = nat_separatist_94 }
	else_if = { limit = { exists = event_target:nat_separatist_95 is_same_value = event_target:nat_separatist_95 } clear_global_event_target = nat_separatist_95 }
	else_if = { limit = { exists = event_target:nat_separatist_96 is_same_value = event_target:nat_separatist_96 } clear_global_event_target = nat_separatist_96 }
	else_if = { limit = { exists = event_target:nat_separatist_97 is_same_value = event_target:nat_separatist_97 } clear_global_event_target = nat_separatist_97 }
	else_if = { limit = { exists = event_target:nat_separatist_98 is_same_value = event_target:nat_separatist_98 } clear_global_event_target = nat_separatist_98 }
	else_if = { limit = { exists = event_target:nat_separatist_99 is_same_value = event_target:nat_separatist_99 } clear_global_event_target = nat_separatist_99 }
	else_if = { limit = { exists = event_target:nat_separatist_100 is_same_value = event_target:nat_separatist_100 } clear_global_event_target = nat_separatist_100 }
}

# Get Separatist Faction for Sectors
remove_sector_event_target = {
	if = { limit = { exists = event_target:sec_separatist_1 is_same_value = event_target:sec_separatist_1 } clear_global_event_target = sec_separatist_1 }
	else_if = { limit = { exists = event_target:sec_separatist_2 is_same_value = event_target:sec_separatist_2 } clear_global_event_target = sec_separatist_2 }
	else_if = { limit = { exists = event_target:sec_separatist_3 is_same_value = event_target:sec_separatist_3 } clear_global_event_target = sec_separatist_3 }
	else_if = { limit = { exists = event_target:sec_separatist_4 is_same_value = event_target:sec_separatist_4 } clear_global_event_target = sec_separatist_4 }
	else_if = { limit = { exists = event_target:sec_separatist_5 is_same_value = event_target:sec_separatist_5 } clear_global_event_target = sec_separatist_5 }
	else_if = { limit = { exists = event_target:sec_separatist_6 is_same_value = event_target:sec_separatist_6 } clear_global_event_target = sec_separatist_6 }
	else_if = { limit = { exists = event_target:sec_separatist_7 is_same_value = event_target:sec_separatist_7 } clear_global_event_target = sec_separatist_7 }
	else_if = { limit = { exists = event_target:sec_separatist_8 is_same_value = event_target:sec_separatist_8 } clear_global_event_target = sec_separatist_8 }
	else_if = { limit = { exists = event_target:sec_separatist_9 is_same_value = event_target:sec_separatist_9 } clear_global_event_target = sec_separatist_9 }
	else_if = { limit = { exists = event_target:sec_separatist_10 is_same_value = event_target:sec_separatist_10 } clear_global_event_target = sec_separatist_10 }
	else_if = { limit = { exists = event_target:sec_separatist_11 is_same_value = event_target:sec_separatist_11 } clear_global_event_target = sec_separatist_11 }
	else_if = { limit = { exists = event_target:sec_separatist_12 is_same_value = event_target:sec_separatist_12 } clear_global_event_target = sec_separatist_12 }
	else_if = { limit = { exists = event_target:sec_separatist_13 is_same_value = event_target:sec_separatist_13 } clear_global_event_target = sec_separatist_13 }
	else_if = { limit = { exists = event_target:sec_separatist_14 is_same_value = event_target:sec_separatist_14 } clear_global_event_target = sec_separatist_14 }
	else_if = { limit = { exists = event_target:sec_separatist_15 is_same_value = event_target:sec_separatist_15 } clear_global_event_target = sec_separatist_15 }
	else_if = { limit = { exists = event_target:sec_separatist_16 is_same_value = event_target:sec_separatist_16 } clear_global_event_target = sec_separatist_16 }
	else_if = { limit = { exists = event_target:sec_separatist_17 is_same_value = event_target:sec_separatist_17 } clear_global_event_target = sec_separatist_17 }
	else_if = { limit = { exists = event_target:sec_separatist_18 is_same_value = event_target:sec_separatist_18 } clear_global_event_target = sec_separatist_18 }
	else_if = { limit = { exists = event_target:sec_separatist_19 is_same_value = event_target:sec_separatist_19 } clear_global_event_target = sec_separatist_19 }
	else_if = { limit = { exists = event_target:sec_separatist_20 is_same_value = event_target:sec_separatist_20 } clear_global_event_target = sec_separatist_20 }
	else_if = { limit = { exists = event_target:sec_separatist_21 is_same_value = event_target:sec_separatist_21 } clear_global_event_target = sec_separatist_21 }
	else_if = { limit = { exists = event_target:sec_separatist_22 is_same_value = event_target:sec_separatist_22 } clear_global_event_target = sec_separatist_22 }
	else_if = { limit = { exists = event_target:sec_separatist_23 is_same_value = event_target:sec_separatist_23 } clear_global_event_target = sec_separatist_23 }
	else_if = { limit = { exists = event_target:sec_separatist_24 is_same_value = event_target:sec_separatist_24 } clear_global_event_target = sec_separatist_24 }
	else_if = { limit = { exists = event_target:sec_separatist_25 is_same_value = event_target:sec_separatist_25 } clear_global_event_target = sec_separatist_25 }
	else_if = { limit = { exists = event_target:sec_separatist_26 is_same_value = event_target:sec_separatist_26 } clear_global_event_target = sec_separatist_26 }
	else_if = { limit = { exists = event_target:sec_separatist_27 is_same_value = event_target:sec_separatist_27 } clear_global_event_target = sec_separatist_27 }
	else_if = { limit = { exists = event_target:sec_separatist_28 is_same_value = event_target:sec_separatist_28 } clear_global_event_target = sec_separatist_28 }
	else_if = { limit = { exists = event_target:sec_separatist_29 is_same_value = event_target:sec_separatist_29 } clear_global_event_target = sec_separatist_29 }
	else_if = { limit = { exists = event_target:sec_separatist_30 is_same_value = event_target:sec_separatist_30 } clear_global_event_target = sec_separatist_30 }
	else_if = { limit = { exists = event_target:sec_separatist_31 is_same_value = event_target:sec_separatist_31 } clear_global_event_target = sec_separatist_31 }
	else_if = { limit = { exists = event_target:sec_separatist_32 is_same_value = event_target:sec_separatist_32 } clear_global_event_target = sec_separatist_32 }
	else_if = { limit = { exists = event_target:sec_separatist_33 is_same_value = event_target:sec_separatist_33 } clear_global_event_target = sec_separatist_33 }
	else_if = { limit = { exists = event_target:sec_separatist_34 is_same_value = event_target:sec_separatist_34 } clear_global_event_target = sec_separatist_34 }
	else_if = { limit = { exists = event_target:sec_separatist_35 is_same_value = event_target:sec_separatist_35 } clear_global_event_target = sec_separatist_35 }
	else_if = { limit = { exists = event_target:sec_separatist_36 is_same_value = event_target:sec_separatist_36 } clear_global_event_target = sec_separatist_36 }
	else_if = { limit = { exists = event_target:sec_separatist_37 is_same_value = event_target:sec_separatist_37 } clear_global_event_target = sec_separatist_37 }
	else_if = { limit = { exists = event_target:sec_separatist_38 is_same_value = event_target:sec_separatist_38 } clear_global_event_target = sec_separatist_38 }
	else_if = { limit = { exists = event_target:sec_separatist_39 is_same_value = event_target:sec_separatist_39 } clear_global_event_target = sec_separatist_39 }
	else_if = { limit = { exists = event_target:sec_separatist_40 is_same_value = event_target:sec_separatist_40 } clear_global_event_target = sec_separatist_40 }
	else_if = { limit = { exists = event_target:sec_separatist_41 is_same_value = event_target:sec_separatist_41 } clear_global_event_target = sec_separatist_41 }
	else_if = { limit = { exists = event_target:sec_separatist_42 is_same_value = event_target:sec_separatist_42 } clear_global_event_target = sec_separatist_42 }
	else_if = { limit = { exists = event_target:sec_separatist_43 is_same_value = event_target:sec_separatist_43 } clear_global_event_target = sec_separatist_43 }
	else_if = { limit = { exists = event_target:sec_separatist_44 is_same_value = event_target:sec_separatist_44 } clear_global_event_target = sec_separatist_44 }
	else_if = { limit = { exists = event_target:sec_separatist_45 is_same_value = event_target:sec_separatist_45 } clear_global_event_target = sec_separatist_45 }
	else_if = { limit = { exists = event_target:sec_separatist_46 is_same_value = event_target:sec_separatist_46 } clear_global_event_target = sec_separatist_46 }
	else_if = { limit = { exists = event_target:sec_separatist_47 is_same_value = event_target:sec_separatist_47 } clear_global_event_target = sec_separatist_47 }
	else_if = { limit = { exists = event_target:sec_separatist_48 is_same_value = event_target:sec_separatist_48 } clear_global_event_target = sec_separatist_48 }
	else_if = { limit = { exists = event_target:sec_separatist_49 is_same_value = event_target:sec_separatist_49 } clear_global_event_target = sec_separatist_49 }
	else_if = { limit = { exists = event_target:sec_separatist_50 is_same_value = event_target:sec_separatist_50 } clear_global_event_target = sec_separatist_50 }
	# else_if = { limit = { exists = event_target:sec_separatist_51 is_same_value = event_target:sec_separatist_51 } clear_global_event_target = sec_separatist_51 }
	# else_if = { limit = { exists = event_target:sec_separatist_52 is_same_value = event_target:sec_separatist_52 } clear_global_event_target = sec_separatist_52 }
	# else_if = { limit = { exists = event_target:sec_separatist_53 is_same_value = event_target:sec_separatist_53 } clear_global_event_target = sec_separatist_53 }
	# else_if = { limit = { exists = event_target:sec_separatist_54 is_same_value = event_target:sec_separatist_54 } clear_global_event_target = sec_separatist_54 }
	# else_if = { limit = { exists = event_target:sec_separatist_55 is_same_value = event_target:sec_separatist_55 } clear_global_event_target = sec_separatist_55 }
	# else_if = { limit = { exists = event_target:sec_separatist_56 is_same_value = event_target:sec_separatist_56 } clear_global_event_target = sec_separatist_56 }
	# else_if = { limit = { exists = event_target:sec_separatist_57 is_same_value = event_target:sec_separatist_57 } clear_global_event_target = sec_separatist_57 }
	# else_if = { limit = { exists = event_target:sec_separatist_58 is_same_value = event_target:sec_separatist_58 } clear_global_event_target = sec_separatist_58 }
	# else_if = { limit = { exists = event_target:sec_separatist_59 is_same_value = event_target:sec_separatist_59 } clear_global_event_target = sec_separatist_59 }
	# else_if = { limit = { exists = event_target:sec_separatist_60 is_same_value = event_target:sec_separatist_60 } clear_global_event_target = sec_separatist_60 }
	# else_if = { limit = { exists = event_target:sec_separatist_61 is_same_value = event_target:sec_separatist_61 } clear_global_event_target = sec_separatist_61 }
	# else_if = { limit = { exists = event_target:sec_separatist_62 is_same_value = event_target:sec_separatist_62 } clear_global_event_target = sec_separatist_62 }
	# else_if = { limit = { exists = event_target:sec_separatist_63 is_same_value = event_target:sec_separatist_63 } clear_global_event_target = sec_separatist_63 }
	# else_if = { limit = { exists = event_target:sec_separatist_64 is_same_value = event_target:sec_separatist_64 } clear_global_event_target = sec_separatist_64 }
	# else_if = { limit = { exists = event_target:sec_separatist_65 is_same_value = event_target:sec_separatist_65 } clear_global_event_target = sec_separatist_65 }
	# else_if = { limit = { exists = event_target:sec_separatist_66 is_same_value = event_target:sec_separatist_66 } clear_global_event_target = sec_separatist_66 }
	# else_if = { limit = { exists = event_target:sec_separatist_67 is_same_value = event_target:sec_separatist_67 } clear_global_event_target = sec_separatist_67 }
	# else_if = { limit = { exists = event_target:sec_separatist_68 is_same_value = event_target:sec_separatist_68 } clear_global_event_target = sec_separatist_68 }
	# else_if = { limit = { exists = event_target:sec_separatist_69 is_same_value = event_target:sec_separatist_69 } clear_global_event_target = sec_separatist_69 }
	# else_if = { limit = { exists = event_target:sec_separatist_70 is_same_value = event_target:sec_separatist_70 } clear_global_event_target = sec_separatist_70 }
	# else_if = { limit = { exists = event_target:sec_separatist_71 is_same_value = event_target:sec_separatist_71 } clear_global_event_target = sec_separatist_71 }
	# else_if = { limit = { exists = event_target:sec_separatist_72 is_same_value = event_target:sec_separatist_72 } clear_global_event_target = sec_separatist_72 }
	# else_if = { limit = { exists = event_target:sec_separatist_73 is_same_value = event_target:sec_separatist_73 } clear_global_event_target = sec_separatist_73 }
	# else_if = { limit = { exists = event_target:sec_separatist_74 is_same_value = event_target:sec_separatist_74 } clear_global_event_target = sec_separatist_74 }
	# else_if = { limit = { exists = event_target:sec_separatist_75 is_same_value = event_target:sec_separatist_75 } clear_global_event_target = sec_separatist_75 }
	# else_if = { limit = { exists = event_target:sec_separatist_76 is_same_value = event_target:sec_separatist_76 } clear_global_event_target = sec_separatist_76 }
	# else_if = { limit = { exists = event_target:sec_separatist_77 is_same_value = event_target:sec_separatist_77 } clear_global_event_target = sec_separatist_77 }
	# else_if = { limit = { exists = event_target:sec_separatist_78 is_same_value = event_target:sec_separatist_78 } clear_global_event_target = sec_separatist_78 }
	# else_if = { limit = { exists = event_target:sec_separatist_79 is_same_value = event_target:sec_separatist_79 } clear_global_event_target = sec_separatist_79 }
	# else_if = { limit = { exists = event_target:sec_separatist_80 is_same_value = event_target:sec_separatist_80 } clear_global_event_target = sec_separatist_80 }
	# else_if = { limit = { exists = event_target:sec_separatist_81 is_same_value = event_target:sec_separatist_81 } clear_global_event_target = sec_separatist_81 }
	# else_if = { limit = { exists = event_target:sec_separatist_82 is_same_value = event_target:sec_separatist_82 } clear_global_event_target = sec_separatist_82 }
	# else_if = { limit = { exists = event_target:sec_separatist_83 is_same_value = event_target:sec_separatist_83 } clear_global_event_target = sec_separatist_83 }
	# else_if = { limit = { exists = event_target:sec_separatist_84 is_same_value = event_target:sec_separatist_84 } clear_global_event_target = sec_separatist_84 }
	# else_if = { limit = { exists = event_target:sec_separatist_85 is_same_value = event_target:sec_separatist_85 } clear_global_event_target = sec_separatist_85 }
	# else_if = { limit = { exists = event_target:sec_separatist_86 is_same_value = event_target:sec_separatist_86 } clear_global_event_target = sec_separatist_86 }
	# else_if = { limit = { exists = event_target:sec_separatist_87 is_same_value = event_target:sec_separatist_87 } clear_global_event_target = sec_separatist_87 }
	# else_if = { limit = { exists = event_target:sec_separatist_88 is_same_value = event_target:sec_separatist_88 } clear_global_event_target = sec_separatist_88 }
	# else_if = { limit = { exists = event_target:sec_separatist_89 is_same_value = event_target:sec_separatist_89 } clear_global_event_target = sec_separatist_89 }
	# else_if = { limit = { exists = event_target:sec_separatist_90 is_same_value = event_target:sec_separatist_90 } clear_global_event_target = sec_separatist_90 }
	# else_if = { limit = { exists = event_target:sec_separatist_91 is_same_value = event_target:sec_separatist_91 } clear_global_event_target = sec_separatist_91 }
	# else_if = { limit = { exists = event_target:sec_separatist_92 is_same_value = event_target:sec_separatist_92 } clear_global_event_target = sec_separatist_92 }
	# else_if = { limit = { exists = event_target:sec_separatist_93 is_same_value = event_target:sec_separatist_93 } clear_global_event_target = sec_separatist_93 }
	# else_if = { limit = { exists = event_target:sec_separatist_94 is_same_value = event_target:sec_separatist_94 } clear_global_event_target = sec_separatist_94 }
	# else_if = { limit = { exists = event_target:sec_separatist_95 is_same_value = event_target:sec_separatist_95 } clear_global_event_target = sec_separatist_95 }
	# else_if = { limit = { exists = event_target:sec_separatist_96 is_same_value = event_target:sec_separatist_96 } clear_global_event_target = sec_separatist_96 }
	# else_if = { limit = { exists = event_target:sec_separatist_97 is_same_value = event_target:sec_separatist_97 } clear_global_event_target = sec_separatist_97 }
	# else_if = { limit = { exists = event_target:sec_separatist_98 is_same_value = event_target:sec_separatist_98 } clear_global_event_target = sec_separatist_98 }
	# else_if = { limit = { exists = event_target:sec_separatist_99 is_same_value = event_target:sec_separatist_99 } clear_global_event_target = sec_separatist_99 }
	# else_if = { limit = { exists = event_target:sec_separatist_100 is_same_value = event_target:sec_separatist_100 } clear_global_event_target = sec_separatist_100 }
}

# Get Isolationist Separatist Faction for Sectors
remove_iso_sector_event_target = {
	set_sector_flag = sector_sep_active
	if = { limit = { exists = event_target:sec_iso_separatist_1 is_same_value = event_target:sec_iso_separatist_1 } clear_global_event_target = sec_iso_separatist_1 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_2 is_same_value = event_target:sec_iso_separatist_2 } clear_global_event_target = sec_iso_separatist_2 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_3 is_same_value = event_target:sec_iso_separatist_3 } clear_global_event_target = sec_iso_separatist_3 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_4 is_same_value = event_target:sec_iso_separatist_4 } clear_global_event_target = sec_iso_separatist_4 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_5 is_same_value = event_target:sec_iso_separatist_5 } clear_global_event_target = sec_iso_separatist_5 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_6 is_same_value = event_target:sec_iso_separatist_6 } clear_global_event_target = sec_iso_separatist_6 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_7 is_same_value = event_target:sec_iso_separatist_7 } clear_global_event_target = sec_iso_separatist_7 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_8 is_same_value = event_target:sec_iso_separatist_8 } clear_global_event_target = sec_iso_separatist_8 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_9 is_same_value = event_target:sec_iso_separatist_9 } clear_global_event_target = sec_iso_separatist_9 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_10 is_same_value = event_target:sec_iso_separatist_10 } clear_global_event_target = sec_iso_separatist_10 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_11 is_same_value = event_target:sec_iso_separatist_11 } clear_global_event_target = sec_iso_separatist_11 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_12 is_same_value = event_target:sec_iso_separatist_12 } clear_global_event_target = sec_iso_separatist_12 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_13 is_same_value = event_target:sec_iso_separatist_13 } clear_global_event_target = sec_iso_separatist_13 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_14 is_same_value = event_target:sec_iso_separatist_14 } clear_global_event_target = sec_iso_separatist_14 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_15 is_same_value = event_target:sec_iso_separatist_15 } clear_global_event_target = sec_iso_separatist_15 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_16 is_same_value = event_target:sec_iso_separatist_16 } clear_global_event_target = sec_iso_separatist_16 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_17 is_same_value = event_target:sec_iso_separatist_17 } clear_global_event_target = sec_iso_separatist_17 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_18 is_same_value = event_target:sec_iso_separatist_18 } clear_global_event_target = sec_iso_separatist_18 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_19 is_same_value = event_target:sec_iso_separatist_19 } clear_global_event_target = sec_iso_separatist_19 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_20 is_same_value = event_target:sec_iso_separatist_20 } clear_global_event_target = sec_iso_separatist_20 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_21 is_same_value = event_target:sec_iso_separatist_21 } clear_global_event_target = sec_iso_separatist_21 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_22 is_same_value = event_target:sec_iso_separatist_22 } clear_global_event_target = sec_iso_separatist_22 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_23 is_same_value = event_target:sec_iso_separatist_23 } clear_global_event_target = sec_iso_separatist_23 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_24 is_same_value = event_target:sec_iso_separatist_24 } clear_global_event_target = sec_iso_separatist_24 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_25 is_same_value = event_target:sec_iso_separatist_25 } clear_global_event_target = sec_iso_separatist_25 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_26 is_same_value = event_target:sec_iso_separatist_26 } clear_global_event_target = sec_iso_separatist_26 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_27 is_same_value = event_target:sec_iso_separatist_27 } clear_global_event_target = sec_iso_separatist_27 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_28 is_same_value = event_target:sec_iso_separatist_28 } clear_global_event_target = sec_iso_separatist_28 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_29 is_same_value = event_target:sec_iso_separatist_29 } clear_global_event_target = sec_iso_separatist_29 }
	else_if = { limit = { exists = event_target:sec_iso_separatist_30 is_same_value = event_target:sec_iso_separatist_30 } clear_global_event_target = sec_iso_separatist_30 }
}

###########

nat_faction_first_effect = {
	set_pop_faction_flag = nat_faction
	set_pop_faction_flag = nat_faction_@event_target:sep_target_loc
	owner = {
		create_leader = {
			class = random_ruler
			event_leader = yes
			hide_leader = yes
			species = owner_main_species
			name = "Dummy Leader"
			effect = {
				set_leader_flag = dummy_leader
			}
		}
	}
	last_created_leader = {
		set_name = {
			key = dummy_sep_leader
			variable_string = "\\[Root.GetName]"
		}
		leader_event = { id = civleader.1000 days = 180 }
	}
}

nat_faction_second_effect = {
	last_created_leader = {
		kill_leader = { show_notification = no }
	}
	# random_owned_pop = {
	# 	species = { save_global_event_target_as = nat_pop_species }
	# }
	# owner = {
	# 	create_leader = {
	# 		class = random_ruler
	# 		species = event_target:nat_pop_species
	# 		name = random
	# 		leader_age_min = 25
	# 		leader_age_max = 55
	# 		traits = { trait = leader_trait_charismatic }
	# 		effect = {
	# 			set_leader_flag = sep_leader
	# 			set_leader_flag = dummy_leader
	# 		}
	# 	}
	# }
	# set_leader = last_created_leader
	pop_faction_event = { id = civnat.9000 }
}

faction_kill_leader_effect = {
	leader = { kill_leader = { show_notification = no } }
}

sector_faction_first_effect = {
	if = {
		limit = { is_iso_sector_separatist_faction = no }
		set_pop_faction_flag = sector_faction
	}
	else = {
		set_pop_faction_flag = iso_sector_faction
	}
	set_pop_faction_flag = sector_faction_@event_target:sep_target_loc
	owner = {
		create_leader = {
			class = random_ruler
			event_leader = yes
			hide_leader = yes
			species = owner_main_species
			name = "Dummy Leader"
			effect = {
				set_leader_flag = dummy_leader
			}
		}
	}
	last_created_leader = {
		set_name = {
			key = dummy_sep_leader
			variable_string = "\\[Root.GetName]"
		}
		leader_event = { id = civleader.1000 days = 180 }
	}
}

sector_faction_second_effect = {
	last_created_leader = {
		kill_leader = { show_notification = no }
	}
	random_owned_pop = {
		species = { save_global_event_target_as = nat_pop_species }
	}
	if = {
		limit = { is_iso_sector_separatist_faction = no }
		pop_faction_event = { id = civsep.9010 }
	}
	else = {
		pop_faction_event = { id = civsep.9011 }
	}
}

get_cit_res_purgees = {
	set_variable = { which = num_separatist_pops value = 0 }

	every_owned_pop = {
		limit = {
			pop_can_be_separatist_gen = yes
			OR = {
				has_pop_flag = citizen_of_@event_target:nat_pops_country
				has_pop_flag = resident_of_@event_target:nat_pops_country
			}
			has_citizenship_type = { type = citizenship_purge }
		}
		prev = { change_variable = { which = num_separatist_pops value = 1 } }
	}

	while = {
		count = num_separatist_pops
		random_owned_pop = {
			limit = {
				pop_can_be_separatist_gen = yes
				OR = {
					has_pop_flag = citizen_of_@event_target:nat_pops_country
					has_pop_flag = resident_of_@event_target:nat_pops_country
				}
				has_citizenship_type = { type = citizenship_purge }
			}
			set_pop_flag = sep_pop
			set_pop_flag = sep_pop_nat
			set_pop_flag = sep_pop_nat_@event_target:nat_pops_country
		}
	}

	clear_variable = num_separatist_pops
}

get_nat_seps = {
	if = {
		limit = { has_planet_flag = frontier_planet_@event_target:nat_pops_country }
		# First, Get Citizens who are still Citzens, least likely to radicalize.
		set_variable = { which = num_separatist_pops value = 0 }

		every_owned_pop = {
			limit = {
				pop_can_be_separatist_gen = yes
				has_pop_flag = citizen_of_@event_target:nat_pops_country
				has_citizenship_type = { type = citizenship_full }
			}
			prev = { change_variable = { which = num_separatist_pops value = 1 } }
		}

		if = {
			limit = { check_variable = { which = num_separatist_pops value <= 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					30 = { }
					30 = { set_variable = { which = num_separatist_pops value = 1 } }
					30 = { set_variable = { which = num_separatist_pops value = 2 } }
					10 = { set_variable = { which = num_separatist_pops value = 3 } }
				}
			}
			else = {
				random_list = {
					50 = { set_variable = { which = num_separatist_pops value = 1 } }
					30 = { set_variable = { which = num_separatist_pops value = 2 } }
					20 = { set_variable = { which = num_separatist_pops value = 3 } }
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = num_separatist_pops value > 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					30 = { }
					30 = { multiply_variable = { which = num_separatist_pops value = 0.1 } }
					30 = { multiply_variable = { which = num_separatist_pops value = 0.2 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.3 } }
				}
			}
			else = {
				random_list = {
					50 = { multiply_variable = { which = num_separatist_pops value = 0.1 } }
					30 = { multiply_variable = { which = num_separatist_pops value = 0.2 } }
					20 = { multiply_variable = { which = num_separatist_pops value = 0.3 } }
				}
			}
		}

		while = {
			count = num_separatist_pops
			random_owned_pop = {
				limit = {
					pop_can_be_separatist_gen = yes
					has_pop_flag = citizen_of_@event_target:nat_pops_country
					has_citizenship_type = { type = citizenship_full }
				}
				set_pop_flag = sep_pop
				set_pop_flag = sep_pop_nat
				set_pop_flag = sep_pop_nat_@event_target:nat_pops_country
			}
		}

		# Second, Get Citizens who've become residents
		set_variable = { which = num_separatist_pops value = 0 }

		every_owned_pop = {
			limit = {
				pop_can_be_separatist_gen = yes
				has_pop_flag = citizen_of_@event_target:nat_pops_country
				has_citizenship_type = { type = citizenship_limited }
			}
			prev = { change_variable = { which = num_separatist_pops value = 1 } }
		}

		if = {
			limit = { check_variable = { which = num_separatist_pops value <= 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					# 10 = { }
					30 = { set_variable = { which = num_separatist_pops value = 1 } }
					25 = { set_variable = { which = num_separatist_pops value = 2 } }
					20 = { set_variable = { which = num_separatist_pops value = 3 } }
					10 = { set_variable = { which = num_separatist_pops value = 4 } }
					5 = { set_variable = { which = num_separatist_pops value = 5 } }
				}
			}
			else = {
				random_list = {
					30 = { set_variable = { which = num_separatist_pops value = 1 } }
					25 = { set_variable = { which = num_separatist_pops value = 2 } }
					20 = { set_variable = { which = num_separatist_pops value = 3 } }
					15 = { set_variable = { which = num_separatist_pops value = 4 } }
					5 = { set_variable = { which = num_separatist_pops value = 5 } }
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = num_separatist_pops value > 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					10 = { }
					30 = { multiply_variable = { which = num_separatist_pops value = 0.2 } }
					25 = { multiply_variable = { which = num_separatist_pops value = 0.2 } }
					20 = { multiply_variable = { which = num_separatist_pops value = 0.3 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.4 } }
					5 = { multiply_variable = { which = num_separatist_pops value = 0.5 } }
				}
			}
			else = {
				random_list = {
					30 = { multiply_variable = { which = num_separatist_pops value = 0.1 } }
					25 = { multiply_variable = { which = num_separatist_pops value = 0.2 } }
					20 = { multiply_variable = { which = num_separatist_pops value = 0.3 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.4 } }
					5 = { multiply_variable = { which = num_separatist_pops value = 0.5 } }
				}
			}
		}

		while = {
			count = num_separatist_pops
			random_owned_pop = {
				limit = {
					pop_can_be_separatist_gen = yes
					has_pop_flag = citizen_of_@event_target:nat_pops_country
					has_citizenship_type = { type = citizenship_limited }
				}
				set_pop_flag = sep_pop
				set_pop_flag = sep_pop_nat
				set_pop_flag = sep_pop_nat_@event_target:nat_pops_country
			}
		}

		# Third, Get Citizens and Residents who've become enslaved
		set_variable = { which = num_separatist_pops value = 0 }

		every_owned_pop = {
			limit = {
				pop_can_be_separatist_gen = yes
				OR = {
					has_pop_flag = citizen_of_@event_target:nat_pops_country
					has_pop_flag = resident_of_@event_target:nat_pops_country
				}
				has_citizenship_type = { type = citizenship_slavery }
			}
			prev = { change_variable = { which = num_separatist_pops value = 1 } }
		}

		if = {
			limit = { check_variable = { which = num_separatist_pops value <= 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					35 = { set_variable = { which = num_separatist_pops value = 5 } }
					30 = { set_variable = { which = num_separatist_pops value = 6 } }
					20 = { set_variable = { which = num_separatist_pops value = 7 } }
					15 = { set_variable = { which = num_separatist_pops value = 8 } }
				}
			}
			else = {
				random_list = {
					25 = { set_variable = { which = num_separatist_pops value = 5 } }
					25 = { set_variable = { which = num_separatist_pops value = 6 } }
					25 = { set_variable = { which = num_separatist_pops value = 7 } }
					25 = { set_variable = { which = num_separatist_pops value = 8 } }
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = num_separatist_pops value > 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					35 = { multiply_variable = { which = num_separatist_pops value = 0.5 } }
					30 = { multiply_variable = { which = num_separatist_pops value = 0.6 } }
					20 = { multiply_variable = { which = num_separatist_pops value = 0.7 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.8 } }
				}
			}
			else = {
				random_list = {
					25 = { multiply_variable = { which = num_separatist_pops value = 0.5 } }
					25 = { multiply_variable = { which = num_separatist_pops value = 0.6 } }
					25 = { multiply_variable = { which = num_separatist_pops value = 0.7 } }
					25 = { multiply_variable = { which = num_separatist_pops value = 0.8 } }
				}
			}
		}

		while = {
			count = num_separatist_pops
			random_owned_pop = {
				limit = {
					pop_can_be_separatist_gen = yes
					OR = {
						has_pop_flag = citizen_of_@event_target:nat_pops_country
						has_pop_flag = resident_of_@event_target:nat_pops_country
					}
					has_citizenship_type = { type = citizenship_slavery }
				}
				set_pop_flag = sep_pop
				set_pop_flag = sep_pop_nat
				set_pop_flag = sep_pop_nat_@event_target:nat_pops_country
			}
		}
	}
	else_if = {
		limit = { has_planet_flag = integrated_planet_@event_target:nat_pops_country }
		# First, Get Citizens who are still Citzens, least likely to radicalize.
		set_variable = { which = num_separatist_pops value = 0 }

		every_owned_pop = {
			limit = {
				pop_can_be_separatist_gen = yes
				has_pop_flag = citizen_of_@event_target:nat_pops_country
				has_citizenship_type = { type = citizenship_full }
			}
			prev = { change_variable = { which = num_separatist_pops value = 1 } }
		}

		if = {
			limit = { check_variable = { which = num_separatist_pops value <= 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					20 = { }
					25 = { set_variable = { which = num_separatist_pops value = 1 } }
					20 = { set_variable = { which = num_separatist_pops value = 2 } }
					15 = { set_variable = { which = num_separatist_pops value = 3 } }
					15 = { set_variable = { which = num_separatist_pops value = 4 } }
					3 = { set_variable = { which = num_separatist_pops value = 5 } }
					2 = { set_variable = { which = num_separatist_pops value = 6 } }
				}
			}
			else = {
				random_list = {
					35 = { set_variable = { which = num_separatist_pops value = 1 } }
					30 = { set_variable = { which = num_separatist_pops value = 2 } }
					20 = { set_variable = { which = num_separatist_pops value = 3 } }
					10 = { set_variable = { which = num_separatist_pops value = 4 } }
					3 = { set_variable = { which = num_separatist_pops value = 5 } }
					2 = { set_variable = { which = num_separatist_pops value = 6 } }
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = num_separatist_pops value > 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					20 = { }
					25 = { multiply_variable = { which = num_separatist_pops value = 0.1 } }
					20 = { multiply_variable = { which = num_separatist_pops value = 0.2 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.3 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.4 } }
					3 = { multiply_variable = { which = num_separatist_pops value = 0.5 } }
					2 = { multiply_variable = { which = num_separatist_pops value = 0.6 } }
				}
			}
			else = {
				random_list = {
					35 = { multiply_variable = { which = num_separatist_pops value = 0.1 } }
					30 = { multiply_variable = { which = num_separatist_pops value = 0.2 } }
					20 = { multiply_variable = { which = num_separatist_pops value = 0.3 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.4 } }
					3 = { multiply_variable = { which = num_separatist_pops value = 0.5 } }
					2 = { multiply_variable = { which = num_separatist_pops value = 0.6 } }
				}
			}
		}

		while = {
			count = num_separatist_pops
			random_owned_pop = {
				limit = {
					pop_can_be_separatist_gen = yes
					has_pop_flag = citizen_of_@event_target:nat_pops_country
					has_citizenship_type = { type = citizenship_full }
				}
				set_pop_flag = sep_pop
				set_pop_flag = sep_pop_nat
				set_pop_flag = sep_pop_nat_@event_target:nat_pops_country
			}
		}

		# Second, Get Citizens who've become residents
		set_variable = { which = num_separatist_pops value = 0 }

		every_owned_pop = {
			limit = {
				pop_can_be_separatist_gen = yes
				has_pop_flag = citizen_of_@event_target:nat_pops_country
				has_citizenship_type = { type = citizenship_limited }
			}
			prev = { change_variable = { which = num_separatist_pops value = 1 } }
		}

		if = {
			limit = { check_variable = { which = num_separatist_pops value <= 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					5 = { }
					20 = { set_variable = { which = num_separatist_pops value = 1 } }
					20 = { set_variable = { which = num_separatist_pops value = 2 } }
					15 = { set_variable = { which = num_separatist_pops value = 3 } }
					15 = { set_variable = { which = num_separatist_pops value = 4 } }
					10 = { set_variable = { which = num_separatist_pops value = 5 } }
					10 = { set_variable = { which = num_separatist_pops value = 6 } }
					5 = { set_variable = { which = num_separatist_pops value = 7 } }
				}
			}
			else = {
				random_list = {
					20 = { set_variable = { which = num_separatist_pops value = 1 } }
					20 = { set_variable = { which = num_separatist_pops value = 2 } }
					20 = { set_variable = { which = num_separatist_pops value = 3 } }
					15 = { set_variable = { which = num_separatist_pops value = 4 } }
					15 = { set_variable = { which = num_separatist_pops value = 5 } }
					10 = { set_variable = { which = num_separatist_pops value = 6 } }
					5 = { set_variable = { which = num_separatist_pops value = 7 } }
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = num_separatist_pops value > 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					5 = { }
					20 = { multiply_variable = { which = num_separatist_pops value = 0.1 } }
					20 = { multiply_variable = { which = num_separatist_pops value = 0.2 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.3 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.4 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.5 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.6 } }
					5 = { multiply_variable = { which = num_separatist_pops value = 0.7 } }
				}
			}
			else = {
				random_list = {
					20 = { multiply_variable = { which = num_separatist_pops value = 0.1 } }
					20 = { multiply_variable = { which = num_separatist_pops value = 0.2 } }
					20 = { multiply_variable = { which = num_separatist_pops value = 0.3 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.4 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.5 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.6 } }
					5 = { multiply_variable = { which = num_separatist_pops value = 0.7 } }
				}
			}
		}

		while = {
			count = num_separatist_pops
			random_owned_pop = {
				limit = {
					pop_can_be_separatist_gen = yes
					has_pop_flag = citizen_of_@event_target:nat_pops_country
					has_citizenship_type = { type = citizenship_limited }
				}
				set_pop_flag = sep_pop
				set_pop_flag = sep_pop_nat
				set_pop_flag = sep_pop_nat_@event_target:nat_pops_country
			}
		}

		# Third, Get Citizens and Residents who've become enslaved
		set_variable = { which = num_separatist_pops value = 0 }

		every_owned_pop = {
			limit = {
				pop_can_be_separatist_gen = yes
				OR = {
					has_pop_flag = citizen_of_@event_target:nat_pops_country
					has_pop_flag = resident_of_@event_target:nat_pops_country
				}
				has_citizenship_type = { type = citizenship_slavery }
			}
			prev = { change_variable = { which = num_separatist_pops value = 1 } }
		}

		if = {
			limit = { check_variable = { which = num_separatist_pops value <= 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					35 = { set_variable = { which = num_separatist_pops value = 6 } }
					30 = { set_variable = { which = num_separatist_pops value = 7 } }
					20 = { set_variable = { which = num_separatist_pops value = 8 } }
					15 = { set_variable = { which = num_separatist_pops value = 9 } }
				}
			}
			else = {
				random_list = {
					25 = { set_variable = { which = num_separatist_pops value = 6 } }
					25 = { set_variable = { which = num_separatist_pops value = 7 } }
					25 = { set_variable = { which = num_separatist_pops value = 8 } }
					25 = { set_variable = { which = num_separatist_pops value = 9 } }
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = num_separatist_pops value > 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					35 = { multiply_variable = { which = num_separatist_pops value = 0.6 } }
					30 = { multiply_variable = { which = num_separatist_pops value = 0.7 } }
					20 = { multiply_variable = { which = num_separatist_pops value = 0.8 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.9 } }
				}
			}
			else = {
				random_list = {
					25 = { multiply_variable = { which = num_separatist_pops value = 0.6 } }
					25 = { multiply_variable = { which = num_separatist_pops value = 0.7 } }
					25 = { multiply_variable = { which = num_separatist_pops value = 0.8 } }
					25 = { multiply_variable = { which = num_separatist_pops value = 0.9 } }
				}
			}
		}

		while = {
			count = num_separatist_pops
			random_owned_pop = {
				limit = {
					pop_can_be_separatist_gen = yes
					OR = {
						has_pop_flag = citizen_of_@event_target:nat_pops_country
						has_pop_flag = resident_of_@event_target:nat_pops_country
					}
					has_citizenship_type = { type = citizenship_slavery }
				}
				set_pop_flag = sep_pop
				set_pop_flag = sep_pop_nat
				set_pop_flag = sep_pop_nat_@event_target:nat_pops_country
			}
		}
	}
	else_if = {
		limit = { has_planet_flag = fundamental_planet_@event_target:nat_pops_country }
		# First, Get Citizens who are still Citzens, least likely to radicalize.
		set_variable = { which = num_separatist_pops value = 0 }

		every_owned_pop = {
			limit = {
				pop_can_be_separatist_gen = yes
				has_pop_flag = citizen_of_@event_target:nat_pops_country
				has_citizenship_type = { type = citizenship_full }
			}
			prev = { change_variable = { which = num_separatist_pops value = 1 } }
		}

		if = {
			limit = { check_variable = { which = num_separatist_pops value <= 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					10 = { }
					15 = { set_variable = { which = num_separatist_pops value = 1 } }
					15 = { set_variable = { which = num_separatist_pops value = 2 } }
					15 = { set_variable = { which = num_separatist_pops value = 3 } }
					10 = { set_variable = { which = num_separatist_pops value = 4 } }
					10 = { set_variable = { which = num_separatist_pops value = 5 } }
					10 = { set_variable = { which = num_separatist_pops value = 6 } }
					5 = { set_variable = { which = num_separatist_pops value = 7 } }
					5 = { set_variable = { which = num_separatist_pops value = 8 } }
					3 = { set_variable = { which = num_separatist_pops value = 9 } }
					2 = { set_variable = { which = num_separatist_pops value = 10 } }
				}
			}
			else = {
				random_list = {
					20 = { set_variable = { which = num_separatist_pops value = 1 } }
					15 = { set_variable = { which = num_separatist_pops value = 2 } }
					15 = { set_variable = { which = num_separatist_pops value = 3 } }
					13 = { set_variable = { which = num_separatist_pops value = 4 } }
					12 = { set_variable = { which = num_separatist_pops value = 5 } }
					10 = { set_variable = { which = num_separatist_pops value = 6 } }
					5 = { set_variable = { which = num_separatist_pops value = 7 } }
					5 = { set_variable = { which = num_separatist_pops value = 8 } }
					3 = { set_variable = { which = num_separatist_pops value = 9 } }
					2 = { set_variable = { which = num_separatist_pops value = 10 } }
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = num_separatist_pops value > 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					10 = { }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.1 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.2 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.3 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.4 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.5 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.6 } }
					5 = { multiply_variable = { which = num_separatist_pops value = 0.7 } }
					5 = { multiply_variable = { which = num_separatist_pops value = 0.8 } }
					3 = { multiply_variable = { which = num_separatist_pops value = 0.9 } }
					2 = { multiply_variable = { which = num_separatist_pops value = 1 } }
				}
			}
			else = {
				random_list = {
					20 = { multiply_variable = { which = num_separatist_pops value = 0.1 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.2 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.3 } }
					13 = { multiply_variable = { which = num_separatist_pops value = 0.4 } }
					12 = { multiply_variable = { which = num_separatist_pops value = 0.5 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.6 } }
					5 = { multiply_variable = { which = num_separatist_pops value = 0.7 } }
					5 = { multiply_variable = { which = num_separatist_pops value = 0.8 } }
					3 = { multiply_variable = { which = num_separatist_pops value = 0.9 } }
					2 = { multiply_variable = { which = num_separatist_pops value = 1 } }
				}
			}
		}

		while = {
			count = num_separatist_pops
			random_owned_pop = {
				limit = {
					pop_can_be_separatist_gen = yes
					has_pop_flag = citizen_of_@event_target:nat_pops_country
					has_citizenship_type = { type = citizenship_full }
				}
				set_pop_flag = sep_pop
				set_pop_flag = sep_pop_nat
				set_pop_flag = sep_pop_nat_@event_target:nat_pops_country
			}
		}

		# Second, Get Citizens who've become residents
		set_variable = { which = num_separatist_pops value = 0 }

		every_owned_pop = {
			limit = {
				pop_can_be_separatist_gen = yes
				has_pop_flag = citizen_of_@event_target:nat_pops_country
				has_citizenship_type = { type = citizenship_limited }
			}
			prev = { change_variable = { which = num_separatist_pops value = 1 } }
		}

		if = {
			limit = { check_variable = { which = num_separatist_pops value <= 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					15 = { set_variable = { which = num_separatist_pops value = 1 } }
					15 = { set_variable = { which = num_separatist_pops value = 2 } }
					15 = { set_variable = { which = num_separatist_pops value = 3 } }
					15 = { set_variable = { which = num_separatist_pops value = 4 } }
					10 = { set_variable = { which = num_separatist_pops value = 5 } }
					10 = { set_variable = { which = num_separatist_pops value = 6 } }
					10 = { set_variable = { which = num_separatist_pops value = 7 } }
					5 = { set_variable = { which = num_separatist_pops value = 8 } }
					3 = { set_variable = { which = num_separatist_pops value = 9 } }
					2 = { set_variable = { which = num_separatist_pops value = 10 } }
				}
			}
			else = {
				random_list = {
					10 = { set_variable = { which = num_separatist_pops value = 1 } }
					10 = { set_variable = { which = num_separatist_pops value = 2 } }
					15 = { set_variable = { which = num_separatist_pops value = 3 } }
					15 = { set_variable = { which = num_separatist_pops value = 4 } }
					10 = { set_variable = { which = num_separatist_pops value = 5 } }
					10 = { set_variable = { which = num_separatist_pops value = 6 } }
					10 = { set_variable = { which = num_separatist_pops value = 7 } }
					10 = { set_variable = { which = num_separatist_pops value = 8 } }
					5 = { set_variable = { which = num_separatist_pops value = 9 } }
					5 = { set_variable = { which = num_separatist_pops value = 10 } }
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = num_separatist_pops value > 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					15 = { multiply_variable = { which = num_separatist_pops value = 0.1 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.2 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.3 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.4 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.5 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.6 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.7 } }
					5 = { multiply_variable = { which = num_separatist_pops value = 0.8 } }
					3 = { multiply_variable = { which = num_separatist_pops value = 0.9 } }
					2 = { multiply_variable = { which = num_separatist_pops value = 1 } }
				}
			}
			else = {
				random_list = {
					10 = { multiply_variable = { which = num_separatist_pops value = 0.1 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.2 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.3 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 0.4 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.5 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.6 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.7 } }
					10 = { multiply_variable = { which = num_separatist_pops value = 0.8 } }
					5 = { multiply_variable = { which = num_separatist_pops value = 0.9 } }
					5 = { multiply_variable = { which = num_separatist_pops value = 1 } }
				}
			}
		}

		while = {
			count = num_separatist_pops
			random_owned_pop = {
				limit = {
					pop_can_be_separatist_gen = yes
					has_pop_flag = citizen_of_@event_target:nat_pops_country
					has_citizenship_type = { type = citizenship_limited }
				}
				set_pop_flag = sep_pop
				set_pop_flag = sep_pop_nat
				set_pop_flag = sep_pop_nat_@event_target:nat_pops_country
			}
		}

		# Third, Get Citizens and Residents who've become enslaved
		set_variable = { which = num_separatist_pops value = 0 }

		every_owned_pop = {
			limit = {
				pop_can_be_separatist_gen = yes
				OR = {
					has_pop_flag = citizen_of_@event_target:nat_pops_country
					has_pop_flag = resident_of_@event_target:nat_pops_country
				}
				has_citizenship_type = { type = citizenship_slavery }
			}
			prev = { change_variable = { which = num_separatist_pops value = 1 } }
		}

		if = {
			limit = { check_variable = { which = num_separatist_pops value <= 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					35 = { set_variable = { which = num_separatist_pops value = 7 } }
					30 = { set_variable = { which = num_separatist_pops value = 8 } }
					20 = { set_variable = { which = num_separatist_pops value = 9 } }
					15 = { set_variable = { which = num_separatist_pops value = 10 } }
				}
			}
			else = {
				random_list = {
					25 = { set_variable = { which = num_separatist_pops value = 7 } }
					25 = { set_variable = { which = num_separatist_pops value = 8 } }
					25 = { set_variable = { which = num_separatist_pops value = 9 } }
					25 = { set_variable = { which = num_separatist_pops value = 10 } }
				}
			}
		}
		else_if = {
			limit = { check_variable = { which = num_separatist_pops value > 10 } }
			if = {
				limit = {
					owner = { NOT = { has_country_flag = destroyed_country_nat_@event_target:nat_pops_country } }
				}
				random_list = {
					35 = { multiply_variable = { which = num_separatist_pops value = 0.7 } }
					30 = { multiply_variable = { which = num_separatist_pops value = 0.8 } }
					20 = { multiply_variable = { which = num_separatist_pops value = 0.9 } }
					15 = { multiply_variable = { which = num_separatist_pops value = 1 } }
				}
			}
			else = {
				random_list = {
					25 = { multiply_variable = { which = num_separatist_pops value = 0.7 } }
					25 = { multiply_variable = { which = num_separatist_pops value = 0.8 } }
					25 = { multiply_variable = { which = num_separatist_pops value = 0.9 } }
					25 = { multiply_variable = { which = num_separatist_pops value = 1 } }
				}
			}
		}

		while = {
			count = num_separatist_pops
			random_owned_pop = {
				limit = {
					pop_can_be_separatist_gen = yes
					OR = {
						has_pop_flag = citizen_of_@event_target:nat_pops_country
						has_pop_flag = resident_of_@event_target:nat_pops_country
					}
					has_citizenship_type = { type = citizenship_slavery }
				}
				set_pop_flag = sep_pop
				set_pop_flag = sep_pop_nat
				set_pop_flag = sep_pop_nat_@event_target:nat_pops_country
			}
		}
	}

	# Finally, Get Citizens and Residents who are now being purged - all of them
	get_cit_res_purgees = yes
}

get_nat_change_flags = {
	event_target:nat_pops_country = {
		if = {
			limit = { event_target:old_nat_country = { has_country_flag = ancient_exile_gov } }
			set_country_flag = ancient_exile_gov
		}				
	}

	# establish comms
	every_country = {
		limit = { has_communications = event_target:old_nat_country }
		establish_communications_no_message = event_target:nat_pops_country
		establish_contact = { who = event_target:nat_pops_country location = root }
	}

	# establish comms
	every_country = {
		limit = { has_communications = event_target:old_nat_country }
		establish_communications_no_message = event_target:nat_pops_country
		establish_contact = { who = event_target:nat_pops_country location = root }
	}

	every_galaxy_pop = {
		limit = {
			OR = {
				has_pop_flag = sep_pop_nat_@event_target:old_nat_country
				has_pop_flag = citizen_of_@event_target:old_nat_country
				has_pop_flag = resident_of_@event_target:old_nat_country
				has_pop_flag = slave_of_@event_target:old_nat_country
				has_pop_flag = bio_trophy_of_@event_target:old_nat_country
				has_pop_flag = purgee_of_@event_target:old_nat_country
			}
		}
		if = {
			limit = { has_pop_flag = sep_pop_nat_@event_target:old_nat_country }
			remove_pop_flag = sep_pop_nat_@event_target:old_nat_country
			set_pop_flag = sep_pop_nat_@event_target:nat_pops_country
		}
		if = {
			limit = { has_pop_flag = citizen_of_@event_target:old_nat_country }
			remove_pop_flag = citizen_of_@event_target:old_nat_country
			set_pop_flag = citizen_of_@event_target:nat_pops_country
		}
		else_if = {
			limit = { has_pop_flag = resident_of_@event_target:old_nat_country }
			remove_pop_flag = resident_of_@event_target:old_nat_country
			set_pop_flag = resident_of_@event_target:nat_pops_country
		}
		else_if = {
			limit = { has_pop_flag = slave_of_@event_target:old_nat_country }
			remove_pop_flag = slave_of_@event_target:old_nat_country
			set_pop_flag = slave_of_@event_target:nat_pops_country
		}
		else_if = {
			limit = { has_pop_flag = bio_trophy_of_@event_target:old_nat_country }
			remove_pop_flag = bio_trophy_of_@event_target:old_nat_country
			set_pop_flag = bio_trophy_of_@event_target:nat_pops_country
		}
		else_if = {
			limit = { has_pop_flag = purgee_of_@event_target:old_nat_country }
			remove_pop_flag = purgee_of_@event_target:old_nat_country
			set_pop_flag = purgee_of_@event_target:nat_pops_country
		}
	}

	every_galaxy_planet = {
		limit = {
			OR = {
				has_planet_flag = capital_planet_@event_target:old_nat_country
				has_planet_flag = frontier_planet_@event_target:old_nat_country
				has_planet_flag = integrated_planet_@event_target:old_nat_country
				has_planet_flag = fundamental_planet_@event_target:old_nat_country
			}
		}
		if = {
			limit = { has_planet_flag = capital_planet_@event_target:old_nat_country }
			remove_planet_flag = capital_planet_@event_target:old_nat_country
			set_planet_flag = capital_planet_@event_target:nat_pops_country
		}
		if = {
			limit = { has_planet_flag = frontier_planet_@event_target:old_nat_country }
			remove_planet_flag = frontier_planet_@event_target:old_nat_country
			set_planet_flag = frontier_planet_@event_target:nat_pops_country
		}
		else_if = {
			limit = { has_planet_flag = integrated_planet_@event_target:old_nat_country }
			remove_planet_flag = integrated_planet_@event_target:old_nat_country
			set_planet_flag = integrated_planet_@event_target:nat_pops_country
		}
		else_if = {
			limit = { has_planet_flag = fundamental_planet_@event_target:old_nat_country }
			remove_planet_flag = fundamental_planet_@event_target:old_nat_country
			set_planet_flag = fundamental_planet_@event_target:nat_pops_country
		}
	}
}

get_dispute_faction = {
	random_pop_faction = {
		limit = {
			OR = {
				root = { NOT = { is_variable_set = faction_one_support } }
				support >= root.faction_one_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_two_support } }
				support >= root.faction_two_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_three_support } }
				support >= root.faction_three_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_four_support } }
				support >= root.faction_four_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_five_support } }
				support >= root.faction_five_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_six_support } }
				support >= root.faction_six_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_seven_support } }
				support >= root.faction_seven_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_eight_support } }
				support >= root.faction_eight_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_nine_support } }
				support >= root.faction_nine_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_ten_support } }
				support >= root.faction_ten_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_eleven_support } }
				support >= root.faction_eleven_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_twelve_support } }
				support >= root.faction_twelve_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_thirteen_support } }
				support >= root.faction_thirteen_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_fourteen_support } }
				support >= root.faction_fourteen_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_fifteen_support } }
				support >= root.faction_fifteen_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_sixteen_support } }
				support >= root.faction_sixteen_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_seventeen_support } }
				support >= root.faction_seventeen_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_eighteen_support } }
				support >= root.faction_eighteen_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_nineteen_support } }
				support >= root.faction_nineteen_support
			}
			OR = {
				root = { NOT = { is_variable_set = faction_twenty_support } }
				support >= root.faction_twenty_support
			}
		}
		set_pop_faction_flag = disputed_election_faction
	}
}

# Government in Exile

create_exile_enclave_country = {
	save_event_target_as = hosting_country
	set_country_flag = exile_already_asked_@from # So that if they release the GiE, they do not get asked to host again

	from = { save_event_target_as = old_nat_country }

	if = {
		limit = { any_owned_planet = { NOT = { has_planet_flag = exiled_gov_host_planet } } }
		if = {
			limit = { capital_scope = { NOT = { has_planet_flag = exiled_gov_host_planet } } }
			capital_scope = {
				set_planet_flag = exiled_gov_host_planet
				save_event_target_as = gov_hosting_planet
			}
		}
		else = {
			random_owned_planet = {
				limit = { NOT = { has_planet_flag = exiled_gov_host_planet } }
				set_planet_flag = exiled_gov_host_planet
				save_event_target_as = gov_hosting_planet
			}
		}
	}
	else = {
		random_system_within_border = {
			random_system_planet = {
				limit = { NOT = { has_planet_flag = exiled_gov_host_planet } }
				set_planet_flag = exiled_gov_host_planet
				save_event_target_as = gov_hosting_planet
			}
		}
	}

	event_target:old_nat_country = {
		set_country_type = enclave_exiled_gov
		save_event_target_as = nat_pops_country
		set_country_flag = exiled_gov_enclave_country
		create_fleet = {
			settings = { spawn_debris = no }
			effect = {
				set_owner = prev
				create_ship = {
					name = "Exiled Government Headquarters"
					design = "NAME_Mercenary_Enclave_Station_1"
					graphical_culture = event_target:old_nat_country
				}
				set_location = {
					target = event_target:gov_hosting_planet
					distance = 45
					angle = random
				}
			}
		}
		if = {
			limit = { has_secession_country_flag = yes }
			find_secession_number_flag = yes
		}
		set_custom_capital_location = event_target:gov_hosting_planet
		#Set ruler
		set_country_flag = has_host
		set_country_flag = host_is_@root
		get_separatist_faction_nat = yes
		country_event = { id = civnat.1320 }
	}

	## Trying new method above, lets them keep their origin and is cleaner
	# create_country = {
	# 	name = event_target:old_nat_country
	# 	type = enclave_exiled_gov
	# 	authority = event_target:old_nat_country
	# 	civics = event_target:old_nat_country
	# 	origin = "origin_exile_government"
	# 	species = event_target:old_nat_country.species
	# 	flag = event_target:old_nat_country
	# 	ethos = event_target:old_nat_country
	# 	ignore_initial_colony_error = yes
	# 	effect = {
	# 		save_event_target_as = nat_pops_country
	# 		set_country_flag = exiled_gov_enclave_country
	# 		set_graphical_culture = event_target:old_nat_country
	# 		create_fleet = {
	# 			settings = { spawn_debris = no }
	# 			effect = {
	# 				set_owner = prev
	# 				create_ship = {
	# 					name = "Exiled Government Headquarters"
	# 					design = "NAME_Mercenary_Enclave_Station_1"
	# 					graphical_culture = event_target:old_nat_country
	# 				}
	# 				set_location = {
	# 					target = event_target:gov_hosting_planet
	# 					distance = 45
	# 					angle = random
	# 				}
	# 			}
	# 		}
	# 		copy_flags_and_variables_from = event_target:old_nat_country
	# 		if = {
	# 			limit = { has_secession_country_flag = yes }
	# 			find_secession_number_flag = yes
	# 		}
	# 		set_custom_capital_location = event_target:gov_hosting_planet
	# 		#Set ruler
	# 		set_leader = event_target:old_nat_country.ruler
	# 		establish_communications_no_message = root
	# 		set_country_flag = has_host
	# 		set_country_flag = host_is_@root
	# 		get_separatist_faction_nat = yes
	# 		country_event = { id = civnat.1320 }
	# 	}
	# }
	
	
	event_target:gov_hosting_planet = {
		set_planet_flag = exile_enclave_link_@event_target:nat_pops_country
	}

	get_nat_change_flags = yes

	from = { destroy_country = yes }
}

get_restoration_planets = {
	set_variable = { which = total_restoration_planets value = 0 }

	every_owned_planet = {
		limit = {
			is_capital = no
			is_occupied_flag = no
			is_under_colonization = no
			has_orbital_bombardment = no
			solar_system = { NOT = { is_capital_system = yes } }
		}
		set_planet_flag = restoration_planet
		prev = { change_variable = { which = total_restoration_planets value = 1 } }
	}

	# Next, we save each subject as an Event Target
	# As the scripting language doesn't have proper loops, we use a lot of ifs if there are more than 10, the event can be run again.
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 1 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_1
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 2 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_2
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 3 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_3
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 4 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_4
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 5 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_5
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 6 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_6
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 7 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_7
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 8 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_8
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 9 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_9
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 10 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_10
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 11 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_11
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 12 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_12
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 13 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_13
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 14 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_14
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 15 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_15
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 16 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_16
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 17 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_17
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 18 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_18
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 19 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_19
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_planets value >= 20 } }
		random_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
			save_event_target_as = restoration_planet_20
		}
	}

	if = {
		limit = { any_owned_planet = { has_planet_flag = restoration_planet } }
		every_owned_planet = {
			limit = { has_planet_flag = restoration_planet }
			remove_planet_flag = restoration_planet
		}
	}	
}

get_restoration_sectors = {
	set_variable = { which = total_restoration_sectors value = 0 }

	every_owned_sector = {
		limit = {
			NOT = { any_owned_planet = { is_capital = yes } }
			NOT = { any_owned_planet = { is_occupied_flag = yes } }
			NOT = { any_owned_planet = { has_orbital_bombardment = yes } }
		}
		set_sector_flag = restoration_sector
		prev = { change_variable = { which = total_restoration_sectors value = 1 } }
	}

	# Next, we save each subject as an Event Target
	# As the scripting language doesn't have proper loops, we use a lot of ifs if there are more than 10, the event can be run again.
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 1 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_1
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 2 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_2
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 3 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_3
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 4 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_4
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 5 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_5
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 6 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_6
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 7 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_7
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 8 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_8
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 9 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_9
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 10 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_10
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 11 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_11
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 12 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_12
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 13 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_13
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 14 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_14
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 15 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_15
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 16 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_16
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 17 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_17
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 18 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_18
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 19 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_19
		}
	}
	if = {
		limit = { check_variable = { which = total_restoration_sectors value >= 20 } }
		random_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
			save_event_target_as = restoration_sector_20
		}
	}

	if = {
		limit = { any_owned_sector = { has_sector_flag = restoration_sector } }
		every_owned_sector = {
			limit = { has_sector_flag = restoration_sector }
			remove_sector_flag = restoration_sector
		}
	}
}

exile_restore_planet_setup = {

	event_target:exiled_gov_enclave_country = { save_event_target_as = new_homeland }

	set_owner = event_target:new_homeland
	starbase = { set_owner = event_target:new_homeland }
	solar_system = {
		every_system_planet = {
			limit = { is_owned_by = root }
			set_owner = event_target:new_homeland
		}
	}
}

exile_restore_sector_setup = {

	event_target:exiled_gov_enclave_country = { save_event_target_as = new_homeland }

	every_owned_planet = { # Every system with planets
		set_owner = event_target:new_homeland
		starbase = { set_owner = event_target:new_homeland }
	}
	every_system_within_border = { # Every other system, changing this gets weird, so just leave it cause it works fine
		starbase = { set_owner = event_target:new_homeland }
	}
}

exile_restoration_gen_effect = {

	if = {
		limit = { event_target:exiled_gov_host = { is_same_value = root } }
		event_target:new_homeland = { set_country_flag = was_true_host }
	}
	else = {
		save_event_target_as = new_host
	}

	event_target:exiled_gov_host = { save_event_target_as = exile_host }

	event_target:new_homeland = {

		set_country_type = default

		# Destroy old enclave station
		random_owned_fleet = {
			limit = { any_owned_ship = { is_ship_size = enclave_mercenary_station } }
			destroy_fleet = this
		}

		if = { # If they don't have their original capital planet, they rename their empire.
			limit = { any_owned_planet = { has_planet_flag = capital_planet_@event_target:new_homeland } }
			random_owned_planet = {
				limit = { has_planet_flag = capital_planet_@event_target:new_homeland }
				set_capital = yes
			}
			set_origin = origin_restored_government
			create_leader = {
				class = random_ruler
				event_leader = yes
				hide_leader = yes
				species = owner_main_species
				name = random
				effect = {
					set_name = {
						key = dummy_old_name_leader
						variable_string = "\\[event_target:new_homeland.GetName]"
					}
					set_leader_flag = dummy_leader
					save_event_target_as = dummy_old_name_leader
				}
			}
			last_created_leader = { leader_event = { id = civleader.1000 days = 180 } }
		}
		else_if = { # Ideally make the most habitable planet their capital, but idk if you can use the habitability trigger with order_by
			limit = {
				count_owned_planet = {
					count >= 2
					limit = { is_under_colonization = no }
				}
			}
			every_owned_planet = {
				limit = {
					is_under_colonization = no
					habitability = { who = owner_main_species value >= 0 }
				}
				export_trigger_value_to_variable = {
					trigger = habitability
					parameters = { who = owner_main_species }
					variable = new_planet_hab_percent
				}
			}
			ordered_owned_planet = {
				limit = { is_under_colonization = no }
				position = 0
				order_by = new_planet_hab_percent
				set_capital = yes
			}
			every_owned_planet = {
				limit = {
					is_under_colonization = no
					habitability = { who = owner_main_species value >= 0 }
				}
				clear_variable = new_planet_hab_percent
			}
			create_leader = {
				class = random_ruler
				event_leader = yes
				hide_leader = yes
				species = owner_main_species
				name = random
				effect = {
					set_name = {
						key = dummy_old_name_leader
						variable_string = "\\[event_target:new_homeland.GetName]"
					}
					set_leader_flag = dummy_leader
					save_event_target_as = dummy_old_name_leader
				}
			}
			last_created_leader = { leader_event = { id = civleader.1000 days = 180 } }
			capital_scope = { set_name = random }
			set_name = random
			set_country_flag = nat_country_new_name
			set_origin = origin_restored_successor_government
		}
		else = {
			create_leader = {
				class = random_ruler
				event_leader = yes
				hide_leader = yes
				species = owner_main_species
				name = random
				effect = {
					set_name = {
						key = dummy_old_name_leader
						variable_string = "\\[event_target:new_homeland.GetName]"
					}
					set_leader_flag = dummy_leader
					save_event_target_as = dummy_old_name_leader
				}
			}
			last_created_leader = { leader_event = { id = civleader.1000 days = 180 } }
			capital_scope = { set_name = random }
			set_name = random
			set_country_flag = nat_country_new_name
			set_origin = origin_restored_successor_government
		}

		# The nationalists in the restored homeland have won, they don't need to be nationalist anymore 
		every_owned_pop = {
			limit = { has_pop_flag = sep_pop_nat_@prev }
			remove_pop_flag = sep_pop_nat_@prev
			if = {
				limit = { has_pop_flag = sep_pop }
				remove_pop_flag = sep_pop
			}
		}

		# If nationalists elsewhere exist for a country that then is restored, make them happy and potentially resettle them
		every_galaxy_pop = {
			limit = { has_pop_flag = sep_pop_nat_@event_target:new_homeland }
			add_modifier = { modifier = "restoration_of_motherland" years = 15 }
			if = {
				limit = {
					has_citizenship_rights = yes
					has_migration_control = { type = no }
				}
				random = {
					chance = 75
					resettle_pop = {
						pop = this
						planet = event_target:new_homeland.capital_scope
					}
				}
			}
		}

		# Science
		create_fleet = {
			effect = {
				set_owner = event_target:new_homeland
				create_ship = {
					name = random
					random_existing_design = science
				}
				set_fleet_stance = evasive				
				set_location = event_target:new_homeland.capital_scope
				owner = {
					get_leader_homeworld = yes
					create_leader = {
						name = random
						class = scientist
						sub_type = survey
						species = owner_main_species
						background_planet = event_target:leader_homeworld
					}
				}
				set_leader = last_created_leader
			}			
		}

		# Construction Ship
		create_fleet = {
			effect = {
				set_owner = event_target:new_homeland
				create_ship = {
					name = random
					random_existing_design = constructor
				}
				set_fleet_stance = evasive
				set_location = event_target:new_homeland.capital_scope
			}
		}

		# Create Leaders
		get_leader_homeworld = yes
		create_leader = {
			class = official
			species = owner_main_species
			name = random
			background_planet = event_target:leader_homeworld
		}
		while = {
			count = 2
			get_leader_homeworld = yes
			create_leader = {
				class = commander
				species = owner_main_species
				name = random
				background_planet = event_target:leader_homeworld
			}
		}
		while = {
			count = 3
			get_leader_homeworld = yes
			create_leader = {
				class = scientist
				species = owner_main_species
				name = random
				background_planet = event_target:leader_homeworld
			}
		}

		# Create some of their original species, as if relocating 
		capital_scope = {
			while = {
				count = 3
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
		}

		if = {
			limit = { has_country_flag = was_true_host }
			add_opinion_modifier = {
				who = event_target:exile_host
				modifier = opinion_restored_nats
			}
			event_target:exile_host = {
				add_intel = {
					who = event_target:new_homeland
					amount = 70
				}
			}
		}
		else = {
			add_opinion_modifier = {
				who = event_target:new_host
				modifier = opinion_restored_nats
			}
			event_target:new_host = {
				add_intel = {
					who = event_target:new_homeland
					amount = 70
				}
			}
			set_truce = { target = event_target:new_host type = liberation }
		}
		set_truce = { target = event_target:exile_host type = liberation }

		# Set Country birth date
		country_event = { id = civmisc.3000 }

		# Give resources based on pops, needs to be delayed as pops dont change ownership instantly
		country_event = { id = civnat.1370 days = 2 }

		every_playable_country = {
			# limit = { NOT = { is_same_value = root } }
			country_event = { id = civnat.9205 }
		}
	}
}

######################
## Misc
# Remove All Civics 
get_remove_civics = {
	if = {
		limit = { civics_count >= 10 }
		force_remove_civic = 10
	}
	if = {
		limit = { civics_count >= 9 }
		force_remove_civic = 9
	}
	if = {
		limit = { civics_count >= 8 }
		force_remove_civic = 8
	}
	if = {
		limit = { civics_count >= 7 }
		force_remove_civic = 7
	}
	if = {
		limit = { civics_count >= 6 }
		force_remove_civic = 6
	}
	if = {
		limit = { civics_count >= 5 }
		force_remove_civic = 5
	}
	if = {
		limit = { civics_count >= 4 }
		force_remove_civic = 4
	}
	if = {
		limit = { civics_count >= 3 }
		force_remove_civic = 3
	}
	if = {
		limit = { civics_count >= 2 }
		force_remove_civic = 2
	}
	if = {
		limit = { civics_count >= 1 }
		force_remove_civic = 1
	}
}

get_ship_delete_effect = {
	every_owned_fleet = {
		set_variable = { which = ship_count value = 0 }
		every_owned_ship = {
			limit = { is_ship_class = shipclass_military }
			PREV = { change_variable = { which = ship_count value = $PERCENT$ } }
		}
		divide_variable = { which = ship_count value = 100 }
		while = {
			count = ship_count
			random_owned_ship = {
				limit = {
		    		is_ship_class = shipclass_military
		    		is_modded_ship = no
		    	}
		    	if = {
		    		limit = { exists = leader }
		    		leader = { unassign_leader = this }
		    	}
		    	delete_ship = THIS
			}
		}
		set_variable = { which = ship_count value = 0 }
	}
}

get_helper_subjects_effect = {
	# If there are more then 10 subjects, more should appear every time one is chosen

	set_variable = { which = helper_subjects value = 0 }

	# Count how many valid Subject States there are
	every_subject = {
		limit = {
			has_country_flag = subject_helps_overlord_@root
			NOT = {
				any_war = {
					OR = {
						using_war_goal = { type = wg_civwar owner = root }
						using_war_goal = { type = wg_natwar owner = root }
						using_war_goal = { type = wg_civwar_heir owner = root }
						using_war_goal = { type = wg_coup_successor owner = root }
						using_war_goal = { type = wg_coup_independent owner = root }
					}
				}
			}
		}
		set_country_flag = helper_sub_country
		overlord = { change_variable = { which = helper_subjects value = 1 } }
	}

	if = {
		limit = { check_variable = { which = helper_subjects value >= 1 } }
		random_subject = {
			limit = {
				has_country_flag = helper_sub_country
				NOT = { exists = event_target:helper_subject_1 }
			}
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_1
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 2 } }
		random_subject = {
			limit = {
				has_country_flag = helper_sub_country
				NOT = { exists = event_target:helper_subject_2 }
			}
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_2
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 3 } }
		random_subject = {
			limit = {
				has_country_flag = helper_sub_country
				NOT = { exists = event_target:helper_subject_3 }
			}
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_3
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 4 } }
		random_subject = {
			limit = {
				has_country_flag = helper_sub_country
				NOT = { exists = event_target:helper_subject_4 }
			}
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_4
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 5 } }
		random_subject = {
			limit = {
				has_country_flag = helper_sub_country
				NOT = { exists = event_target:helper_subject_5 }
			}
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_5
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 6 } }
		random_subject = {
			limit = {
				has_country_flag = helper_sub_country
				NOT = { exists = event_target:helper_subject_6 }
			}
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_6
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 7 } }
		random_subject = {
			limit = {
				has_country_flag = helper_sub_country
				NOT = { exists = event_target:helper_subject_7 }
			}
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_7
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 8 } }
		random_subject = {
			limit = {
				has_country_flag = helper_sub_country
				NOT = { exists = event_target:helper_subject_8 }
			}
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_8
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 9 } }
		random_subject = {
			limit = {
				has_country_flag = helper_sub_country
				NOT = { exists = event_target:helper_subject_9 }
			}
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_9
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 10 } }
		random_subject = {
			limit = {
				has_country_flag = helper_sub_country
				NOT = { exists = event_target:helper_subject_10 }
			}
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_10
		}
	}
}

get_helper_subjects_effect_refresh = {
	set_variable = { which = helper_subjects value = 0 }

	# Count how many valid Subject States there are
	every_subject = {
		limit = {
			has_country_flag = subject_helps_overlord_@root
			NOT = {
				any_war = {
					OR = {
						using_war_goal = { type = wg_civwar owner = root }
						using_war_goal = { type = wg_natwar owner = root }
						using_war_goal = { type = wg_civwar_heir owner = root }
						using_war_goal = { type = wg_coup_successor owner = root }
						using_war_goal = { type = wg_coup_independent owner = root }
					}
				}
			}
		}
		set_country_flag = helper_sub_country
		overlord = { change_variable = { which = helper_subjects value = 1 } }
	}

	if = {
		limit = { check_variable = { which = helper_subjects value >= 1 } }
		random_subject = {
			limit = { has_country_flag = helper_sub_country }
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_1
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 2 } }
		random_subject = {
			limit = { has_country_flag = helper_sub_country }
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_2
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 3 } }
		random_subject = {
			limit = { has_country_flag = helper_sub_country }
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_3
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 4 } }
		random_subject = {
			limit = { has_country_flag = helper_sub_country }
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_4
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 5 } }
		random_subject = {
			limit = { has_country_flag = helper_sub_country }
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_5
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 6 } }
		random_subject = {
			limit = { has_country_flag = helper_sub_country }
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_6
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 7 } }
		random_subject = {
			limit = { has_country_flag = helper_sub_country }
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_7
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 8 } }
		random_subject = {
			limit = { has_country_flag = helper_sub_country }
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_8
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 9 } }
		random_subject = {
			limit = { has_country_flag = helper_sub_country }
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_9
		}
	}
	if = {
		limit = { check_variable = { which = helper_subjects value >= 10 } }
		random_subject = {
			limit = { has_country_flag = helper_sub_country }
			remove_country_flag = helper_sub_country
			save_event_target_as = helper_subject_10
		}
	}
}

set_faction_rebellion_suppression_flag = {
	random_list = {
		40 = { set_timed_pop_faction_flag = { flag = faction_rebelled years = 3 } }
		25 = { set_timed_pop_faction_flag = { flag = faction_rebelled years = 5 } }
		20 = { set_timed_pop_faction_flag = { flag = faction_rebelled years = 7 } }
		15 = { set_timed_pop_faction_flag = { flag = faction_rebelled years = 10 } }
	}
}

######

destroy_succession_crisis = {
	if = {
		limit = {
			any_owned_sector = {
				has_sector_flag = succession_crisis_rebel_sector
				NOT = { has_sector_flag = succesion_crisis_talked }
			}
		}
		event_target:succession_crisis_sit = {
			situation_event = { id = civroyal.1120 }
		}
	}
	else = {
		event_target:succession_crisis_sit = { destroy_situation = this }
		random_owned_leader = {
			limit = { has_leader_flag = dead_crisis_leader }
			kill_leader = { show_notification = no }
		}
		clear_global_event_target = civwar_originator
		get_subject_decisions_effect = yes
	}
	after_comms_cleanup_effect = yes
}

kill_gov_switch_country = {
	if = {
		limit = { exists = event_target:gov_switch_country }
		event_target:gov_switch_country = { destroy_country = yes }
	}	
}