
###############################
### Civil Wars by MrFunEGUY ###
###############################

namespace = civpan

#################
# Leader Marking Events

planet_event = { # Pulse Event for Pandemic, every year
	id = civpan.1000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = { is_country_type_with_subjects = yes }
		NOT = { years_passed < 15 }
		num_pops >= 5
	}

	immediate = {
		if = {
			limit = {
				planet_stability >= 40
			}
			random_list = {
				199 = { }
				1 = {
					save_event_target_as = pandemic_planet
					owner = {
						country_event = { id = civpan.2000 days = 1 random = 359 }
					}
				}
			}
		}
		else_if = {
			limit = {
				planet_stability < 40
				planet_stability >= 30
			}
			random_list = {
				99 = { }
				1 = {
					save_event_target_as = pandemic_planet
					owner = {
						country_event = { id = civpan.2000 days = 1 random = 359 }
					}
				}
			}
		}
		else_if = {
			limit = {
				planet_stability < 30
				planet_stability >= 20
			}
			random_list = {
				197 = { }
				3 = {
					save_event_target_as = pandemic_planet
					owner = {
						country_event = { id = civpan.2000 days = 1 random = 359 }
					}
				}
			}
		}
		else_if = {
			limit = {
				planet_stability < 20
			}
			random_list = {
				98 = { }
				2 = {
					save_event_target_as = pandemic_planet
					owner = {
						country_event = { id = civpan.2000 days = 1 random = 359 }
					}
				}
			}
		}
	}
}

country_event = { # Mark disapproving Faction Leaders who are Governors, every month
	id = civpan.1200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
		any_owned_planet = {
			num_pops >= 1
			is_colony = yes
			solar_system = { check_civpan_capital = yes }
		}
		OR = {
			AND = {
				is_democracy = yes
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = governor
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_governor_faction
						}
					}
					support >= 0.2
					faction_approval <= 0.35
				}
			}
			AND = {
				is_democracy = no
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = governor
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_governor_faction
						}
					}
					support >= 0.15
					faction_approval <= 0.4
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				is_democracy = yes
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = governor
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_governor_faction
						}
					}
					support >= 0.2
					faction_approval <= 0.35
				}
				set_pop_faction_flag = civil_war_faction_governor
				leader = { set_leader_flag = civil_war_leader_governor_faction }
			}
		}
		else = {
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = governor
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_governor_faction
						}
					}
					support >= 0.15
					faction_approval <= 0.4
				}
				set_pop_faction_flag = civil_war_faction_governor
				leader = { set_leader_flag = civil_war_leader_governor_faction }
			}
		}
	}
}

country_event = { # Unmark approving Faction Leaders who are Governors, every month
	id = civpan.1300
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			AND = {
				is_democracy = yes
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = governor
						has_leader_flag = civil_war_leader_governor_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR = {
						support < 0.2
						faction_approval > 0.35
					}
				}
			}
			AND = {
				is_democracy = no
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = governor
						has_leader_flag = civil_war_leader_governor_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR = {
						support < 0.15
						faction_approval > 0.4
					}
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				is_democracy = yes
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = governor
						has_leader_flag = civil_war_leader_governor_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR  = {
						support < 0.2
						faction_approval > 0.35
					}
				}
				remove_pop_faction_flag = civil_war_faction_governor
				leader = { remove_leader_flag = civil_war_leader_governor_faction }
			}
		}
		else = {
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = governor
						has_leader_flag = civil_war_leader_governor_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR  = {
						support < 0.15
						faction_approval > 0.4
					}
				}
				remove_pop_faction_flag = civil_war_faction_governor
				leader = { remove_leader_flag = civil_war_leader_governor_faction }
			}
		}
	}
}

country_event = { # Mark disapproving Faction Leaders who are Admirals, every month
	id = civpan.1400
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
		OR = {
			AND = {
				is_democracy = yes
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = admiral
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_admiral_faction
						}
					}
					support >= 0.2
					faction_approval <= 0.35
				}
			}
			AND = {
				is_democracy = no
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = admiral
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_admiral_faction
						}
					}
					support >= 0.15
					faction_approval <= 0.4
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				is_democracy = yes
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = admiral
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_admiral_faction
						}
					}
					support >= 0.2
					faction_approval <= 0.35
				}
				set_pop_faction_flag = civil_war_faction_admiral
				leader = { set_leader_flag = civil_war_leader_admiral_faction }
			}
		}
		else = {
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = admiral
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_admiral_faction
						}
					}
					support >= 0.15
					faction_approval <= 0.4
				}
				set_pop_faction_flag = civil_war_faction_admiral
				leader = { set_leader_flag = civil_war_leader_admiral_faction }
			}
		}
	}
}

country_event = { # Unmark approving Faction Leaders who are Admirals, every month
	id = civpan.1500
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			AND = {
				is_democracy = yes
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = admiral
						has_leader_flag = civil_war_leader_admiral_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR = {
						support < 0.2
						faction_approval > 0.35
					}
				}
			}
			AND = {
				is_democracy = no
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = admiral
						has_leader_flag = civil_war_leader_admiral_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR = {
						support < 0.15
						faction_approval > 0.4
					}
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				is_democracy = yes
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = admiral
						has_leader_flag = civil_war_leader_admiral_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR  = {
						support < 0.2
						faction_approval > 0.35
					}
				}
				remove_pop_faction_flag = civil_war_faction_admiral
				leader = { remove_leader_flag = civil_war_leader_admiral_faction }
			}
		}
		else = {
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = admiral
						has_leader_flag = civil_war_leader_admiral_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR  = {
						support < 0.15
						faction_approval > 0.4
					}
				}
				remove_pop_faction_flag = civil_war_faction_admiral
				leader = { remove_leader_flag = civil_war_leader_admiral_faction }
			}
		}
	}
}

country_event = { # Mark disapproving Faction Leaders who are Scientists, every month
	id = civpan.1600
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
		any_owned_planet = {
			num_pops >= 1
			is_colony = yes
			solar_system = { check_civpan_capital = yes }
		}
		OR = {
			AND = {
				is_democracy = yes
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = scientist
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_scientist_faction
						}
					}
					support >= 0.2
					faction_approval <= 0.35
				}
			}
			AND = {
				is_democracy = no
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = scientist
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_scientist_faction
						}
					}
					support >= 0.15
					faction_approval <= 0.4
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				is_democracy = yes
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = scientist
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_scientist_faction
						}
					}
					support >= 0.2
					faction_approval <= 0.35
				}
				set_pop_faction_flag = civil_war_faction_scientist
				leader = { set_leader_flag = civil_war_leader_scientist_faction }
			}
		}
		else = {
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = scientist
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_scientist_faction
						}
					}
					support >= 0.15
					faction_approval <= 0.4
				}
				set_pop_faction_flag = civil_war_faction_scientist
				leader = { set_leader_flag = civil_war_leader_scientist_faction }
			}
		}
	}
}

country_event = { # Unmark approving Faction Leaders who are Scientists, every month
	id = civpan.1700
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			AND = {
				is_democracy = yes
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = scientist
						has_leader_flag = civil_war_leader_scientist_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR = {
						support < 0.2
						faction_approval > 0.35
					}
				}
			}
			AND = {
				is_democracy = no
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = scientist
						has_leader_flag = civil_war_leader_scientist_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR = {
						support < 0.15
						faction_approval > 0.4
					}
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				is_democracy = yes
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = scientist
						has_leader_flag = civil_war_leader_scientist_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR  = {
						support < 0.2
						faction_approval > 0.35
					}
				}
				remove_pop_faction_flag = civil_war_faction_scientist
				leader = { remove_leader_flag = civil_war_leader_scientist_faction }
			}
		}
		else = {
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = scientist
						has_leader_flag = civil_war_leader_scientist_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR  = {
						support < 0.15
						faction_approval > 0.4
					}
				}
				remove_pop_faction_flag = civil_war_faction_scientist
				leader = { remove_leader_flag = civil_war_leader_scientist_faction }
			}
		}
	}
}

country_event = { # Mark disapproving Faction Leaders who are Generals, every month
	id = civpan.1800
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
		any_owned_planet = {
			num_pops >= 1
			is_colony = yes
			solar_system = { check_civpan_capital = yes }
		}
		OR = {
			AND = {
				is_democracy = yes
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = general
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_general_faction
						}
					}
					support >= 0.2
					faction_approval <= 0.35
				}
			}
			AND = {
				is_democracy = no
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = general
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_general_faction
						}
					}
					support >= 0.15
					faction_approval <= 0.4
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				is_democracy = yes
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = general
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_general_faction
						}
					}
					support >= 0.2
					faction_approval <= 0.35
				}
				set_pop_faction_flag = civil_war_faction_general
				leader = { set_leader_flag = civil_war_leader_general_faction }
			}
		}
		else = {
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = general
						NOR = {
							has_leader_flag = appointed_heir
							has_leader_flag = civil_war_leader_general_faction
						}
					}
					support >= 0.15
					faction_approval <= 0.4
				}
				set_pop_faction_flag = civil_war_faction_general
				leader = { set_leader_flag = civil_war_leader_general_faction }
			}
		}
	}
}

country_event = { # Unmark approving Faction Leaders who are Generals, every month
	id = civpan.1900
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			AND = {
				is_democracy = yes
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = general
						has_leader_flag = civil_war_leader_general_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR = {
						support < 0.2
						faction_approval > 0.35
					}
				}
			}
			AND = {
				is_democracy = no
				any_pop_faction = {
					exists = leader
					leader = {
						leader_class = general
						has_leader_flag = civil_war_leader_general_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR = {
						support < 0.15
						faction_approval > 0.4
					}
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				is_democracy = yes
			}
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = general
						has_leader_flag = civil_war_leader_general_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR  = {
						support < 0.2
						faction_approval > 0.35
					}
				}
				remove_pop_faction_flag = civil_war_faction_general
				leader = { remove_leader_flag = civil_war_leader_general_faction }
			}
		}
		else = {
			every_pop_faction = {
				limit = {
					exists = leader
					leader = {
						leader_class = general
						has_leader_flag = civil_war_leader_general_faction
						NOT = { has_leader_flag = foreign_operation_ally_leader }
					}
					OR  = {
						support < 0.15
						faction_approval > 0.4
					}
				}
				remove_pop_faction_flag = civil_war_faction_general
				leader = { remove_leader_flag = civil_war_leader_general_faction }
			}
		}
	}
}

country_event = { # Unmark Leaders who are no longer leading factions
	id = civpan.1999
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_leader = {
			OR = {
				has_leader_flag = civil_war_leader_governor_faction
				has_leader_flag = civil_war_leader_admiral_faction
				has_leader_flag = civil_war_leader_scientist_faction
				has_leader_flag = civil_war_leader_general_faction
			}
			NOR = {
				leader_of_faction = totalitarian
				leader_of_faction = progressive
				leader_of_faction = imperialist
				leader_of_faction = prosperity
				leader_of_faction = technologist
				leader_of_faction = traditionalist
				leader_of_faction = xenoist
				leader_of_faction = supremacist
				leader_of_faction = isolationist
				# Divided Loyalties
				leader_of_faction = indentured
				leader_of_faction = aristocrat
				leader_of_faction = elitist
				leader_of_faction = labourite
				leader_of_faction = survivalist
				leader_of_faction = warmaker
				leader_of_faction = activist
				leader_of_faction = industrialist
				leader_of_faction = perfectionist
				leader_of_faction = adopter
				leader_of_faction = crusader
				leader_of_faction = shepherd
				leader_of_faction = holistic
				leader_of_faction = warmaker
				leader_of_faction = enslaver
				# Ethics and Civics
				leader_of_faction = socialists
				leader_of_faction = bankers
				leader_of_faction = manufacturers
				leader_of_faction = environmentalists
				leader_of_faction = conservatives
				leader_of_faction = labourites
			}
		}
	}

	immediate = {
		every_owned_leader = {
			limit = {
				OR = {
					has_leader_flag = civil_war_leader_governor_faction
					has_leader_flag = civil_war_leader_admiral_faction
					has_leader_flag = civil_war_leader_scientist_faction
					has_leader_flag = civil_war_leader_general_faction
				}
				NOR = {
					leader_of_faction = totalitarian
					leader_of_faction = progressive
					leader_of_faction = imperialist
					leader_of_faction = prosperity
					leader_of_faction = technologist
					leader_of_faction = traditionalist
					leader_of_faction = xenoist
					leader_of_faction = supremacist
					leader_of_faction = isolationist
					# Divided Loyalties
					leader_of_faction = indentured
					leader_of_faction = aristocrat
					leader_of_faction = elitist
					leader_of_faction = labourite
					leader_of_faction = survivalist
					leader_of_faction = warmaker
					leader_of_faction = activist
					leader_of_faction = industrialist
					leader_of_faction = perfectionist
					leader_of_faction = adopter
					leader_of_faction = crusader
					leader_of_faction = shepherd
					leader_of_faction = holistic
					leader_of_faction = warmaker
					leader_of_faction = enslaver
					# Ethics and Civics
					leader_of_faction = socialists
					leader_of_faction = bankers
					leader_of_faction = manufacturers
					leader_of_faction = environmentalists
					leader_of_faction = conservatives
					leader_of_faction = labourites
				}
			}
			if = {
				limit = {
					has_leader_flag = civil_war_leader_governor_faction
				}
				remove_leader_flag = civil_war_leader_governor_faction
			}
			if = {
				limit = {
					has_leader_flag = civil_war_leader_admiral_faction
				}
				remove_leader_flag = civil_war_leader_admiral_faction
			}
			if = {
				limit = {
					has_leader_flag = civil_war_leader_scientist_faction
				}
				remove_leader_flag = civil_war_leader_scientist_faction
			}
			if = {
				limit = {
					has_leader_flag = civil_war_leader_general_faction
				}
				remove_leader_flag = civil_war_leader_general_faction
			}
		}
	}
}

#################
# Initializers

country_event = { # Initializer for Civil Wars - factions and corrupt
	id = civpan.2000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		OR = {
			any_owned_planet = {
				num_pops >= 1
				is_colony = yes
				solar_system = { check_civpan_capital = yes }
			}
			num_sectors > 1
		}
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
		any_owned_leader = {
			NOT = { has_leader_flag = appointed_heir }
			OR = {
				has_trait = leader_trait_corrupt
				has_leader_flag = civil_war_leader_governor_faction
				has_leader_flag = civil_war_leader_admiral_faction
				has_leader_flag = civil_war_leader_general_faction
				has_leader_flag = civil_war_leader_scientist_faction
			}
    	}
	}

	immediate = {
		country_event = { id = civpan.3000 days = 1 random = 359 }
	}
}

country_event = { # Initializer for Planetary Rebellion
	id = civpan.2100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		NOR = {
			years_passed < 15
			has_ethic = ethic_gestalt_consciousness
		}
	}

	immediate = {
		if = {
			limit = {
				any_owned_planet = {
					has_planet_flag = revolt_tick_5
					has_modifier = planetary_rebels
					is_occupied_flag = no
					has_orbital_bombardment = no
					NOT = {
						has_planet_flag = rebellion_suppressed
					}
				}
			}
			country_event = { id = civpan.3100 days = 1 random = 359 }
		}
		else = {
			# No Planetary Rebellion
		}
	}
}

#################
# Setup Civil War

country_event = { # Civil War
	id = civpan.3000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		num_owned_planets > 1
		any_owned_leader = {
			NOT = { has_leader_flag = appointed_heir }
			OR = {
				has_trait = leader_trait_corrupt
				has_leader_flag = civil_war_leader_governor_faction
				has_leader_flag = civil_war_leader_admiral_faction
				has_leader_flag = civil_war_leader_general_faction
				has_leader_flag = civil_war_leader_scientist_faction
			}
		}
	}
	
	immediate = {

		save_event_target_as = civpan_originator

		# Get civil war number
		get_civil_war_number = yes

		# Set Empire Sprawl Variable
		get_empire_sprawl = yes

		# event lock all fleets to prevent exploits
		# every_owned_fleet = { 
		# 	set_event_locked = yes
		# }

		# Get Civil War Leader
		if = {
			limit = {
				any_owned_leader = {
					has_leader_flag = civil_war_leader_foreign_talks
				}
			}
			random_owned_leader = {
				limit = {
					NOT = { has_leader_flag = appointed_heir }
					has_leader_flag = civil_war_leader_foreign_talks
					OR = {
						has_trait = leader_trait_corrupt
						has_leader_flag = civil_war_leader_governor_faction
						has_leader_flag = civil_war_leader_admiral_faction
						has_leader_flag = civil_war_leader_scientist_faction
						has_leader_flag = civil_war_leader_general_faction
					}
				}
				get_civil_war_leader = yes
			}
		}
		else = {
			random_owned_leader = {
				limit = {
					NOT = { has_leader_flag = appointed_heir }
					OR = {
						has_trait = leader_trait_corrupt
						has_leader_flag = civil_war_leader_governor_faction
						has_leader_flag = civil_war_leader_admiral_faction
						has_leader_flag = civil_war_leader_scientist_faction
						has_leader_flag = civil_war_leader_general_faction
					}
				}
				get_civil_war_leader = yes
			}
		}

		# Will they seize a planet, a sector, or multiple sectors?
		# Scientists and Generals
		if = {
			limit = {
				event_target:civil_war_leader = {
					OR = {
						has_leader_flag = civil_war_leader_scientist_faction
						has_leader_flag = civil_war_leader_general_faction
					}
				}
			}
			if = {
				limit = {
					num_sectors > 2
					any_pop_faction = {
						leader = { is_same_value = event_target:civil_war_leader }
						support >= 0.20
					}
				}
				random_list = {
					60 = { # Planet
						get_civil_war_faction_planet = yes
					}
					30 = { # 1 Sector
						get_random_sector_for_civpan = yes
						get_civil_war_faction = yes
					}
					10 = { # Multiple Sectors
						get_sectors_and_multiply = yes
						set_country_flag = traitor_got_multiple_sectors
						while = {
							count = total_sectors
							# find and flag systems
							random_owned_sector = {
								limit = {
									has_sector_type = normal_sector
									NOT = { has_sector_flag = rebel_sector }
					            }
					            set_sector_flag = rebel_sector
							    every_system_within_border = {
						            limit = {
						                check_civpan_capital = yes
						            }
						            set_star_flag = civil_war_flip
						        }
							}
						}
						get_civil_war_faction = yes
					}
				}
			}
			else_if = {
				limit = {
					num_sectors = 2
					any_pop_faction = {
						leader = { is_same_value = event_target:civil_war_leader }
						support >= 0.20
					}
				}
				random_list = {
					80 = { # Planet
						get_civil_war_faction_planet = yes
					}
					20 = { # Other Sector
						get_random_sector_for_civpan = yes
						get_civil_war_faction = yes
					}
				}
			}
			else = {
				get_civil_war_faction_planet = yes
			}
		}
		# Governors
		else_if = {
			limit = { 
				event_target:civil_war_leader = {
					OR = {
						has_trait = leader_trait_corrupt
						has_leader_flag = civil_war_leader_governor_faction
					}
				}
			}
			if = {
				limit = {
					num_sectors > 2
				}
				random_list = {
					12 = { # They get lucky
						get_sectors_and_multiply = yes
						set_country_flag = traitor_got_multiple_sectors
						while = {
							count = total_sectors
							# find and flag systems
							random_owned_sector = {
								limit = {
									has_sector_type = normal_sector
									NOT = { has_sector_flag = rebel_sector }
					            }
					            set_sector_flag = rebel_sector
							    every_system_within_border = {
						            limit = {
						                check_civpan_capital = yes
						            }
						            set_star_flag = civil_war_flip
						        }
							}
						}
						if = {
							limit {
								event_target:civil_war_leader = {
									has_trait = leader_trait_corrupt
								}
							}
							if = {
								limit = {
									has_global_flag = more_authorities_activated
								}
								country_event = { id = civpancountry_ma.1014 }
							}
							else = {
								country_event = { id = civpancountry.1014 }
							}
						}
						else = {
							get_civil_war_faction = yes
						}
					}
					88 = { # They only get one sector
						if = {
							limit {
								event_target:civil_war_leader = {
									has_trait = leader_trait_corrupt
								}
							}
							if = {
								limit = {
									has_global_flag = more_authorities_activated
								}
								country_event = { id = civpancountry_ma.1014 }
							}
							else = {
								country_event = { id = civpancountry.1014 }
							}
						}
						else = {
							get_civil_war_faction = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					num_sectors = 2
				}
				get_civil_war_faction = yes
			}
			else = {
				get_civil_war_faction_planet = yes
			}
		}
		# Admirals
		else_if = {
			limit = { 
				event_target:civil_war_leader = {
					has_leader_flag = civil_war_leader_admiral_faction
				}
			}
			if = {
				limit = {
					OR = {
						num_sectors > 1
						exists = event_target:admiral_rebel_system
					}
				}
				get_civil_war_faction = yes
			}
			else = {
				get_civil_war_faction_planet = yes
			}
		}
	}
}

country_event = { # Planetary Rebellion
	id = civpan.3100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type_with_subjects = yes
		any_owned_planet = {
			has_planet_flag = revolt_tick_5
			has_modifier = planetary_rebels
			is_occupied_flag = no
			has_orbital_bombardment = no
			NOT = {
				has_planet_flag = rebellion_suppressed
			}
		}
	}
	
	immediate = {

		save_event_target_as = civpan_originator

		# Set Empire Sprawl Variable
		get_empire_sprawl = yes

		# find and flag planet and get species
		random_owned_planet = {
			limit = {
				has_planet_flag = revolt_tick_5
				has_modifier = planetary_rebels
			}
			random_owned_pop = {
				limit = {
					PREV = { is_majority_species = prev.species }
					NOR = { 
						pop_has_trait = trait_syncretic_proles
						is_pop_category = pre_sapients
					}  
				}  
				species = { save_global_event_target_as = civpan_species }
			}
			if = {
				limit = {
					has_global_flag = more_authorities_activated
				}
				planet_event = { id = civplan.2100 }
			}
			else = {
				planet_event = { id = civplan.2000 }
			}
		}
	}
}

#################
# Setup Rebel Country

country_event = { # Setup for Civil War
	id = civpan.4000
	hide_window = yes
	is_triggered_only = yes

	immediate = {

		# saving civpan and host as event targets
		save_event_target_as = civpan_rebels

		# setting mother flag for war trash talk
		event_target:civpan_originator = {
			set_country_flag = civpan_mother_country_@root
		}
		
		# Set Relation Flags
		set_relation_flag = {
			who = event_target:civpan_originator
			flag = civpan_to_host_flag
		}
		from = {
			set_relation_flag = {
				who = root
				flag = host_to_civpan_flag
			}
		}

		# Remove from Federation
		if = {
			limit = {
				has_federation = yes
			}
			leave_alliance = { override_requirements = yes }
		}

		# setting graphical culture
		set_graphical_culture = event_target:civpan_originator

		# establish comms
		every_country = {
			limit = {
				OR = {
					has_communications = event_target:civpan_originator
					intel_level = {
						level > low
						system = event_target:civpan_originator.capital_scope.solar_system
					}
					any_system = {
						has_star_flag = civil_war_flip
						prev = {
							intel_level = {
								level > low
								system = prev
							}
						}
					}
				}
			}
			establish_communications_no_message = root
			establish_contact = { who = root location = from }
		}
		# clear new contact opinion modifier
		if = {
			limit = {
				has_opinion_modifier = {
					who = event_target:civpan_originator
					modifier = opinion_new_contact
				}
			}
			remove_opinion_modifier = {
				who = event_target:civpan_originator
				modifier = opinion_new_contact
			}
		}

		# Flip Stuff
		if = {
			limit = {
				exists = event_target:admiral_rebel_system
			}
			event_target:admiral_rebel_system = {
				if = {
					limit = {
						check_civpan_capital = yes
						exists = starbase
						starbase = {
							is_owned_by = event_target:civpan_originator
						}
					}
					starbase = { set_owner = root }
					give_admiral_planets = yes
					every_neighbor_system = {
						limit = {
							check_civpan_capital = yes
							exists = starbase
							starbase = {
								is_owned_by = event_target:civpan_originator
							}
						}
						starbase = { set_owner = root }
						give_admiral_planets = yes
					}
				}
				else = {
					every_neighbor_system = {
						limit = {
							check_civpan_capital = yes
							exists = starbase
							starbase = {
								is_owned_by = event_target:civpan_originator
							}
						}
						starbase = { set_owner = root }
						give_admiral_planets = yes
					}
				}
			}
			event_target:civpan_originator = {
				every_owned_fleet = {
					limit = {
						has_fleet_flag = civil_war_fleet
					}
					set_owner = event_target:civpan_rebels
				}
			}
			set_country_flag = civpan_fleet
			set_country_flag = admiral_skirmish
			clear_global_event_target = admiral_rebel_system
		}
		else = {
			if = {
				limit = {
					event_target:civil_war_leader = {
						has_leader_flag = civil_war_leader_admiral_faction
					}
				}
				set_country_flag = admiral_has_sector
			}
			# flip remaining flagged systems and remove flags
			event_target:civpan_originator = {
				every_owned_planet = {
					limit = {
						solar_system = {
							has_star_flag = civil_war_flip
						}
					}
					solar_system = {
						every_fleet_in_system = {
							limit = {
								exists = owner
								is_owned_by = event_target:civpan_originator
								any_owned_ship = { is_ship_class = shipclass_military_station }
							}
							set_owner = root
						}
					}
					set_owner = root
					# set_controller = root
				}
				every_owned_sector = {
					limit = {
						has_sector_flag = rebel_sector
		            }
		            remove_sector_flag = rebel_sector
				}
				every_system_within_border = {
					limit = {
						has_star_flag = civil_war_flip
					}
					remove_star_flag = civil_war_flip
					starbase = { set_owner = root }
				}
			}
		}

		# get host's technologies
		copy_techs_from = {
			target = event_target:civpan_originator
			except = {
				# Horizon Signal
				tech_akx_worm_1
				tech_akx_worm_2
				tech_akx_worm_3
			}
		}

		# survey host's surveyed planets
		every_galaxy_planet = {
			limit = {
				is_surveyed = {
					who = event_target:civpan_originator
					status = yes
				}
			}
			set_surveyed = {
				surveyed = yes
				surveyor = root
			}
		}

		# Set capital starbase size
		if = {
			limit = {
				exists = capital_scope
			}
			capital_scope = {
				solar_system = {
					starbase = {
						if = {
							limit = {
								NOT = { has_starbase_size >= starbase_starport }
							}
							set_starbase_size = starbase_starport
						}
					}
				}
			}
		}

		# create fleets and give resources, destroy home country fleets
		if = {
			limit = {
				num_owned_planets > 0
			}
			country_event = { id = civpan.7000 }
		}
		else = {
			if = {
				limit = {
					event_target:civpan_originator = {
						has_country_flag = empire_sprawl_0 
					}
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 3
							create_army_transport = {
								species = event_target:civpan_species
								army_type = "assault_army"
							}
						}
						set_location = {
							target = event_target:admiral_rebel_rally_point
							distance = 5
							angle = random
						}
					}
				}
				add_resource = {
					energy = 3000
					minerals = 3000
					influence = 1000
					alloys = 3000
				}
			}
			else_if = {
				limit = {
					event_target:civpan_originator = {
						has_country_flag = empire_sprawl_0_10
					}
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 5
							create_army_transport = {
								species = event_target:civpan_species
								army_type = "assault_army"
							}
						}
						set_location = {
							target = event_target:admiral_rebel_rally_point
							distance = 5
							angle = random
						}
					}
				}
				add_resource = {
					energy = 6000
					minerals = 6000
					influence = 1000
					alloys = 6000
				}
			}
			else_if = {
				limit = {
					event_target:civpan_originator = {
						has_country_flag = empire_sprawl_10_20
					}
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 8
							create_army_transport = {
								species = event_target:civpan_species
								army_type = "assault_army"
							}
						}
						set_location = {
							target = event_target:admiral_rebel_rally_point
							distance = 5
							angle = random
						}
					}
				}
				add_resource = {
					energy = 8000
					minerals = 8000
					influence = 1000
					alloys = 8000
				}
			}
			else_if = {
				limit = {
					event_target:civpan_originator = {
						has_country_flag = empire_sprawl_20_30
					}
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 11
							create_army_transport = {
								species = event_target:civpan_species
								army_type = "assault_army"
							}
						}
						set_location = {
							target = event_target:admiral_rebel_rally_point
							distance = 5
							angle = random
						}
					}
				}
				add_resource = {
					energy = 10000
					minerals = 10000
					influence = 1000
					alloys = 10000
				}
			}
			else_if = {
				limit = {
					event_target:civpan_originator = {
						has_country_flag = empire_sprawl_30_40
					}
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 14
							create_army_transport = {
								species = event_target:civpan_species
								army_type = "assault_army"
							}
						}
						set_location = {
							target = event_target:admiral_rebel_rally_point
							distance = 5
							angle = random
						}
					}
				}
				add_resource = {
					energy = 12000
					minerals = 12000
					influence = 1000
					alloys = 12000
				}
			}
			else_if = {
				limit = {
					event_target:civpan_originator = {
						has_country_flag = empire_sprawl_40_50
					}
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 17
							create_army_transport = {
								species = event_target:civpan_species
								army_type = "assault_army"
							}
						}
						set_location = {
							target = event_target:admiral_rebel_rally_point
							distance = 5
							angle = random
						}
					}
				}
				add_resource = {
					energy = 14000
					minerals = 14000
					influence = 1000
					alloys = 14000
				}
			}
			else_if = {
				limit = {
					event_target:civpan_originator = {
						has_country_flag = empire_sprawl_50_60
					}
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 19
							create_army_transport = {
								species = event_target:civpan_species
								army_type = "assault_army"
							}
						}
						set_location = {
							target = event_target:admiral_rebel_rally_point
							distance = 5
							angle = random
						}
					}
				}
				add_resource = {
					energy = 16000
					minerals = 16000
					influence = 1000
					alloys = 15000
				}
			}
			else_if = {
				limit = {
					event_target:civpan_originator = {
						has_country_flag = empire_sprawl_60_70
					}
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 21
							create_army_transport = {
								species = event_target:civpan_species
								army_type = "assault_army"
							}
						}
						set_location = {
							target = event_target:admiral_rebel_rally_point
							distance = 5
							angle = random
						}
					}
				}
				add_resource = {
					energy = 18000
					minerals = 18000
					influence = 1000
					alloys = 15000
				}
			}
			else_if = {
				limit = {
					event_target:civpan_originator = {
						has_country_flag = empire_sprawl_70_80
					}
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 24
							create_army_transport = {
								species = event_target:civpan_species
								army_type = "assault_army"
							}
						}
						set_location = {
							target = event_target:admiral_rebel_rally_point
							distance = 5
							angle = random
						}
					}
				}
				add_resource = {
					energy = 20000
					minerals = 20000
					influence = 1000
					alloys = 15000
				}
			}
			else_if = {
				limit = {
					event_target:civpan_originator = {
						has_country_flag = empire_sprawl_80_90
					}
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 27
							create_army_transport = {
								species = event_target:civpan_species
								army_type = "assault_army"
							}
						}
						set_location = {
							target = event_target:admiral_rebel_rally_point
							distance = 5
							angle = random
						}
					}
				}
				add_resource = {
					energy = 22000
					minerals = 22000
					influence = 1000
					alloys = 15000
				}
			}
			else_if = {
				limit = {
					event_target:civpan_originator = {
						has_country_flag = empire_sprawl_90_100
					}
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 30
							create_army_transport = {
								species = event_target:civpan_species
								army_type = "assault_army"
							}
						}
						set_location = {
							target = event_target:admiral_rebel_rally_point
							distance = 5
							angle = random
						}
					}
				}
				add_resource = {
					energy = 24000
					minerals = 24000
					influence = 1000
					alloys = 15000
				}
			}
			else_if = {
				limit = {
					event_target:civpan_originator = {
						has_country_flag = empire_sprawl_100_plus
					}
				}
				create_fleet = {
					effect = {
						set_owner = root
						while = {
							count = 33
							create_army_transport = {
								species = event_target:civpan_species
								army_type = "assault_army"
							}
						}
						set_location = {
							target = event_target:admiral_rebel_rally_point
							distance = 5
							angle = random
						}
					}
				}
				add_resource = {
					energy = 26000
					minerals = 26000
					influence = 1000
					alloys = 15000
				}
			}
		}

		# Maybe the rebels get an Attack Moon/Planet/Systemcraft if it was in their borders
		every_system_within_border = {
			random_ship_in_system = {
				limit = {
					is_owned_by = event_target:civpan_originator
					OR = {
						# Gigastructures
						is_ship_size = giga_massive_planet
		    			is_ship_size = giga_planet_behemoth
		    			is_ship_size = giga_systemcraft
		    			# Engineers of Life
		    			is_ship_size = eng_imp_stellar_devourer
		    			is_ship_size = eng_imp_dimensional_horror
		    			is_ship_size = eng_imp_space_dragon
		    			is_ship_size = eng_imp_space_dragon_baby
		    			is_ship_size = eng_imp_leviathan_01_voidspawn
		    			is_ship_size = eng_imp_void_cloud_lesser
		    			is_ship_size = eng_imp_void_cloud
		    			is_ship_size = eng_imp_corrupted_avatar
		    			is_ship_size = eng_imp_shardlings
		    			is_ship_size = eng_imp_shards
		    			is_ship_size = eng_imp_quintessence
		    			is_ship_size = eng_imp_crystal_station_large
		    			is_ship_size = eng_imp_space_whale_calf
		    			is_ship_size = eng_imp_space_whale_cow
		    			is_ship_size = eng_imp_space_whale_bull
		    			is_ship_size = eng_imp_leviathan_01_elder_tiyanki
		    			is_ship_size = eng_imp_amoeba
		    			is_ship_size = eng_imp_mother
		    			is_ship_size = eng_imp_cente
					}
				}
				fleet = {
					random_list = {
						60 = { # The rebels get your big toy.
							set_owner = event_target:civpan_rebels
						}
						40 = {
							# The rebels couldn't pull it off
						}
					}
				}
			}
		}

		add_100_unity_per_year_passed = yes # scripted effect

		#science
		create_fleet = {
			effect = {
				set_owner = root

				create_ship = {
					name = random
					random_existing_design = science
				}

				set_fleet_stance = evasive				
				set_location = root.capital_scope
				
				owner = {
					create_leader = {
						name = random
						class = scientist
						sub_type = survey
						species = event_target:civpan_species
					}
				}
				set_leader = last_created_leader
			}			
		}
			
		#constructor
		create_fleet = {
			effect = {
				set_owner = root
				
				create_ship = {
					name = random
					random_existing_design = constructor
				}
				
				set_fleet_stance = evasive
				set_location = root.capital_scope
			}
		}

		# Colony Ship (for admirals with no planets)
		if = {
			limit = {
				num_owned_planets = 0
			}
			create_fleet = {
				effect = {
					set_owner = root
					
					create_ship = {
						name = random
						random_existing_design = colonizer
					}
					
					set_fleet_stance = evasive
					set_location = {
						target = event_target:admiral_rebel_rally_point
						distance = 5
						angle = random
					}
				}
			}
		}

		# Make Traitor Leader
		country_event = { id = civpan.6000 }

		# If civil war country was Khan, set title.
		event_target:civpan_originator = {
			if = {
				limit = {
					OR = {
						has_civic = civic_diadochi
						has_civic = civic_great_khans_legacy
					}
				}
				root = {
					set_male_ruler_title = "Khan"
					set_female_ruler_title = "Khan"
				}
			}
		}

		# If this was done via espionage operation, give them the resources
		if = {
			limit = {
				ruler = {
					has_leader_flag = small_op_resources
				}
			}
			add_resource = {
				energy = 2000
				alloys = 1000
				consumer_goods = 500
			}
		}
		else_if = {
			limit = {
				ruler = {
					has_leader_flag = medium_op_resources
				}
			}
			add_resource = {
				energy = 5000
				alloys = 2500
				consumer_goods = 1000
			}
		}
		else_if = {
			limit = {
				ruler = {
					has_leader_flag = large_op_resources
				}
			}
			add_resource = {
				energy = 10000
				alloys = 5000
				consumer_goods = 2500
			}
		}
		if = {
			limit = {
				ruler = {
					OR = {
						has_leader_flag = small_op_resources
						has_leader_flag = medium_op_resources
						has_leader_flag = large_op_resources
					}
				}
			}
			ruler = {
				remove_leader_flag = small_op_resources
				remove_leader_flag = medium_op_resources
				remove_leader_flag = large_op_resources
			}
		}
	}

	after = {

		# Fix Fleets
		# event_target:civpan_originator = {
		# 	every_owned_fleet = {
		# 		set_event_locked = no
		# 	}
		# }
		# every_owned_fleet = {
		# 	set_event_locked = no
		# }

		# To fix naming issues. This line is necessary.
		if = {
			limit = {
				exists = capital_scope
				capital_scope = { NOT = { has_planet_flag = civpan_name_changed } }
				event_target:civpan_originator = { is_ai = yes }
			}
			capital_scope = {
				set_name = random
				set_planet_flag = civpan_name_changed
			}
		}
		set_name = random

		if = {
			limit = {
				num_owned_planets > 0
			}
			# create armies
			create_civpan_armies = yes
		}

		# Flavor Civics
		if = {
			limit = {
				NOT = { has_civic = civic_warrior_culture }
				ruler = {
					has_trait = leader_trait_army_veteran
				}
			}
			force_add_civic = civic_warrior_culture
		}
		else_if = {
			limit = {
				NOT = { has_civic = civic_distinguished_admiralty }
				ruler = {
					has_trait = leader_trait_retired_fleet_officer
				}
			}
			force_add_civic = civic_distinguished_admiralty
		}
		else_if = {
			limit = {
				NOT = { has_civic = civic_slaver_guilds }
				ruler = {
					has_trait = leader_trait_iron_fist
				}
			}
			force_add_civic = civic_slaver_guilds
		}

		# Intel
		add_intel = {
			who = event_target:civpan_originator
			amount = 70
		}

		# Back to Mother Country
		event_target:civpan_originator = {
			
			# Add intel
			add_intel = {
				who = event_target:civpan_rebels
				amount = 70
			}

			# Declare War
			# Subject Civil War - Gov/General/Scientist
			if = {
				limit = {
					is_subject = yes
					event_target:civil_war_leader = {
						NOT = { has_leader_flag = civil_war_leader_admiral_faction }
					}
				}
				overlord = { country_event = { id = civcom.3000 } }
			}
			# Subject Civil War - Admiral
			else_if = {
				limit = {
					is_subject = yes
					event_target:civil_war_leader = {
						has_leader_flag = civil_war_leader_admiral_faction
					}
				}
				overlord = { country_event = { id = civcom.3001 } }
			}
			# Governor
			else_if = {
				limit = {
					event_target:civil_war_leader = {
						OR = {
							has_trait = leader_trait_corrupt
							has_leader_flag = civil_war_leader_governor_faction
						}
					}
				}
				country_event = { id = civpan.5000 }
			}
			# Admiral
			else_if = {
				limit = {
					event_target:civil_war_leader = {
						has_leader_flag = civil_war_leader_admiral_faction
					}
				}
				country_event = { id = civpan.5001 }
			}
			# General
			else_if = {
				limit = {
					event_target:civil_war_leader = {
						has_leader_flag = civil_war_leader_general_faction
					}
				}
				country_event = { id = civpan.5002 }
			}
			# Scientist
			else_if = {
				limit = {
					event_target:civil_war_leader = {
						has_leader_flag = civil_war_leader_scientist_faction
					}
				}
				country_event = { id = civpan.5003 }
			}

			remove_country_flag = empire_sprawl_0
			remove_country_flag = empire_sprawl_0_10
			remove_country_flag = empire_sprawl_10_20
			remove_country_flag = empire_sprawl_20_30
			remove_country_flag = empire_sprawl_30_40
			remove_country_flag = empire_sprawl_40_50
			remove_country_flag = empire_sprawl_50_60
			remove_country_flag = empire_sprawl_60_70
			remove_country_flag = empire_sprawl_70_80
			remove_country_flag = empire_sprawl_80_90
			remove_country_flag = empire_sprawl_90_100
			remove_country_flag = empire_sprawl_100_plus
		}
	}
}

country_event = { # Setup for Planetary Rebellion
	id = civpan.4100
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_country_type = default

		create_leader = {
			class = ruler
			species = event_target:civpan_species
			name = random
			skill = 5
			traits = {
				trait = trait_ruler_deep_connections
			}
			effect = {
				save_global_event_target_as = civil_war_leader_ruler
			}
		}
		set_leader = event_target:civil_war_leader_ruler

		set_relation_flag = {
			who = event_target:civpan_originator
			flag = civpan_to_host_flag
		}

		event_target:civpan_originator = {
			set_relation_flag = {
				who = root
				flag = host_to_civpan_flag
			}
		}

		# setting graphical culture
		set_graphical_culture = event_target:civpan_originator

		# establish comms
		every_country = {
			limit = {
				OR = {
					has_communications = event_target:civpan_originator
					intel_level = {
						level > low
						system = event_target:civpan_rebels.capital_scope.solar_system
					}
					any_system = {
						has_star_flag = civil_war_flip
						prev = {
							intel_level = {
								level > low
								system = prev
							}
						}
					}
				}
			}
			establish_communications_no_message = root
			establish_contact = { who = root location = from }
		}

		# clear new contact opinion modifier
		if = {
			limit = {
				has_opinion_modifier = {
					who = event_target:civpan_originator
					modifier = opinion_new_contact
				}
			}
			remove_opinion_modifier = {
				who = event_target:civpan_originator
				modifier = opinion_new_contact
			}
		}

		# get host's technologies
		copy_techs_from = {
			target = event_target:civpan_originator
			except = {
				# Horizon Signal
				tech_akx_worm_1
				tech_akx_worm_2
				tech_akx_worm_3
			}
		}

		# survey host's surveyed planets
		every_galaxy_planet = {
			limit = {
				is_surveyed = {
					who = event_target:civpan_originator
					status = yes
				}
			}
			set_surveyed = {
				surveyed = yes
				surveyor = root
			}
		}

		# Set capital starbase size and flip neighbor systems
		capital_scope = {
			solar_system = {
				starbase = {
					if = {
						limit = {
							NOT = { has_starbase_size >= starbase_starport }
						}
						set_starbase_size = starbase_starport
					}
				}
				every_neighbor_system = {
					limit = {
						NOR = {
							any_system_planet = {
								is_owned_by = event_target:civpan_originator
							}
							any_fleet_in_system = {
								is_ship_class = shipclass_military
								is_owned_by = event_target:civpan_originator
							}
						}
						exists = starbase
						starbase = {
							is_owned_by = event_target:civpan_originator
						}
					}
					starbase = { set_owner = root }
				}
			}
		}

		#science
		create_fleet = {
			effect = {
				set_owner = root

				create_ship = {
					name = random
					random_existing_design = science
				}

				set_fleet_stance = evasive				
				set_location = root.capital_scope
				
				owner = {
					create_leader = {
						class = scientist
						sub_type = survey
						name = random
						species = event_target:civpan_species
					}
				}
				set_leader = last_created_leader
			}			
		}
			
		#constructor
		create_fleet = {
			effect = {
				set_owner = root
				
				create_ship = {
					name = random
					random_existing_design = constructor
				}
				
				set_fleet_stance = evasive
				set_location = root.capital_scope
			}
		}
	}

	after = {

		# Fix Fleets
		# every_owned_fleet = {
		# 	set_event_locked = no
		# }

		# To fix naming issues. This line is necessary.
		if = {
			limit = {
				capital_scope = { NOT = { has_planet_flag = civpan_name_changed } }
				event_target:civpan_originator = { is_ai = yes }
			}
			capital_scope = {
				set_name = random
				set_planet_flag = civpan_name_changed
			}
		}
		set_name = random

		add_intel = {
			who = event_target:civpan_originator
			amount = 70
		}

		# create ships
		if = {
			limit = {
				event_target:civpan_originator = {
					has_country_flag = empire_sprawl_0 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:civpan_rebels
					while = {
						count = 2
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 4000
				minerals = 4000
				influence = 200
				alloys = 4000
			}
		}
		else_if = {
			limit = {
				event_target:civpan_originator = {
					has_country_flag = empire_sprawl_0_10 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:civpan_rebels
					while = {
						count = 3
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 5000
				minerals = 5000
				influence = 200
				alloys = 5000
			}
		}
		else_if = {
			limit = {
				event_target:civpan_originator = {
					has_country_flag = empire_sprawl_10_20 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:civpan_rebels
					while = {
						count = 4
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:civpan_originator = {
					has_country_flag = empire_sprawl_20_30 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:civpan_rebels
					while = {
						count = 5
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:civpan_originator = {
					has_country_flag = empire_sprawl_30_40 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:civpan_rebels
					while = {
						count = 6
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:civpan_originator = {
					has_country_flag = empire_sprawl_40_50 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:civpan_rebels
					while = {
						count = 7
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:civpan_originator = {
					has_country_flag = empire_sprawl_50_60 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:civpan_rebels
					while = {
						count = 10
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:civpan_originator = {
					has_country_flag = empire_sprawl_60_70 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:civpan_rebels
					while = {
						count = 12
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:civpan_originator = {
					has_country_flag = empire_sprawl_70_80 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:civpan_rebels
					while = {
						count = 14
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:civpan_originator = {
					has_country_flag = empire_sprawl_80_90 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:civpan_rebels
					while = {
						count = 16
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:civpan_originator = {
					has_country_flag = empire_sprawl_90_100 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:civpan_rebels
					while = {
						count = 18
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		else_if = {
			limit = {
				event_target:civpan_originator = {
					has_country_flag = empire_sprawl_100_plus 
				}
			}
			create_fleet = {
				effect = {
					set_owner = event_target:civpan_rebels
					while = {
						count = 20
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
				}
			}
			random_owned_planet = {
				last_created_fleet = {
					set_location = prev
				}
			}
			add_resource = {
				energy = 6000
				minerals = 6000
				influence = 200
				alloys = 6000
			}
		}
		add_100_unity_per_year_passed = yes # scripted effect

		event_target:civpan_originator = {
			add_intel = {
				who = event_target:civpan_rebels
				amount = 70
			}
			remove_country_flag = empire_sprawl_0
			remove_country_flag = empire_sprawl_0_10
			remove_country_flag = empire_sprawl_10_20
			remove_country_flag = empire_sprawl_20_30
			remove_country_flag = empire_sprawl_30_40
			remove_country_flag = empire_sprawl_40_50
			remove_country_flag = empire_sprawl_50_60
			remove_country_flag = empire_sprawl_60_70
			remove_country_flag = empire_sprawl_70_80
			remove_country_flag = empire_sprawl_80_90
			remove_country_flag = empire_sprawl_90_100
			remove_country_flag = empire_sprawl_100_plus
		}
	}
}

#################
# Communications

country_event = { # Governor - Communications
	id = civpan.5000
	picture = GFX_evt_civil_action
	title = civpan.5000.name
	desc = civpan.5000.desc
	hide_window = no
	is_triggered_only = yes

	option = {
		name = ON_SCREEN_REBELS
		ai_chance = {
			factor = 1
		}
		hidden_effect = {
			# Regular Governor, didnt get multiple sectors, may ask to become a vassal
			if = {
				limit = {
					NOT = { has_country_flag = traitor_got_multiple_sectors }
					event_target:civil_war_leader = {
						has_leader_flag = civil_war_leader_governor_faction
						NOT = { has_trait = leader_trait_corrupt }
					}
				}
				random_list = {
					85 = { country_event = { id = civcom.5000 } }
					15 = { country_event = { id = civcom.5100 } }
				}
			}
			# Regular Governor got multiple sectors, wont ask to become a vassal.
			else_if = {
				limit = {
					has_country_flag = traitor_got_multiple_sectors
					event_target:civil_war_leader = {
						has_leader_flag = civil_war_leader_governor_faction
						NOT = { has_trait = leader_trait_corrupt }
					}
				}
				country_event = { id = civcom.5000 }
			}
			# Corrupt governor got multiple sectors, wont ask to become a vassal.
			else_if = {
				limit = {
					has_country_flag = traitor_got_multiple_sectors
				}
				country_event = { id = civcom.5040 }
			}
			# Corrupt governor, didnt get multiple sectors, may ask to become vassal
			else = {
				random_list = {
					95 = { country_event = { id = civcom.5040 } }
					5 = { country_event = { id = civcom.5140 } }
				}
			}
		}
	}
}

country_event = { # Admiral - Communications
	id = civpan.5001
	picture = GFX_evt_civil_action
	title = civpan.5001.name
	hide_window = no
	is_triggered_only = yes

	desc = {
		text = civpan.5001.desc
		trigger = {
			from = { has_country_flag = admiral_skirmish }
		}
	}

	desc = {
		text = civpan.5001.sector.desc
		trigger = {
			from = { NOT = { has_country_flag = admiral_skirmish } }
		}
	}

	option = {
		name = ON_SCREEN_REBELS
		ai_chance = {
			factor = 1
		}
		hidden_effect = {
			if = {
				limit = {
					event_target:civpan_rebels = {
						num_owned_planets > 0
					}
				}
				random_list = {
					95 = { country_event = { id = civcom.5031 } }
					5 = { country_event = { id = civcom.5130 } }
				}
			}
			else = {
				country_event = { id = civcom.5030 }
			}
		}
	}
}

country_event = { # General - Communications
	id = civpan.5002
	picture = GFX_evt_civil_action
	title = civpan.5002.name
	desc = civpan.5002.desc
	hide_window = no
	is_triggered_only = yes

	option = {
		name = ON_SCREEN_REBELS
		ai_chance = {
			factor = 1
		}
		hidden_effect = {
			random_list = {
				80 = { country_event = { id = civcom.5020 } }
				20 = { country_event = { id = civcom.5120 } }
			}
		}
	}
}

country_event = { # Scientist - Communications
	id = civpan.5003
	picture = GFX_evt_civil_action
	title = civpan.5003.name
	desc = civpan.5003.desc
	hide_window = no
	is_triggered_only = yes

	option = {
		name = ON_SCREEN_REBELS
		ai_chance = {
			factor = 1
		}
		hidden_effect = {
			random_list = {
				75 = { country_event = { id = civcom.5010 } }
				25 = { country_event = { id = civcom.5110 } }
			}
		}
	}
}

country_event = { # Declare War vs. Governor / Scientist / General
	id = civpan.5100
	hide_window = yes
	is_triggered_only = yes

	immediate = { 
		hidden_effect = {
			get_declare_war_civpan = yes
		}
	}
}

country_event = { # Declare War vs. Admiral
	id = civpan.5101
	hide_window = yes
	is_triggered_only = yes

	immediate = { 
		hidden_effect = {
			if = {
				limit = {
					event_target:civpan_rebels = {
						num_owned_planets > 0
					}
				}
				get_declare_war_civpan = yes
			}
			else = {
				declare_war = {
					target = event_target:civpan_rebels
					name = "NAME_admr_rebellion_war"
					attacker_war_goal = "wg_admiral_rebellion"
				}
			}
			clear_global_event_target = admiral_rebel_rally_point
		}
	}
}

country_event = { # Declare War vs Planet
	id = civpan.5200
	hide_window = yes
	is_triggered_only = yes

	immediate = { 
		if = {
			limit = {
				has_federation = yes
			}
			every_federation_ally = {
				set_country_flag = remove_from_civil_war
			}
		}
		if = {
			limit = {
				is_overlord = yes
			}
			every_subject = {
				set_country_flag = remove_from_civil_war
			}
		}
		get_declare_war_plan_rebellion = yes
	}
}

country_event = { # Declare War vs. Governor / Scientist / General / Heir Subjects rebels
	id = civpan.5300
	hide_window = yes
	is_triggered_only = yes

	immediate = { 
		hidden_effect = {
			if = {
				limit = {
					has_federation = yes
				}
				every_federation_ally = {
					limit = {
						NOT = { is_same_value = event_target:civpan_originator }
					}
					set_country_flag = remove_from_civil_war
				}
			}
			get_declare_war_civpan_subject = yes
		}
	}
}

#################
# Leader Setting

country_event = { # Traitorous Governor/Scientist/General becomes rebellion country leader
	id = civpan.6000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		clone_leader = {
			target = event_target:civil_war_leader
			class = ruler
			effect = {
				if = {
					limit = {
						event_target:civil_war_leader = {
							OR = {
								has_trait = leader_trait_corrupt
								has_leader_flag = civil_war_leader_governor_faction
							}
							
						}
					}
					set_leader_flag = governor_civil_war_leader
				}
				else_if = {
					limit = {
						event_target:civil_war_leader = {
							has_leader_flag = civil_war_leader_general_faction
						}
					}
					set_leader_flag = general_civil_war_leader
				}
				else_if = {
					limit = {
						event_target:civil_war_leader = {
							has_leader_flag = civil_war_leader_scientist_faction
						}
					}
					set_leader_flag = scientist_civil_war_leader
				}
				else_if = {
					limit = {
						event_target:civil_war_leader = {
							has_leader_flag = civil_war_leader_admiral_faction
						}
					}
					set_leader_flag = admiral_civil_war_leader
					# Make copy of admiral and set them as leader of their fleet
					if = {
						limit = {
							prev = {
								NOT = { has_country_flag = admiral_has_sector }
							}
						}
						set_leader_flag = admiral_copy_1
						prev = {
							clone_leader = {
								target = event_target:civil_war_leader
								class = admiral
								effect = {
									set_leader_flag = admiral_copy_2
								}
							}
							random_owned_fleet = {
								limit = {
									has_fleet_flag = civil_war_fleet
								}
								set_leader = last_created_leader
							}
						}
					}
				}
				add_trait = trait_ruler_deep_connections
				save_global_event_target_as = civil_war_leader_ruler
				set_leader_flag = started_civil_war
			}
		}
		set_leader = event_target:civil_war_leader_ruler
		if = {
			limit = {
				event_target:civil_war_leader = {
					has_leader_flag = small_op_resources
				}
			}
			event_target:civil_war_leader_ruler = {
				set_leader_flag = small_op_resources
			}
		}
		else_if = {
			limit = {
				event_target:civil_war_leader = {
					has_leader_flag = medium_op_resources
				}
			}
			event_target:civil_war_leader_ruler = {
				set_leader_flag = medium_op_resources
			}
		}
		else_if = {
			limit = {
				event_target:civil_war_leader = {
					has_leader_flag = large_op_resources
				}
			}
			event_target:civil_war_leader_ruler = {
				set_leader_flag = large_op_resources
			}
		}
	}

	after = {
		event_target:civil_war_leader = {
			set_leader_flag = dead_ruler
			kill_leader = { show_notification = no }
		}
	}
}

country_event = { # Traitorous Admiral becomes rebellion country leader and admiral
	id = civpan.6001
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		clone_leader = {
			target = event_target:civil_war_leader
			class = ruler
			effect = {
				save_global_event_target_as = civil_war_leader_ruler
				set_leader_flag = admiral_civil_war_leader
				set_leader_flag = started_civil_war
				set_leader_flag = admiral_copy_1
			}
		}
		set_leader = last_created_leader

		clone_leader = {
			target = event_target:civil_war_leader
			class = admiral
			effect = {
				set_leader_flag = admiral_copy_2
			}
		}

		random_owned_fleet = {
			limit = {
				has_fleet_flag = civil_war_fleet
			}
			remove_fleet_flag = civil_war_fleet
			set_leader = last_created_leader
		}
	}
}

#################
# Fleet Stuff

country_event = { # Create Fleets and give resources, faction civil wars
	id = civpan.7000
	hide_window = yes
	is_triggered_only = yes

	immediate = {

		if = {
			limit = {
				exists = event_target:civpan_party
			}
			event_target:civpan_party = {
				export_trigger_value_to_variable = {
					trigger = support
					variable = faction_support_level
				}
			}
			event_target:civpan_originator = {
				export_trigger_value_to_variable = {
					trigger = used_naval_capacity_percent
					variable = mother_navy_size
				}
				multiply_variable = {
					which = mother_navy_size
					value = event_target:civpan_party.faction_support_level
				}
				create_fleet_from_naval_cap = mother_navy_size
			}
		}
		else = {
			event_target:civpan_originator = {
				export_trigger_value_to_variable = {
					trigger = used_naval_capacity_percent
					variable = mother_navy_size
				}
				random_list = {
					20 = {
						multiply_variable = {
							which = mother_navy_size
							value = 0.05
						}
						create_fleet_from_naval_cap = mother_navy_size
						set_country_flag = 5_corrupt
					}
					20 = {
						multiply_variable = {
							which = mother_navy_size
							value = 0.1
						}
						create_fleet_from_naval_cap = mother_navy_size
						set_country_flag = 10_corrupt
					}
					20 = {
						multiply_variable = {
							which = mother_navy_size
							value = 0.15
						}
						create_fleet_from_naval_cap = mother_navy_size
						set_country_flag = 15_corrupt
					}
					20 = {
						multiply_variable = {
							which = mother_navy_size
							value = 0.2
						}
						create_fleet_from_naval_cap = mother_navy_size
						set_country_flag = 20_corrupt
					}
					20 = {
						multiply_variable = {
							which = mother_navy_size
							value = 0.25
						}
						create_fleet_from_naval_cap = mother_navy_size
						set_country_flag = 25_corrupt
					}
				}
			}
		}

		random_owned_planet = {
			last_created_fleet = {
				set_owner = root
				set_location = prev
			}
		}
		
		add_resource = {
			energy = 8000
			minerals = 8000
			influence = 750
			alloys = 8000
		}
	}

	after = {
		# Destroy Fleet percentage from home country
		country_event = { id = civpan.7001 }
	}
}

country_event = { # Destroy Fleets, faction civil wars
	id = civpan.7001
	hide_window = yes
	is_triggered_only = yes

	immediate = {

		event_target:civpan_originator = {

			event_target:civpan_party = {
				multiply_variable = {
					which = faction_support_level
					value = 100
				}
				floor_variable = faction_support_level
			}

			every_owned_fleet = {
				set_variable = { which = ship_count value = 0 }
				every_owned_ship = {
					limit = { is_ship_class = shipclass_military }
					PREV = { change_variable = { which = ship_count value = event_target:civpan_party.faction_support_level } }
				}
				divide_variable = { which = ship_count value = 100 }
				while = {
					count = ship_count
					random_owned_ship = {
						limit = {
				    		is_ship_class = shipclass_military
				    		NOR = {
				    			# Gigastructures
				    			is_ship_size = giga_massive_planet
				    			is_ship_size = giga_planet_behemoth
				    			is_ship_size = giga_systemcraft
				    			is_ship_size = space_dragon_origin
				    			is_ship_size = space_dragon_origin_baby
				    			is_ship_size = space_amoeba_centenarian
				    			is_ship_size = space_whale_1
				    			is_ship_size = space_whale_2
				    			is_ship_size = space_whale_3
				    			is_ship_size = space_whale_4
				    			# Engineers of Life
				    			is_ship_size = eng_imp_stellar_devourer
				    			is_ship_size = eng_imp_dimensional_horror
				    			is_ship_size = eng_imp_space_dragon
				    			is_ship_size = eng_imp_space_dragon_baby
				    			is_ship_size = eng_imp_leviathan_01_voidspawn
				    			is_ship_size = eng_imp_void_cloud_lesser
				    			is_ship_size = eng_imp_void_cloud
				    			is_ship_size = eng_imp_corrupted_avatar
				    			is_ship_size = eng_imp_shardlings
				    			is_ship_size = eng_imp_shards
				    			is_ship_size = eng_imp_quintessence
				    			is_ship_size = eng_imp_crystal_station_large
				    			is_ship_size = eng_imp_space_whale_calf
				    			is_ship_size = eng_imp_space_whale_cow
				    			is_ship_size = eng_imp_space_whale_bull
				    			is_ship_size = eng_imp_leviathan_01_elder_tiyanki
				    			is_ship_size = eng_imp_amoeba
				    			is_ship_size = eng_imp_mother
				    			is_ship_size = eng_imp_cente
				    		}
				    	}
					    delete_ship = THIS
					}
				}
				set_variable = { which = ship_count value = 0 }
			}
		}
	}
}

#################
# Subject Stuff

country_event = { # War won - Transfer subject systems back to subjects
	id = civpan.8000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_country_flag = transfer_subject_systems
		any_subject = {
			has_country_flag = subject_for_systems
		}
	}

	immediate = {
		country_event = { id = civpan.8010 days = 1 }
	}
}

country_event = { # War won - Subject System Transfer Initializer
	id = civpan.8010
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_country_flag = transfer_subject_systems
		any_subject = {
			has_country_flag = subject_for_systems
		}
	}

	immediate = {
		remove_country_flag = transfer_subject_systems
		random_subject = {
			limit = {
				has_country_flag = subject_for_systems
			}
			remove_country_flag = subject_for_systems
			set_timed_country_flag = { flag = recent_civil_war days = 1800 }
			add_monthly_resource_mult = {
				resource = unity
				value = @tier3materialreward
				min = @tier3materialmin
			}
			save_event_target_as = subject_country_transfer
		}
		# This section will not work unless a day has passed
		every_system_within_border = {
			limit = {
				has_star_flag = subject_system
				exists = starbase
			}
			remove_star_flag = subject_system
			starbase = { set_owner = event_target:subject_country_transfer }
		}
	}
}

country_event = { # Status quo - Subject System Transfer Initializer
	id = civpan.8100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		fromfrom = {
			has_country_flag = transfer_subject_systems
			any_subject = {
				has_country_flag = subject_for_systems
			}
		}
	}

	immediate = {
		fromfrom = {
			country_event = { id = civpan.8110 days = 1 }
		}
		fromfromfrom = {
			save_global_event_target_as = defeated_country_systems
		}
	}
}

country_event = { # Status quo - Transfer subject systems back to subjects
	id = civpan.8110
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_country_flag = transfer_subject_systems
		any_subject = {
			has_country_flag = subject_for_systems
		}
	}

	immediate = {
		remove_country_flag = transfer_subject_systems
		random_subject = {
			limit = {
				has_country_flag = subject_for_systems
			}
			remove_country_flag = subject_for_systems
			set_timed_country_flag = { flag = recent_civil_war days = 1800 }
			add_monthly_resource_mult = {
				resource = unity
				value = @tier1materialreward
				min = @tier1materialmin
			}
			save_event_target_as = subject_country_transfer
		}
		# This section will not work unless a day has passed
		every_system_within_border = {
			limit = {
				has_star_flag = subject_system
				exists = starbase
			}
			remove_star_flag = subject_system
			starbase = { set_owner = event_target:subject_country_transfer }
		}
		event_target:defeated_country_systems = {
			every_system_within_border = {
				limit = {
					any_system = {
						has_star_flag = subject_system
						exists = starbase
					}
				}
				remove_star_flag = subject_system
			}
		}
	}

	after = {
		clear_global_event_target = defeated_country_systems
	}
}

#################
# Misc

# 9000 - Free

country_event = { # Unflag federation members who are not in federations anymore
	id = civpan.9100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_federation = no
	}

	immediate = {
		if = {
			limit = {
				has_country_flag = remove_from_civil_war
			}
			remove_country_flag = remove_from_civil_war
		}
	}
}

country_event = { # Remove flag from faction leaders who become rulers
	id = civpan.9200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		ruler = {
			OR = {
				has_leader_flag = civil_war_leader_governor_faction
				has_leader_flag = civil_war_leader_admiral_faction
				has_leader_flag = civil_war_leader_scientist_faction
				has_leader_flag = civil_war_leader_general_faction
			}
		}
	}

	immediate = {
		if = {
			limit = {
				ruler = {
					has_leader_flag = civil_war_leader_governor_faction
				}	
			}
			ruler = {
				remove_leader_flag = civil_war_leader_governor_faction
			}
		}
		else_if = {
			limit = {
				ruler = {
					has_leader_flag = civil_war_leader_admiral_faction
				}	
			}
			ruler = {
				remove_leader_flag = civil_war_leader_admiral_faction
			}
		}
		else_if = {
			limit = {
				ruler = {
					has_leader_flag = civil_war_leader_scientist_faction
				}	
			}
			ruler = {
				remove_leader_flag = civil_war_leader_scientist_faction
			}
		}
		else_if = {
			limit = {
				ruler = {
					has_leader_flag = civil_war_leader_general_faction
				}	
			}
			ruler = {
				remove_leader_flag = civil_war_leader_general_faction
			}
		}
	}
}

country_event = { # Remove flag from faction leaders who become Heirs
	id = civpan.9201
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = heir
		heir = {
			OR = {
				AND = {
					has_leader_flag = civil_war_leader_governor_faction
					has_leader_flag = appointed_heir
				}
				AND = {
					has_leader_flag = civil_war_leader_admiral_faction
					has_leader_flag = appointed_heir
				}
				AND = {
					has_leader_flag = civil_war_leader_scientist_faction
					has_leader_flag = appointed_heir
				}
				AND = {
					has_leader_flag = civil_war_leader_general_faction
					has_leader_flag = appointed_heir
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				heir = {
					has_leader_flag = civil_war_leader_governor_faction
				}	
			}
			heir = {
				remove_leader_flag = civil_war_leader_governor_faction
			}
		}
		else_if = {
			limit = {
				heir = {
					has_leader_flag = civil_war_leader_admiral_faction
				}	
			}
			heir = {
				remove_leader_flag = civil_war_leader_admiral_faction
			}
		}
		else_if = {
			limit = {
				heir = {
					has_leader_flag = civil_war_leader_scientist_faction
				}	
			}
			heir = {
				remove_leader_flag = civil_war_leader_scientist_faction
			}
		}
		else_if = {
			limit = {
				heir = {
					has_leader_flag = civil_war_leader_general_faction
				}	
			}
			heir = {
				remove_leader_flag = civil_war_leader_general_faction
			}
		}
	}
}

country_event = { # Remove flag sectors that are flagged
	id = civpan.9203
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_sector = {
			OR = {
				has_sector_flag = rebel_sector
				has_sector_flag = already_used
			}
		}
	}

	immediate = {
		while = {
			count = 10
			random_owned_sector = {
				limit = {
					has_sector_flag = rebel_sector
				}
				remove_sector_flag = rebel_sector
			}
			random_owned_sector = {
				limit = {
					has_sector_flag = already_used
				}
				remove_sector_flag = already_used
			}
		}
	}
}

country_event = { # Remove Extra civil_war_flip flags
	id = civpan.9204
	hide_window = yes
	is_triggered_only = yes

	immediate = {

		if = {
			limit = {
				any_system_within_border = {
					has_star_flag = civil_war_flip
				}
			}
			every_system_within_border = {
				limit = {
					has_star_flag = civil_war_flip
				}
				remove_star_flag = civil_war_flip
			}
		}
	}
}

event = { # Set Global Flag
	id = civpan.9300
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = civil_wars_active }
	}

	immediate = {
		set_global_flag = civil_wars_active
	}
}

country_event = { # Admiral Rebellion Rename after win - Status Quo
	id = civpan.9400
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_country_flag = civpan_fleet
	}

	immediate = {
		if = {
			limit = {
				num_owned_planets > 1
			}
			remove_country_flag = civpan_fleet
			capital_scope = {
				set_name = random
			}
			set_name = random
		}
		else = {
			set_country_flag = fleet_no_planets
			# set_name = random
		}
	}
}

country_event = { # Admiral Rebellion Rename after win - yearly fire
	id = civpan.9410
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_at_war = no
		num_owned_planets > 1
		has_country_flag = civpan_fleet
	}

	immediate = {

		if = {
			limit = {
				has_country_flag = fleet_no_planets
			}
			remove_country_flag = fleet_no_planets
		}

		remove_country_flag = civpan_fleet
		
		capital_scope = {
			set_name = random
		}
		set_name = random
	}
}

country_event = { # Kill Both Admirals if either dies
	id = civpan.9450
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			OR = {
				has_leader_flag = admiral_copy_1
				has_leader_flag = admiral_copy_2
			}
		}
	}

	immediate = {
		every_owned_leader = {
			limit = {
				OR = {
					has_leader_flag = admiral_copy_1
					has_leader_flag = admiral_copy_2
				}
			}
			kill_leader = { show_notification = no }
		}
	}
}

#effect every_galaxy_fleet = { set_event_locked = no }